(() => {
    var __webpack_modules__ = {
        4374: function (module, exports) {
            eval(
                'var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * DrawSVGPlugin 3.6.1\n * https://greensock.com\n * \n * @license Copyright 2021, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n */\n!function (e, t) {\n  "object" == ( false ? 0 : _typeof(exports)) && "undefined" != "object" ? t(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;\n}(this, function (e) {\n  "use strict";\n\n  function i() {\n    return "undefined" != typeof window;\n  }\n\n  function j() {\n    return a || i() && (a = window.gsap) && a.registerPlugin && a;\n  }\n\n  function m(e) {\n    return Math.round(1e4 * e) / 1e4;\n  }\n\n  function n(e) {\n    return parseFloat(e) || 0;\n  }\n\n  function o(e, t) {\n    var r = n(e);\n    return ~e.indexOf("%") ? r / 100 * t : r;\n  }\n\n  function p(e, t) {\n    return n(e.getAttribute(t));\n  }\n\n  function r(e, t, r, i, s, o) {\n    return P(Math.pow((n(r) - n(e)) * s, 2) + Math.pow((n(i) - n(t)) * o, 2));\n  }\n\n  function s(e) {\n    return console.warn(e);\n  }\n\n  function t(e) {\n    return "non-scaling-stroke" === e.getAttribute("vector-effect");\n  }\n\n  function w(e) {\n    if (!(e = v(e)[0])) return 0;\n    var n,\n        i,\n        o,\n        a,\n        f,\n        h,\n        d,\n        l = e.tagName.toLowerCase(),\n        u = e.style,\n        c = 1,\n        g = 1;\n    t(e) && (g = e.getScreenCTM(), c = P(g.a * g.a + g.b * g.b), g = P(g.d * g.d + g.c * g.c));\n\n    try {\n      i = e.getBBox();\n    } catch (e) {\n      s("Some browsers won\'t measure invisible elements (like display:none or masks inside defs).");\n    }\n\n    var _ = i || {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n        y = _.x,\n        w = _.y,\n        x = _.width,\n        m = _.height;\n\n    if (i && (x || m) || !k[l] || (x = p(e, k[l][0]), m = p(e, k[l][1]), "rect" !== l && "line" !== l && (x *= 2, m *= 2), "line" === l && (y = p(e, "x1"), w = p(e, "y1"), x = Math.abs(x - y), m = Math.abs(m - w))), "path" === l) a = u.strokeDasharray, u.strokeDasharray = "none", n = e.getTotalLength() || 0, c !== g && s("Warning: <path> length cannot be measured when vector-effect is non-scaling-stroke and the element isn\'t proportionally scaled."), n *= (c + g) / 2, u.strokeDasharray = a;else if ("rect" === l) n = 2 * x * c + 2 * m * g;else if ("line" === l) n = r(y, w, y + x, w + m, c, g);else if ("polyline" === l || "polygon" === l) for (o = e.getAttribute("points").match(b) || [], "polygon" === l && o.push(o[0], o[1]), n = 0, f = 2; f < o.length; f += 2) {\n      n += r(o[f - 2], o[f - 1], o[f], o[f + 1], c, g) || 0;\n    } else "circle" !== l && "ellipse" !== l || (h = x / 2 * c, d = m / 2 * g, n = Math.PI * (3 * (h + d) - P((3 * h + d) * (h + 3 * d))));\n    return n || 0;\n  }\n\n  function x(e, t) {\n    if (!(e = v(e)[0])) return [0, 0];\n    t = t || w(e) + 1;\n    var r = h.getComputedStyle(e),\n        i = r.strokeDasharray || "",\n        s = n(r.strokeDashoffset),\n        o = i.indexOf(",");\n    return o < 0 && (o = i.indexOf(" ")), t < (i = o < 0 ? t : n(i.substr(0, o))) && (i = t), [-s || 0, i - s || 0];\n  }\n\n  function y() {\n    i() && (h = window, l = a = j(), v = a.utils.toArray, d = -1 !== ((h.navigator || {}).userAgent || "").indexOf("Edge"));\n  }\n\n  var a,\n      v,\n      h,\n      d,\n      l,\n      b = /[-+=\\.]*\\d+[\\.e\\-\\+]*\\d*[e\\-\\+]*\\d*/gi,\n      k = {\n    rect: ["width", "height"],\n    circle: ["r", "r"],\n    ellipse: ["rx", "ry"],\n    line: ["x2", "y2"]\n  },\n      P = Math.sqrt,\n      f = {\n    version: "3.6.1",\n    name: "drawSVG",\n    register: function register(e) {\n      a = e, y();\n    },\n    init: function init(e, r) {\n      if (!e.getBBox) return !1;\n      l || y();\n      var i,\n          s,\n          a,\n          f = w(e);\n      return this._style = e.style, this._target = e, r + "" == "true" ? r = "0 100%" : r ? -1 === (r + "").indexOf(" ") && (r = "0 " + r) : r = "0 0", s = function _parse(e, t, n) {\n        var r,\n            i,\n            s = e.indexOf(" ");\n        return i = s < 0 ? (r = void 0 !== n ? n + "" : e, e) : (r = e.substr(0, s), e.substr(s + 1)), r = o(r, t), (i = o(i, t)) < r ? [i, r] : [r, i];\n      }(r, f, (i = x(e, f))[0]), this._length = m(f), this._dash = m(i[1] - i[0]), this._offset = m(-i[0]), this._dashPT = this.add(this, "_dash", this._dash, m(s[1] - s[0])), this._offsetPT = this.add(this, "_offset", this._offset, m(-s[0])), d && (a = h.getComputedStyle(e)).strokeLinecap !== a.strokeLinejoin && (s = n(a.strokeMiterlimit), this.add(e.style, "strokeMiterlimit", s, s + .01)), this._live = t(e) || ~(r + "").indexOf("live"), this._nowrap = ~(r + "").indexOf("nowrap"), this._props.push("drawSVG"), 1;\n    },\n    render: function render(e, t) {\n      var n,\n          r,\n          i,\n          s,\n          o = t._pt,\n          a = t._style;\n\n      if (o) {\n        for (t._live && (n = w(t._target)) !== t._length && (r = n / t._length, t._length = n, t._offsetPT && (t._offsetPT.s *= r, t._offsetPT.c *= r), t._dashPT ? (t._dashPT.s *= r, t._dashPT.c *= r) : t._dash *= r); o;) {\n          o.r(e, o.d), o = o._next;\n        }\n\n        i = t._dash || e && 1 !== e && 1e-4 || 0, n = t._length - i + .1, s = t._offset, i && s && i + Math.abs(s % t._length) > t._length - .2 && (s += s < 0 ? .1 : -.1) && (n += .1), a.strokeDashoffset = i ? s : s + .001, a.strokeDasharray = n < .2 ? "none" : i ? i + "px," + (t._nowrap ? 999999 : n) + "px" : "0px, 999999px";\n      }\n    },\n    getLength: w,\n    getPosition: x\n  };\n  j() && a.registerPlugin(f), e.DrawSVGPlugin = f, e["default"] = f;\n\n  if (typeof window === "undefined" || window !== e) {\n    Object.defineProperty(e, "__esModule", {\n      value: !0\n    });\n  } else {\n    delete e["default"];\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4374\n'
            );
        },
        6495: (__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {
            "use strict";
            eval(
                '\n;// CONCATENATED MODULE: ./app/src/js/app/appStore.js\n/* harmony default export */ const appStore = ({\n  main: null,\n  rootUrl: null,\n  isDesktop: null,\n  firstNavigation: null,\n  from: null,\n  to: null,\n  current: null,\n  currentSection: null,\n  client: {\n    browser: \'\',\n    device: \'\',\n    lang: \'es\',\n    os: \'\',\n    sizes: {\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    mousePosition: {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2\n    }\n  },\n  vars: {\n    vh: 0,\n    vho: 0,\n    vhr: 0,\n    vhd: 0\n  }\n});\n;// CONCATENATED MODULE: ./app/src/js/utils/string.js\n//Copyright 2018 Vicente Lucendo - vicen@vlucendo.com\nvar string = {\n  //converts a string number \'#FFFFFF\' to hex 0xffffff - it gets used on pixi\n  toHex: function toHex(str) {\n    return parseInt(str.substring(1), 16);\n  },\n  //true or false if text is on the string\n  contains: function contains(str, text) {\n    return str.indexOf(text) > -1;\n  }\n};\n;// CONCATENATED MODULE: ./app/src/js/utils/is.js\n//Copyright 2018 Vicente Lucendo - vicen@vlucendo.com\n\nvar is = {\n  array: function array(a) {\n    return Array.isArray(a);\n  },\n  object: function object(a) {\n    return string.contains(Object.prototype.toString.call(a), \'Object\');\n  },\n  path: function path(a) {\n    return is.obj(a) && a.hasOwnProperty(\'totalLength\');\n  },\n  //eslint-disable-line\n  svg: function svg(a) {\n    return a instanceof SVGElement;\n  },\n  node: function node(a) {\n    return a.nodeType || is.svg(a);\n  },\n  nodeList: function nodeList(a) {\n    return a instanceof NodeList || a instanceof HTMLCollection;\n  },\n  string: function string(a) {\n    return typeof a === \'string\';\n  },\n  number: function number(a) {\n    return !isNaN(parseFloat(a)) && isFinite(a);\n  },\n  "function": function _function(a) {\n    return typeof a === \'function\';\n  },\n  undefined: function undefined(a) {\n    return typeof a === \'undefined\';\n  },\n  hex: function hex(a) {\n    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a);\n  },\n  rgb: function rgb(a) {\n    return /^rgb/.test(a);\n  },\n  hsl: function hsl(a) {\n    return /^hsl/.test(a);\n  },\n  color: function color(a) {\n    return is.hex(a) || is.rgb(a) || is.hsl(a);\n  }\n};\n;// CONCATENATED MODULE: ./app/src/js/classes/domEvents.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n//Copyright 2018 Vicente Lucendo - vicen@vlucendo.com\n\n\nvar domEvents_default = /*#__PURE__*/function () {\n  function _default() {\n    _classCallCheck(this, _default);\n\n    this._eventCache = [];\n  }\n\n  _createClass(_default, [{\n    key: "_removeEvent",\n    value: function _removeEvent(index) {\n      //remove event listener\n      this._eventCache[index].node.removeEventListener(this._eventCache[index].action, this._eventCache[index].cb); //remove element from eventcache\n\n\n      this._eventCache.splice(index, 1);\n    }\n  }, {\n    key: "add",\n    value: function add(node, eventName, _func) {\n      var _this = this;\n\n      var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var arg = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var rLink = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n      //nodelist or single node?\n      var _nodes = is.nodeList(node) || is.array(node) ? node : [node]; //loop though the nodes\n\n\n      var _loop = function _loop(i) {\n        //create callback passing the event, argument and source node\n        var _cb = context !== false ? function (e) {\n          _func.call(context, e, arg, _nodes[i]);\n        } : function (e) {\n          _func(e, arg, _nodes[i]);\n        }; //add the event to the node event cache\n\n\n        _this._eventCache.push({\n          node: _nodes[i],\n          action: eventName,\n          func: _func,\n          cb: _cb,\n          routerLink: rLink\n        }); //add the event to the node\n\n\n        _nodes[i].addEventListener(eventName, _cb);\n      };\n\n      for (var i = 0; i < _nodes.length; i++) {\n        _loop(i);\n      }\n    } //this function removes non router events meeting the criteria\n\n  }, {\n    key: "remove",\n    value: function remove(node, eventName, func) {\n      //nodelist or single node?\n      var _nodes = is.nodeList(node) || is.array(node) ? node : [node]; //loop though the nodes\n\n\n      for (var k = 0; k < _nodes.length; k++) {\n        var i = 0;\n\n        while (i < this._eventCache.length) {\n          //check if it is the same node and is not a router link\n          if (this._eventCache[i].node === _nodes[k] && !this._eventCache[i].routerLink) {\n            if (eventName && func) {\n              if (this._eventCache[i].action === eventName && this._eventCache[i].func === func) this._removeEvent(i);else i++;\n            } else if (eventName) {\n              if (this._eventCache[i].action === eventName) this._removeEvent(i);else i++;\n            } else if (func) {\n              if (this._eventCache[i].func === func) this._removeEvent(i);else i++;\n            } else {\n              this._removeEvent(i);\n            }\n          } else {\n            i++;\n          }\n        }\n      }\n    } //this function removes all non router links\n\n  }, {\n    key: "removeAll",\n    value: function removeAll() {\n      var i = 0;\n\n      while (i < this._eventCache.length) {\n        if (!this._eventCache[i].routerLink) this._removeEvent(i);else i++;\n      }\n    } //this function removes everything, it must only be used by component classes after elements are removed\n    //from the dom so there are not problems with unbound router links clicked by the user refreshing the page\n\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      while (this._eventCache.length > 0) {\n        this._removeEvent(0);\n      }\n    }\n  }]);\n\n  return _default;\n}();\n\n\n// EXTERNAL MODULE: ./node_modules/gsap/index.js + 2 modules\nvar node_modules_gsap = __webpack_require__(6358);\n;// CONCATENATED MODULE: ./app/src/js/utils/strings.js\n/*!\n * strings: 3.2.6\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar _trimExp = /(^\\s+|\\s+$)/g;\nvar emojiExp = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF](?:[\\u200D\\uFE0F][\\uD800-\\uDBFF][\\uDC00-\\uDFFF]){2,}|\\uD83D\\uDC69(?:\\u200D(?:(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67|(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC6F\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])\\uFE0F|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708]))\\uFE0F|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83D\\uDC69\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]))|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\u200D(?:(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDD1-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])?|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])\\uFE0F)/;\nfunction getText(e) {\n  var type = e.nodeType,\n      result = "";\n\n  if (type === 1 || type === 9 || type === 11) {\n    if (typeof e.textContent === "string") {\n      return e.textContent;\n    } else {\n      for (e = e.firstChild; e; e = e.nextSibling) {\n        result += getText(e);\n      }\n    }\n  } else if (type === 3 || type === 4) {\n    return e.nodeValue;\n  }\n\n  return result;\n}\nfunction splitInnerHTML(element, delimiter, trim) {\n  var node = element.firstChild,\n      result = [];\n\n  while (node) {\n    if (node.nodeType === 3) {\n      result.push.apply(result, emojiSafeSplit((node.nodeValue + "").replace(/^\\n+/g, "").replace(/\\s+/g, " "), delimiter, trim));\n    } else if ((node.nodeName + "").toLowerCase() === "br") {\n      result[result.length - 1] += "<br>";\n    } else {\n      result.push(node.outerHTML);\n    }\n\n    node = node.nextSibling;\n  }\n\n  return result;\n}\n/*\n//smaller kb version that only handles the simpler emoji\'s, which is often perfectly adequate.\n\nlet _emoji = "[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2694-\\u2697]|\\uD83E[\\uDD10-\\uDD5D]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]",\n\t_emojiExp = new RegExp(_emoji),\n\t_emojiAndCharsExp = new RegExp(_emoji + "|.", "g"),\n\t_emojiSafeSplit = (text, delimiter, trim) => {\n\t\tif (trim) {\n\t\t\ttext = text.replace(_trimExp, "");\n\t\t}\n\t\treturn ((delimiter === "" || !delimiter) && _emojiExp.test(text)) ? text.match(_emojiAndCharsExp) : text.split(delimiter || "");\n\t};\n */\n\nfunction emojiSafeSplit(text, delimiter, trim) {\n  text += ""; // make sure it\'s cast as a string. Someone may pass in a number.\n\n  if (trim) {\n    text = text.replace(_trimExp, "");\n  }\n\n  if (delimiter && delimiter !== "") {\n    return text.replace(/>/g, "&gt;").replace(/</g, "&lt;").split(delimiter);\n  }\n\n  var result = [],\n      l = text.length,\n      i = 0,\n      j,\n      character;\n\n  for (; i < l; i++) {\n    character = text.charAt(i);\n\n    if (character.charCodeAt(0) >= 0xD800 && character.charCodeAt(0) <= 0xDBFF || text.charCodeAt(i + 1) >= 0xFE00 && text.charCodeAt(i + 1) <= 0xFE0F) {\n      //special emoji characters use 2 or 4 unicode characters that we must keep together.\n      j = ((text.substr(i, 12).split(emojiExp) || [])[1] || "").length || 2;\n      character = text.substr(i, j);\n      result.emoji = 1;\n      i += j - 1;\n    }\n\n    result.push(character === ">" ? "&gt;" : character === "<" ? "&lt;" : character);\n  }\n\n  return result;\n}\n;// CONCATENATED MODULE: ./app/src/js/classes/splitText.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * SplitText: 3.2.6\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\n\n\nvar _doc,\n    _win,\n    _coreInitted,\n    _stripExp = /(?:\\r|\\n|\\t\\t)/g,\n    //find carriage returns, new line feeds and double-tabs.\n_multipleSpacesExp = /(?:\\s\\s+)/g,\n    _initCore = function _initCore() {\n  _doc = document;\n  _win = window;\n  _coreInitted = 1;\n},\n    _bonusValidated = 1,\n    //<name>SplitText</name>\n_getComputedStyle = function _getComputedStyle(element) {\n  return _win.getComputedStyle(element);\n},\n    _isArray = Array.isArray,\n    _slice = [].slice,\n    _toArray = function _toArray(value, leaveStrings) {\n  //takes any value and returns an array. If it\'s a string (and leaveStrings isn\'t true), it\'ll use document.querySelectorAll() and convert that to an array. It\'ll also accept iterables like jQuery objects.\n  var type;\n  return _isArray(value) ? value : (type = _typeof(value)) === "string" && !leaveStrings && value ? _slice.call(_doc.querySelectorAll(value), 0) : value && type === "object" && "length" in value ? _slice.call(value, 0) : value ? [value] : [];\n},\n    _isAbsolute = function _isAbsolute(vars) {\n  return vars.position === "absolute" || vars.absolute === true;\n},\n    //some characters are combining marks (think diacritics/accents in European languages) which involve 2 or 4 characters that combine in the browser to form a single character. Pass in the remaining text and an array of the special characters to search for and if the text starts with one of those special characters, it\'ll spit back the number of characters to retain (often 2 or 4). Used in the specialChars features that was introduced in 0.6.0.\n_findSpecialChars = function _findSpecialChars(text, chars) {\n  var i = chars.length,\n      s;\n\n  while (--i > -1) {\n    s = chars[i];\n\n    if (text.substr(0, s.length) === s) {\n      return s.length;\n    }\n  }\n},\n    _divStart = " style=\'position:relative;display:inline-block;\'",\n    _cssClassFunc = function _cssClassFunc(cssClass, tag) {\n  if (cssClass === void 0) {\n    cssClass = "";\n  }\n\n  var iterate = ~cssClass.indexOf("++"),\n      num = 1;\n\n  if (iterate) {\n    cssClass = cssClass.split("++").join("");\n  }\n\n  return function () {\n    return "<" + tag + _divStart + (cssClass ? " class=\'" + cssClass + (iterate ? num++ : "") + "\'>" : ">");\n  };\n},\n    _swapText = function _swapText(element, oldText, newText) {\n  var type = element.nodeType;\n\n  if (type === 1 || type === 9 || type === 11) {\n    for (element = element.firstChild; element; element = element.nextSibling) {\n      _swapText(element, oldText, newText);\n    }\n  } else if (type === 3 || type === 4) {\n    element.nodeValue = element.nodeValue.split(oldText).join(newText);\n  }\n},\n    _pushReversed = function _pushReversed(a, merge) {\n  var i = merge.length;\n\n  while (--i > -1) {\n    a.push(merge[i]);\n  }\n},\n    _isBeforeWordDelimiter = function _isBeforeWordDelimiter(e, root, wordDelimiter) {\n  var next;\n\n  while (e && e !== root) {\n    next = e._next || e.nextSibling;\n\n    if (next) {\n      return next.textContent.charAt(0) === wordDelimiter;\n    }\n\n    e = e.parentNode || e._parent;\n  }\n},\n    _deWordify = function _deWordify(e) {\n  var children = _toArray(e.childNodes),\n      l = children.length,\n      i,\n      child;\n\n  for (i = 0; i < l; i++) {\n    child = children[i];\n\n    if (child._isSplit) {\n      _deWordify(child);\n    } else {\n      if (i && child.previousSibling.nodeType === 3) {\n        child.previousSibling.nodeValue += child.nodeType === 3 ? child.nodeValue : child.firstChild.nodeValue;\n      } else if (child.nodeType !== 3) {\n        e.insertBefore(child.firstChild, child);\n      }\n\n      e.removeChild(child);\n    }\n  }\n},\n    _getStyleAsNumber = function _getStyleAsNumber(name, computedStyle) {\n  return parseFloat(computedStyle[name]) || 0;\n},\n    _setPositionsAfterSplit = function _setPositionsAfterSplit(element, vars, allChars, allWords, allLines, origWidth, origHeight) {\n  var cs = _getComputedStyle(element),\n      paddingLeft = _getStyleAsNumber("paddingLeft", cs),\n      lineOffsetY = -999,\n      borderTopAndBottom = _getStyleAsNumber("borderBottomWidth", cs) + _getStyleAsNumber("borderTopWidth", cs),\n      borderLeftAndRight = _getStyleAsNumber("borderLeftWidth", cs) + _getStyleAsNumber("borderRightWidth", cs),\n      padTopAndBottom = _getStyleAsNumber("paddingTop", cs) + _getStyleAsNumber("paddingBottom", cs),\n      padLeftAndRight = _getStyleAsNumber("paddingLeft", cs) + _getStyleAsNumber("paddingRight", cs),\n      lineThreshold = _getStyleAsNumber("fontSize", cs) * 0.2,\n      textAlign = cs.textAlign,\n      charArray = [],\n      wordArray = [],\n      lineArray = [],\n      wordDelimiter = vars.wordDelimiter || " ",\n      tag = vars.tag ? vars.tag : vars.span ? "span" : "div",\n      types = vars.type || vars.split || "chars,words,lines",\n      lines = allLines && ~types.indexOf("lines") ? [] : null,\n      words = ~types.indexOf("words"),\n      chars = ~types.indexOf("chars"),\n      absolute = _isAbsolute(vars),\n      linesClass = vars.linesClass,\n      iterateLine = ~(linesClass || "").indexOf("++"),\n      spaceNodesToRemove = [],\n      i,\n      j,\n      l,\n      node,\n      nodes,\n      isChild,\n      curLine,\n      addWordSpaces,\n      style,\n      lineNode,\n      lineWidth,\n      offset;\n\n  if (iterateLine) {\n    linesClass = linesClass.split("++").join("");\n  } //copy all the descendant nodes into an array (we can\'t use a regular nodeList because it\'s live and we may need to renest things)\n\n\n  j = element.getElementsByTagName("*");\n  l = j.length;\n  nodes = [];\n\n  for (i = 0; i < l; i++) {\n    nodes[i] = j[i];\n  } //for absolute positioning, we need to record the x/y offsets and width/height for every <div>. And even if we\'re not positioning things absolutely, in order to accommodate lines, we must figure out where the y offset changes so that we can sense where the lines break, and we populate the lines array.\n\n\n  if (lines || absolute) {\n    for (i = 0; i < l; i++) {\n      node = nodes[i];\n      isChild = node.parentNode === element;\n\n      if (isChild || absolute || chars && !words) {\n        offset = node.offsetTop;\n\n        if (lines && isChild && Math.abs(offset - lineOffsetY) > lineThreshold && (node.nodeName !== "BR" || i === 0)) {\n          //we found some rare occasions where a certain character like &#8209; could cause the offsetTop to be off by 1 pixel, so we build in a threshold.\n          curLine = [];\n          lines.push(curLine);\n          lineOffsetY = offset;\n        }\n\n        if (absolute) {\n          //record offset x and y, as well as width and height so that we can access them later for positioning. Grabbing them at once ensures we don\'t trigger a browser paint & we maximize performance.\n          node._x = node.offsetLeft;\n          node._y = offset;\n          node._w = node.offsetWidth;\n          node._h = node.offsetHeight;\n        }\n\n        if (lines) {\n          if (node._isSplit && isChild || !chars && isChild || words && isChild || !words && node.parentNode.parentNode === element && !node.parentNode._isSplit) {\n            curLine.push(node);\n            node._x -= paddingLeft;\n\n            if (_isBeforeWordDelimiter(node, element, wordDelimiter)) {\n              node._wordEnd = true;\n            }\n          }\n\n          if (node.nodeName === "BR" && (node.nextSibling && node.nextSibling.nodeName === "BR" || i === 0)) {\n            //two consecutive <br> tags signify a new [empty] line. Also, if the entire block of content STARTS with a <br>, add a line.\n            lines.push([]);\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < l; i++) {\n    node = nodes[i];\n    isChild = node.parentNode === element;\n\n    if (node.nodeName === "BR") {\n      if (lines || absolute) {\n        if (node.parentNode) {\n          node.parentNode.removeChild(node);\n        }\n\n        nodes.splice(i--, 1);\n        l--;\n      } else if (!words) {\n        element.appendChild(node);\n      }\n\n      continue;\n    }\n\n    if (absolute) {\n      style = node.style;\n\n      if (!words && !isChild) {\n        node._x += node.parentNode._x;\n        node._y += node.parentNode._y;\n      }\n\n      style.left = node._x + "px";\n      style.top = node._y + "px";\n      style.position = "absolute";\n      style.display = "block"; //if we don\'t set the width/height, things collapse in older versions of IE and the origin for transforms is thrown off in all browsers.\n\n      style.width = node._w + 1 + "px"; //IE is 1px short sometimes. Avoid wrapping\n\n      style.height = node._h + "px";\n    }\n\n    if (!words && chars) {\n      //we always start out wrapping words in their own <div> so that line breaks happen correctly, but here we\'ll remove those <div> tags if necessary and renest the characters directly into the element rather than inside the word <div>\n      if (node._isSplit) {\n        node._next = node.nextSibling;\n        node.parentNode.appendChild(node); //put it at the end to keep the order correct.\n      } else if (node.parentNode._isSplit) {\n        node._parent = node.parentNode;\n\n        if (!node.previousSibling && node.firstChild) {\n          node.firstChild._isFirst = true;\n        }\n\n        if (node.nextSibling && node.nextSibling.textContent === " " && !node.nextSibling.nextSibling) {\n          //if the last node inside a nested element is just a space (like T<span>nested </span>), remove it otherwise it\'ll get placed in the wrong order. Don\'t remove it right away, though, because we need to sense when words/characters are before a space like _isBeforeWordDelimiter(). Removing it now would make that a false negative.\n          spaceNodesToRemove.push(node.nextSibling);\n        }\n\n        node._next = node.nextSibling && node.nextSibling._isFirst ? null : node.nextSibling;\n        node.parentNode.removeChild(node);\n        nodes.splice(i--, 1);\n        l--;\n      } else if (!isChild) {\n        offset = !node.nextSibling && _isBeforeWordDelimiter(node.parentNode, element, wordDelimiter); //if this is the last letter in the word (and we\'re not breaking by lines and not positioning things absolutely), we need to add a space afterwards so that the characters don\'t just mash together\n\n        if (node.parentNode._parent) {\n          node.parentNode._parent.appendChild(node);\n        }\n\n        if (offset) {\n          node.parentNode.appendChild(_doc.createTextNode(" "));\n        }\n\n        if (tag === "span") {\n          node.style.display = "inline"; //so that word breaks are honored properly.\n        }\n\n        charArray.push(node);\n      }\n    } else if (node.parentNode._isSplit && !node._isSplit && node.innerHTML !== "") {\n      wordArray.push(node);\n    } else if (chars && !node._isSplit) {\n      if (tag === "span") {\n        node.style.display = "inline";\n      }\n\n      charArray.push(node);\n    }\n  }\n\n  i = spaceNodesToRemove.length;\n\n  while (--i > -1) {\n    spaceNodesToRemove[i].parentNode.removeChild(spaceNodesToRemove[i]);\n  }\n\n  if (lines) {\n    //the next 7 lines just give us the line width in the most reliable way and figure out the left offset (if position isn\'t relative or absolute). We must set the width along with text-align to ensure everything works properly for various alignments.\n    if (absolute) {\n      lineNode = _doc.createElement(tag);\n      element.appendChild(lineNode);\n      lineWidth = lineNode.offsetWidth + "px";\n      offset = lineNode.offsetParent === element ? 0 : element.offsetLeft;\n      element.removeChild(lineNode);\n    }\n\n    style = element.style.cssText;\n    element.style.cssText = "display:none;"; //to improve performance, set display:none on the element so that the browser doesn\'t have to worry about reflowing or rendering while we\'re renesting things. We\'ll revert the cssText later.\n    //we can\'t use element.innerHTML = "" because that causes IE to literally delete all the nodes and their content even though we\'ve stored them in an array! So we must loop through the children and remove them.\n\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n\n    addWordSpaces = wordDelimiter === " " && (!absolute || !words && !chars);\n\n    for (i = 0; i < lines.length; i++) {\n      curLine = lines[i];\n      lineNode = _doc.createElement(tag);\n      lineNode.style.cssText = "display:block;text-align:" + textAlign + ";position:" + (absolute ? "absolute;" : "relative;");\n\n      if (linesClass) {\n        lineNode.className = linesClass + (iterateLine ? i + 1 : "");\n      }\n\n      lineArray.push(lineNode);\n      l = curLine.length;\n\n      for (j = 0; j < l; j++) {\n        if (curLine[j].nodeName !== "BR") {\n          node = curLine[j];\n          lineNode.appendChild(node);\n\n          if (addWordSpaces && node._wordEnd) {\n            lineNode.appendChild(_doc.createTextNode(" "));\n          }\n\n          if (absolute) {\n            if (j === 0) {\n              lineNode.style.top = node._y + "px";\n              lineNode.style.left = paddingLeft + offset + "px";\n            }\n\n            node.style.top = "0px";\n\n            if (offset) {\n              node.style.left = node._x - offset + "px";\n            }\n          }\n        }\n      }\n\n      if (l === 0) {\n        //if there are no nodes in the line (typically meaning there were two consecutive <br> tags, just add a non-breaking space so that things display properly.\n        lineNode.innerHTML = "&nbsp;";\n      } else if (!words && !chars) {\n        _deWordify(lineNode);\n\n        _swapText(lineNode, String.fromCharCode(160), " ");\n      }\n\n      if (absolute) {\n        lineNode.style.width = lineWidth;\n        lineNode.style.height = node._h + "px";\n      }\n\n      element.appendChild(lineNode);\n    }\n\n    element.style.cssText = style;\n  } //if everything shifts to being position:absolute, the container can collapse in terms of height or width, so fix that here.\n\n\n  if (absolute) {\n    if (origHeight > element.clientHeight) {\n      element.style.height = origHeight - padTopAndBottom + "px";\n\n      if (element.clientHeight < origHeight) {\n        //IE8 and earlier use a different box model - we must include padding and borders\n        element.style.height = origHeight + borderTopAndBottom + "px";\n      }\n    }\n\n    if (origWidth > element.clientWidth) {\n      element.style.width = origWidth - padLeftAndRight + "px";\n\n      if (element.clientWidth < origWidth) {\n        //IE8 and earlier use a different box model - we must include padding and borders\n        element.style.width = origWidth + borderLeftAndRight + "px";\n      }\n    }\n  }\n\n  _pushReversed(allChars, charArray);\n\n  if (words) {\n    _pushReversed(allWords, wordArray);\n  }\n\n  _pushReversed(allLines, lineArray);\n},\n    _splitRawText = function _splitRawText(element, vars, wordStart, charStart) {\n  var tag = vars.tag ? vars.tag : vars.span ? "span" : "div",\n      types = vars.type || vars.split || "chars,words,lines",\n      //words = (types.indexOf("words") !== -1),\n  chars = ~types.indexOf("chars"),\n      absolute = _isAbsolute(vars),\n      wordDelimiter = vars.wordDelimiter || " ",\n      space = wordDelimiter !== " " ? "" : absolute ? "&#173; " : " ",\n      wordEnd = "</" + tag + ">",\n      wordIsOpen = 1,\n      specialChars = vars.specialChars ? typeof vars.specialChars === "function" ? vars.specialChars : _findSpecialChars : null,\n      //specialChars can be an array or a function. For performance reasons, we always set this local "specialChars" to a function to which we pass the remaining text and whatever the original vars.specialChars was so that if it\'s an array, it works with the _findSpecialChars() function.\n  text,\n      splitText,\n      i,\n      j,\n      l,\n      character,\n      hasTagStart,\n      testResult,\n      container = _doc.createElement("div"),\n      parent = element.parentNode;\n\n  parent.insertBefore(container, element);\n  container.textContent = element.nodeValue;\n  parent.removeChild(element);\n  element = container;\n  text = getText(element);\n  hasTagStart = text.indexOf("<") !== -1;\n\n  if (vars.reduceWhiteSpace !== false) {\n    text = text.replace(_multipleSpacesExp, " ").replace(_stripExp, "");\n  }\n\n  if (hasTagStart) {\n    text = text.split("<").join("{{LT}}"); //we can\'t leave "<" in the string, or when we set the innerHTML, it can be interpreted as a node\n  }\n\n  l = text.length;\n  splitText = (text.charAt(0) === " " ? space : "") + wordStart();\n\n  for (i = 0; i < l; i++) {\n    character = text.charAt(i);\n\n    if (specialChars && (testResult = specialChars(text.substr(i), vars.specialChars))) {\n      // look for any specialChars that were declared. Remember, they can be passed in like {specialChars:["मी", "पा", "है"]} or a function could be defined instead. Either way, the function should return the number of characters that should be grouped together for this "character".\n      character = text.substr(i, testResult || 1);\n      splitText += chars && character !== " " ? charStart() + character + "</" + tag + ">" : character;\n      i += testResult - 1;\n    } else if (character === wordDelimiter && text.charAt(i - 1) !== wordDelimiter && i) {\n      splitText += wordIsOpen ? wordEnd : "";\n      wordIsOpen = 0;\n\n      while (text.charAt(i + 1) === wordDelimiter) {\n        //skip over empty spaces (to avoid making them words)\n        splitText += space;\n        i++;\n      }\n\n      if (i === l - 1) {\n        splitText += space;\n      } else if (text.charAt(i + 1) !== ")") {\n        splitText += space + wordStart();\n        wordIsOpen = 1;\n      }\n    } else if (character === "{" && text.substr(i, 6) === "{{LT}}") {\n      splitText += chars ? charStart() + "{{LT}}" + "</" + tag + ">" : "{{LT}}";\n      i += 5;\n    } else if (character.charCodeAt(0) >= 0xD800 && character.charCodeAt(0) <= 0xDBFF || text.charCodeAt(i + 1) >= 0xFE00 && text.charCodeAt(i + 1) <= 0xFE0F) {\n      //special emoji characters use 2 or 4 unicode characters that we must keep together.\n      j = ((text.substr(i, 12).split(emojiExp) || [])[1] || "").length || 2;\n      splitText += chars && character !== " " ? charStart() + text.substr(i, j) + "</" + tag + ">" : text.substr(i, j);\n      i += j - 1;\n    } else {\n      splitText += chars && character !== " " ? charStart() + character + "</" + tag + ">" : character;\n    }\n  }\n\n  element.outerHTML = splitText + (wordIsOpen ? wordEnd : "");\n\n  if (hasTagStart) {\n    _swapText(parent, "{{LT}}", "<"); //note: don\'t perform this on "element" because that gets replaced with all new elements when we set element.outerHTML.\n\n  }\n},\n    _split = function _split(element, vars, wordStart, charStart) {\n  var children = _toArray(element.childNodes),\n      l = children.length,\n      absolute = _isAbsolute(vars),\n      i,\n      child;\n\n  if (element.nodeType !== 3 || l > 1) {\n    vars.absolute = false;\n\n    for (i = 0; i < l; i++) {\n      child = children[i];\n\n      if (child.nodeType !== 3 || /\\S+/.test(child.nodeValue)) {\n        if (absolute && child.nodeType !== 3 && _getComputedStyle(child).display === "inline") {\n          //if there\'s a child node that\'s display:inline, switch it to inline-block so that absolute positioning works properly (most browsers don\'t report offsetTop/offsetLeft properly inside a <span> for example)\n          child.style.display = "inline-block";\n          child.style.position = "relative";\n        }\n\n        child._isSplit = true;\n\n        _split(child, vars, wordStart, charStart); //don\'t split lines on child elements\n\n      }\n    }\n\n    vars.absolute = absolute;\n    element._isSplit = true;\n    return;\n  }\n\n  _splitRawText(element, vars, wordStart, charStart);\n};\n\nvar SplitText = /*#__PURE__*/function () {\n  function SplitText(element, vars) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    this.elements = _toArray(element);\n    this.chars = [];\n    this.words = [];\n    this.lines = [];\n    this._originals = [];\n    this.vars = vars || {};\n\n    if (_bonusValidated) {\n      this.split(vars);\n    }\n  }\n\n  var _proto = SplitText.prototype;\n\n  _proto.split = function split(vars) {\n    if (this.isSplit) {\n      this.revert();\n    }\n\n    this.vars = vars = vars || this.vars;\n    this._originals.length = this.chars.length = this.words.length = this.lines.length = 0;\n\n    var i = this.elements.length,\n        tag = vars.tag ? vars.tag : vars.span ? "span" : "div",\n        wordStart = _cssClassFunc(vars.wordsClass, tag),\n        charStart = _cssClassFunc(vars.charsClass, tag),\n        origHeight,\n        origWidth,\n        e; //we split in reversed order so that if/when we position:absolute elements, they don\'t affect the position of the ones after them in the document flow (shifting them up as they\'re taken out of the document flow).\n\n\n    while (--i > -1) {\n      e = this.elements[i];\n      this._originals[i] = e.innerHTML;\n      origHeight = e.clientHeight;\n      origWidth = e.clientWidth;\n\n      _split(e, vars, wordStart, charStart);\n\n      _setPositionsAfterSplit(e, vars, this.chars, this.words, this.lines, origWidth, origHeight);\n    }\n\n    this.chars.reverse();\n    this.words.reverse();\n    this.lines.reverse();\n    this.isSplit = true;\n    return this;\n  };\n\n  _proto.revert = function revert() {\n    var originals = this._originals;\n\n    if (!originals) {\n      throw "revert() call wasn\'t scoped properly.";\n    }\n\n    this.elements.forEach(function (e, i) {\n      return e.innerHTML = originals[i];\n    });\n    this.chars = [];\n    this.words = [];\n    this.lines = [];\n    this.isSplit = false;\n    return this;\n  };\n\n  SplitText.create = function create(element, vars) {\n    return new SplitText(element, vars);\n  };\n\n  return SplitText;\n}();\nSplitText.version = "3.2.6";\n\n// EXTERNAL MODULE: ./node_modules/prevent-scrolling/dist/index.js\nvar dist = __webpack_require__(2912);\n;// CONCATENATED MODULE: ./app/src/js/app/appUi.js\nfunction appUi_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction appUi_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction appUi_createClass(Constructor, protoProps, staticProps) { if (protoProps) appUi_defineProperties(Constructor.prototype, protoProps); if (staticProps) appUi_defineProperties(Constructor, staticProps); return Constructor; }\n\n// App\n\n // Classes\n\n // GSAP Library\n\n\n\n\nvar _singleton = null;\n\nvar appUi = /*#__PURE__*/function () {\n  function appUi(data) {\n    appUi_classCallCheck(this, appUi);\n\n    if (!_singleton) {\n      this.data = data;\n      _singleton = this;\n    } else {\n      return _singleton;\n    } // Store\n\n\n    this.appStore = appStore; // App references\n\n    this.appCore = new app_appCore(); // Events\n\n    this.domEvents = new domEvents_default();\n    this.menu = null;\n    this.guides = null;\n    this.background = null;\n    this.isAnimating = false;\n    this.isOpen = false;\n    this.appStore.firstNavigation = this.appStore.currentSection === null;\n  }\n\n  appUi_createClass(appUi, [{\n    key: "selectors",\n    value: function selectors() {\n      // Default\n      this.$app = document.getElementById(\'app\');\n      this.$mask = document.getElementById(\'mask\');\n      this.$header = document.getElementById(\'header\');\n      this.$trigger = document.getElementById(\'trigger\');\n      this.$logo = document.getElementById(\'logo\');\n      this.$requestButton = document.getElementById(\'button--request\');\n      this.$circleButton = document.getElementById(\'button--circle\'); // Menu\n\n      this.$menu = document.getElementById(\'menu\');\n\n      if (this.$menu) {\n        this.$menuMask = this.$menu.querySelector(\'.menu__mask\');\n        this.$menuContent = this.$menu.querySelector(\'.menu__content\');\n        this.$menuLinks = this.$menu.querySelectorAll(\'li\');\n      } // Guides\n\n\n      this.$guides = document.getElementById(\'guides\');\n\n      if (this.$guides) {\n        this.$guidesSwitcher = this.$guides.querySelector(\'.guides__switcher\');\n        this.$guidesSwitcher2 = this.$guides.querySelector(\'.guides__switcher2\');\n        this.$guidesHr = this.$guides.querySelector(\'.guides__horizontal\');\n        this.$guidesVr = this.$guides.querySelector(\'.guides__vertical\');\n        this.$guidesHr2 = this.$guides.querySelector(\'.guides__horizontal2\');\n        this.$guidesVr2 = this.$guides.querySelector(\'.guides__vertical2\');\n      } // Loader\n      // this.$loader = document.getElementById(\'loader\');\n      // if(this.$loader)\n      // {\n      //     this.$loaderInner = this.$loader.querySelector(\'.inner\');\n      //     this.$loaderProgress = this.$loader.querySelector(\'.inner .progress\');\n      // }\n      // Cookies\n\n\n      this.$cookies = document.getElementById(\'cookie-law-info-bar\');\n\n      if (this.$cookies) {\n        this.$cookiesButton = document.querySelectorAll(\'a.medium\');\n        this.$cookiesModal = document.querySelector(\'.cli-modal\');\n        this.$cookiesSave = this.$cookiesModal.querySelector(\'a#wt-cli-privacy-save-btn\');\n        this.$cookiesCategory = this.$cookiesModal.querySelectorAll(\'a.cli-nav-link\');\n      } // Notice\n\n\n      this.$notice = document.getElementById(\'notice\');\n    }\n  }, {\n    key: "events",\n    value: function events() {\n      var _this = this;\n\n      if (this.$guides) {\n        this.domEvents.add(this.$guidesSwitcher, \'click\', function () {\n          _this.guidesSwitcher();\n        });\n        this.domEvents.add(this.$guidesSwitcher2, \'click\', function () {\n          _this.guidesSwitcher2();\n        });\n      }\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      if (this.$menuLinks) {\n        for (var i = 0; i < this.$menuLinks.length; i++) {\n          // eslint-disable-next-line no-new\n          new SplitText(this.$menuLinks[i], {\n            type: \'lines words chars\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\',\n            charsClass: \'char char--++\'\n          });\n          var chars = this.$menuLinks[i].querySelectorAll(\'.char\');\n\n          for (var j = 0; j < chars.length; j++) {\n            node_modules_gsap/* default.set */.ZP.set(chars[j], {\n              opacity: 0.0001,\n              y: \'-100%\',\n              rotation: \'3deg\'\n            });\n          }\n        }\n      }\n\n      if (this.$cookies) {\n        // Cookies\n        if (this.$cookiesButton) {\n          // eslint-disable-next-line no-script-url\n          var disabled = \'javascript: void(0)\';\n\n          for (var _i = 0; _i < this.$cookiesButton.length; _i++) {\n            this.$cookiesButton[_i].setAttribute(\'href\', disabled);\n          }\n        }\n\n        if (this.$cookiesModal) {\n          // eslint-disable-next-line no-script-url\n          var _disabled = \'javascript: void(0)\';\n          this.$cookiesSave.setAttribute(\'href\', _disabled);\n\n          for (var _i2 = 0; _i2 < this.$cookiesCategory.length; _i2++) {\n            this.$cookiesCategory[_i2].setAttribute(\'href\', _disabled);\n          }\n        }\n      }\n    }\n  }, {\n    key: "hideLoader",\n    value: function hideLoader() {\n      var _this2 = this;\n\n      // Opacity\n      if (this.appStore.current !== \'home\') {\n        node_modules_gsap/* default.to */.ZP.to(this.appStore.currentSection.wrap, {\n          opacity: 1,\n          duration: 1,\n          ease: \'power2.out\',\n          onComplete: function onComplete() {\n            if (_this2.$cookies) node_modules_gsap/* default.to */.ZP.to(_this2.$cookies, {\n              opacity: 1,\n              duration: 1,\n              ease: \'power2.out\'\n            });\n          }\n        });\n      } else {\n        node_modules_gsap/* default.to */.ZP.to(this.appStore.currentSection.wrap, {\n          opacity: 1,\n          duration: 1,\n          ease: \'power2.out\',\n          onComplete: function onComplete() {\n            if (!_this2.appStore.isDesktop) node_modules_gsap/* default.to */.ZP.to(_this2.$cookies, {\n              opacity: 1,\n              duration: 1,\n              ease: \'power2.out\'\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: "showHeader",\n    value: function showHeader() {\n      if (this.appStore.isDesktop) node_modules_gsap/* default.to */.ZP.to(this.$header, {\n        opacity: 1,\n        duration: 1.2,\n        ease: \'power2.out\'\n      });else node_modules_gsap/* default.to */.ZP.to(this.$header, {\n        opacity: 1,\n        duration: 0.8,\n        ease: \'power2.out\'\n      });\n    }\n  }, {\n    key: "hideHeader",\n    value: function hideHeader() {\n      node_modules_gsap/* default.to */.ZP.to(this.$header, {\n        opacity: 0.0001,\n        duration: 0.4,\n        ease: \'power2.out\'\n      });\n    }\n  }, {\n    key: "goLight",\n    value: function goLight() {// gsap.to(document.body, { backgroundColor: \'#FFFFFF\', duration: 1.2, ease: \'power2.out\' });\n    }\n  }, {\n    key: "goDark",\n    value: function goDark() {// gsap.to(document.body, { backgroundColor: \'#000A33\', duration: 1.2, ease: \'power2.out\' });\n    }\n  }, {\n    key: "enterTrigger",\n    value: function enterTrigger() {\n      if (this.isOpen) return;\n      node_modules_gsap/* default.killTweensOf */.ZP.killTweensOf(this.$trigger.children[0].children[0], this.$trigger.children[0].children[1]);\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[0], {\n        y: \'-200%\',\n        duration: 0.6,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[1], {\n        y: \'110%\',\n        duration: 0.6,\n        ease: \'expo.out\'\n      });\n    }\n  }, {\n    key: "leaveTrigger",\n    value: function leaveTrigger() {\n      if (this.isOpen) return;\n      node_modules_gsap/* default.killTweensOf */.ZP.killTweensOf(this.$trigger.children[0].children[0], this.$trigger.children[0].children[1]);\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[0], {\n        y: \'-350%\',\n        duration: 0.6,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[1], {\n        y: \'260%\',\n        duration: 0.6,\n        ease: \'expo.out\'\n      });\n    }\n  }, {\n    key: "openMenu",\n    value: function openMenu() {\n      var _this3 = this;\n\n      if (this.isAnimating) return;\n      this.isAnimating = true;\n      this.isOpen = true;\n      if (this.appStore.isDesktop) this.appStore.currentSection.superScroller._scroll.enable = false;else this.disableScroll();\n\n      if (!this.appStore.isDesktop) {\n        node_modules_gsap/* default.to */.ZP.to(this.$logo, {\n          opacity: 0.0001,\n          duration: 0.2,\n          ease: \'power2.out\',\n          onComplete: function onComplete() {\n            node_modules_gsap/* default.set */.ZP.set(_this3.$logo, {\n              display: \'none\'\n            });\n          }\n        });\n      }\n\n      node_modules_gsap/* default.set */.ZP.set(this.$menu, {\n        display: \'block\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[0], {\n        y: \'-50%\',\n        rotation: 45,\n        duration: 1.2,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[1], {\n        y: \'-50%\',\n        rotation: -45,\n        duration: 1.2,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$menuMask, {\n        opacity: 1,\n        duration: 0.4,\n        ease: \'power2.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$menuContent, {\n        scaleY: 1,\n        duration: 1,\n        ease: \'expo.inOut\'\n      });\n      if (!this.appStore.isDesktop) node_modules_gsap/* default.to */.ZP.to(this.$requestButton, {\n        opacity: 1,\n        duration: 0.8,\n        ease: \'power2.out\',\n        delay: 1\n      });\n\n      for (var i = 0; i < this.$menuLinks.length; i++) {\n        var chars = this.$menuLinks[i].querySelectorAll(\'.char\');\n\n        for (var j = 0; j < chars.length; j++) {\n          node_modules_gsap/* default.to */.ZP.to(chars[j], {\n            opacity: 1,\n            y: \'0%\',\n            rotation: 0,\n            ease: \'expo.inOut\',\n            duration: 1,\n            delay: 0.3 + j * 0.01\n          });\n        }\n      }\n    }\n  }, {\n    key: "closeMenu",\n    value: function closeMenu() {\n      var _this4 = this;\n\n      if (!this.appStore.isDesktop) node_modules_gsap/* default.set */.ZP.set(this.$logo, {\n        display: \'block\'\n      });\n\n      for (var i = 0; i < this.$menuLinks.length; i++) {\n        var chars = this.$menuLinks[i].querySelectorAll(\'.char\');\n        node_modules_gsap/* default.to */.ZP.to(chars, {\n          opacity: 0.0001,\n          y: \'-100%\',\n          rotation: \'3deg\',\n          stagger: 0.01,\n          ease: \'expo.inOut\',\n          duration: 0.5\n        });\n      }\n\n      node_modules_gsap/* default.to */.ZP.to(this.$menuContent, {\n        scaleY: 0,\n        duration: 0.6,\n        ease: \'expo.inOut\',\n        delay: 0.6\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[0], {\n        y: this.appStore.isDesktop ? \'-350%\' : \'-500%\',\n        rotation: 0,\n        duration: 1.2,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[1], {\n        y: this.appStore.isDesktop ? \'260%\' : \'400%\',\n        rotation: 0,\n        duration: 1.2,\n        ease: \'expo.out\'\n      });\n\n      if (!this.appStore.isDesktop) {\n        node_modules_gsap/* default.to */.ZP.to(this.$requestButton, {\n          opacity: 0.0001,\n          duration: 0.6,\n          ease: \'power2.out\',\n          delay: 0.4\n        });\n        if (document.documentElement.scrollTop === 0) node_modules_gsap/* default.to */.ZP.to(this.$logo, {\n          opacity: 1,\n          duration: 0.1,\n          ease: \'power2.out\',\n          delay: 1.2\n        });\n      }\n\n      node_modules_gsap/* default.to */.ZP.to(this.$menuMask, {\n        opacity: 0.0001,\n        duration: 0.6,\n        ease: \'power2.out\',\n        delay: 0.6,\n        onComplete: function onComplete() {\n          if (_this4.appStore.isDesktop) _this4.appStore.currentSection.superScroller._scroll.enable = true;else _this4.enableScroll();\n          node_modules_gsap/* default.set */.ZP.set(_this4.$menu, {\n            display: \'none\'\n          }); // gsap.set(this.$trigger, { pointerEvents: \'initial\' });\n\n          _this4.isAnimating = false;\n          _this4.isOpen = false;\n        }\n      });\n    }\n  }, {\n    key: "closeMenuOpacity",\n    value: function closeMenuOpacity() {\n      var _this5 = this;\n\n      if (!this.appStore.isDesktop) node_modules_gsap/* default.set */.ZP.set(this.$logo, {\n        display: \'block\'\n      });\n\n      for (var i = 0; i < this.$menuLinks.length; i++) {\n        var chars = this.$menuLinks[i].querySelectorAll(\'.char\');\n        node_modules_gsap/* default.to */.ZP.to(chars, {\n          opacity: 0.0001,\n          y: \'-100%\',\n          rotation: \'3deg\',\n          stagger: 0.01,\n          ease: \'expo.inOut\',\n          duration: 0.5\n        });\n      }\n\n      node_modules_gsap/* default.to */.ZP.to(this.$menuContent, {\n        scaleY: 0,\n        duration: 0.6,\n        ease: \'expo.inOut\',\n        delay: 0.6\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[0], {\n        y: this.appStore.isDesktop ? \'-350%\' : \'-500%\',\n        rotation: 0,\n        duration: 1.2,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$trigger.children[0].children[1], {\n        y: this.appStore.isDesktop ? \'260%\' : \'400%\',\n        rotation: 0,\n        duration: 1.2,\n        ease: \'expo.out\'\n      });\n\n      if (!this.appStore.isDesktop) {\n        node_modules_gsap/* default.to */.ZP.to(this.$requestButton, {\n          opacity: 0.0001,\n          duration: 0.6,\n          ease: \'power2.out\',\n          delay: 0.4\n        });\n        if (document.documentElement.scrollTop === 0) node_modules_gsap/* default.to */.ZP.to(this.$logo, {\n          opacity: 1,\n          duration: 0.1,\n          ease: \'power2.out\',\n          delay: 1.2\n        });\n      }\n\n      node_modules_gsap/* default.to */.ZP.to(this.$menu, {\n        opacity: 0.0001,\n        duration: 0.4,\n        ease: \'power2.out\',\n        onComplete: function onComplete() {\n          if (_this5.appStore.isDesktop) _this5.appStore.currentSection.superScroller._scroll.enable = true;\n          node_modules_gsap/* default.set */.ZP.set(_this5.$menu, {\n            display: \'none\'\n          });\n          _this5.isAnimating = false;\n          _this5.isOpen = false;\n        }\n      });\n    }\n  }, {\n    key: "enableScroll",\n    value: function enableScroll() {\n      document.documentElement.classList.remove(\'noscroll\');\n      (0,dist/* ReEnableScrolling */.A_)();\n    }\n  }, {\n    key: "disableScroll",\n    value: function disableScroll() {\n      document.documentElement.classList.add(\'noscroll\');\n      (0,dist/* PreventScrolling */.Kh)(Array.from(document.querySelectorAll(\'[prevent-scrolling-disabled]\')));\n    }\n  }, {\n    key: "guidesSwitcher",\n    value: function guidesSwitcher() {\n      if (this.$guidesHr.style.display === \'block\') {\n        node_modules_gsap/* default.set */.ZP.set(this.$guidesHr, {\n          display: \'none\'\n        });\n        node_modules_gsap/* default.set */.ZP.set(this.$guidesVr, {\n          display: \'none\'\n        });\n      } else {\n        node_modules_gsap/* default.set */.ZP.set(this.$guidesHr, {\n          display: \'block\'\n        });\n        node_modules_gsap/* default.set */.ZP.set(this.$guidesVr, {\n          display: \'block\'\n        });\n      }\n    }\n  }, {\n    key: "guidesSwitcher2",\n    value: function guidesSwitcher2() {\n      if (this.$guidesHr2.style.display === \'block\') {\n        node_modules_gsap/* default.set */.ZP.set(this.$guidesHr2, {\n          display: \'none\'\n        });\n        node_modules_gsap/* default.set */.ZP.set(this.$guidesVr2, {\n          display: \'none\'\n        });\n      } else {\n        node_modules_gsap/* default.set */.ZP.set(this.$guidesHr2, {\n          display: \'block\'\n        });\n        node_modules_gsap/* default.set */.ZP.set(this.$guidesVr2, {\n          display: \'block\'\n        });\n      }\n    }\n  }, {\n    key: "resize",\n    value: function resize(width, height) {\n      if (navigator.userAgent.match(\'Mobile\') && this.$notice) {\n        if (width > height) node_modules_gsap/* default.set */.ZP.set(this.$notice, {\n          display: \'block\'\n        });else node_modules_gsap/* default.set */.ZP.set(this.$notice, {\n          display: \'none\'\n        });\n      }\n    }\n  }]);\n\n  return appUi;\n}();\n\n/* harmony default export */ const app_appUi = (appUi);\n// EXTERNAL MODULE: ./node_modules/@dogstudio/highway/build/highway.module.js\nvar highway_module = __webpack_require__(1219);\n// EXTERNAL MODULE: ./node_modules/preload-it/dist/preload-it.js\nvar preload_it = __webpack_require__(1130);\nvar preload_it_default = /*#__PURE__*/__webpack_require__.n(preload_it);\n// EXTERNAL MODULE: ./node_modules/lazyload/lazyload.js\nvar lazyload = __webpack_require__(261);\nvar lazyload_default = /*#__PURE__*/__webpack_require__.n(lazyload);\n// EXTERNAL MODULE: ./node_modules/virtual-scroll/lib/virtualscroll.js\nvar virtualscroll = __webpack_require__(9389);\nvar virtualscroll_default = /*#__PURE__*/__webpack_require__.n(virtualscroll);\n;// CONCATENATED MODULE: ./app/src/js/classes/superScroller.js\nfunction superScroller_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction superScroller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction superScroller_createClass(Constructor, protoProps, staticProps) { if (protoProps) superScroller_defineProperties(Constructor.prototype, protoProps); if (staticProps) superScroller_defineProperties(Constructor, staticProps); return Constructor; }\n\n// utilities\n\n\n // empty function\n\nvar noop = function noop() {}; // eslint-disable-line\n\n\nvar _default = /*#__PURE__*/function () {\n  function _default(options) {\n    var _this = this;\n\n    superScroller_classCallCheck(this, _default);\n\n    // store\n    this.appStore = appStore; // hook functions\n\n    this._onRaf = options.onRaf || noop;\n    this._onScroll = options.onScroll || noop;\n    this._currentSection = options.currentSection ? options.currentSection : null;\n    this._global = {\n      percent: {\n        x: 0,\n        y: 0\n      },\n      lerp: 0.15,\n      mode: options.mode || \'vertical\'\n    };\n\n    var lerp = function lerp(value1, value2, amount) {\n      amount = amount < 0 ? 0 : amount;\n      amount = amount > 1 ? 1 : amount;\n      return value1 + (value2 - value1) * amount;\n    }; // scroll properties\n\n\n    if (options.scroll) {\n      // default virtualScroll options\n      this._virtualScroll = null;\n      this._virtualScrollOptions = {\n        el: typeof options.el !== \'undefined\' ? options.el : document.documentElement,\n        mouseMultiplier: typeof options.mouseMultiplier !== \'undefined\' ? options.mouseMultiplier : this.appStore.client.os === \'windows\' ? 1 : 0.4,\n        touchMultiplier: typeof options.touchMultiplier !== \'undefined\' ? options.touchMultiplier : 2,\n        firefoxMultiplier: typeof options.firefoxMultiplier !== \'undefined\' ? options.firefoxMultiplier : 50,\n        limitInertia: typeof options.limitInertia !== \'undefined\' ? options.limitInertia : false,\n        passive: typeof options.passive !== \'undefined\' ? options.pasive : false,\n        useKeyboard: false\n      };\n      this._scroll = {\n        enable: typeof options.enable !== \'undefined\' ? options.enable : true,\n        parent: typeof options.el !== \'undefined\' ? options.el : document.documentElement,\n        target: options.scrollTarget,\n        lockHeader: false,\n        width: 0,\n        height: 0,\n        timeout: false,\n        dragging: false,\n        ratio: {\n          x: 0,\n          y: 0\n        },\n        clickedPoint: {\n          x: 0,\n          y: 0\n        },\n        position: {\n          x: 0,\n          y: options.startAt !== null && typeof options.startAt !== \'undefined\' ? options.startAt : 0\n        },\n        lastPosition: {\n          x: 0,\n          y: options.startAt !== null && typeof options.startAt !== \'undefined\' ? options.startAt : 0\n        },\n        livePosition: {\n          x: 0,\n          y: options.startAt !== null && typeof options.startAt !== \'undefined\' ? options.startAt : 0\n        },\n        maxScroll: {\n          x: 0,\n          y: 0\n        }\n      };\n\n      this._scrollDown = function (e) {\n        // set flag\n        _this._scroll.dragging = true;\n\n        _this._scroll.target.classList.add(\'dragging\'); // get the point the user clicked on the bar\n\n\n        _this._scroll.clickedPoint.x = e.clientX - _this._scroll.livePosition.x;\n        _this._scroll.clickedPoint.y = e.clientY - _this._scroll.livePosition.y; // track the mouse events\n\n        document.addEventListener(\'mousemove\', _this._scrollDrag);\n        document.addEventListener(\'mouseup\', _this._scrollUp);\n      };\n\n      this._scrollDrag = function (e) {\n        if (_this._global.mode === \'horizontal\') {\n          // calculate the amount the user moved from the clicked point on the scrollbar, checking limits\n          _this._scroll.position.x = Math.min(0, Math.max(_this._scroll.maxScroll.x, e.clientX - _this._scroll.clickedPoint.x)); // update global percentage\n\n          _this._global.percent.x = _this._scroll.position.x / _this._scroll.maxScroll.x;\n        } else {\n          // calculate the amount the user moved from the clicked point on the scrollbar, checking limits\n          _this._scroll.position.y = Math.min(0, Math.max(_this._scroll.maxScroll.y, e.clientY - _this._scroll.clickedPoint.y)); // update global percentage\n\n          _this._global.percent.y = _this._scroll.position.y / _this._scroll.maxScroll.y;\n        }\n      };\n\n      this._scrollUp = function () {\n        // stop tracking the two mouse events\n        document.removeEventListener(\'mousemove\', _this._scrollDrag);\n        document.removeEventListener(\'mouseup\', _this._scrollUp); // set flag\n\n        _this._scroll.dragging = false;\n\n        _this._scroll.target.classList.remove(\'dragging\');\n      }; // bind mousedown event\n\n\n      if (this._global.mode === \'horizontal\') this._scroll.target.addEventListener(\'mousedown\', this._scrollDown);\n\n      this._scrollMove = function (e) {\n        _this._onScroll(); // Prevent pointerevents on scroll\n        // this._scroll.target.parentNode.style.pointerEvents = \'none\';\n\n\n        clearTimeout(_this._scroll.timeout); // this._scroll.timeout = setTimeout(() => {\n        //     this._scroll.target.parentNode.style.pointerEvents = \'all\';\n        // }, 200);\n        // check if scroll is allowed\n\n        if (!_this._scroll.enable) return; // update scroll\n\n        if (_this._global.mode === \'horizontal\') {\n          // get scroll values\n          _this._scroll.position.x = Math.min(0, Math.max(_this._scroll.maxScroll.x, _this._scroll.position.x += e.deltaY));\n          _this._scroll.position.x = Math.min(0, Math.max(_this._scroll.maxScroll.x, _this._scroll.position.x += e.deltaX));\n          _this._global.percent.x = _this._scroll.position.x / _this._scroll.maxScroll.x;\n          _this._global.percent.x = Number.isNaN(_this._global.percent.x) ? 0 : _this._global.percent.x;\n          _this._scroll.lastPosition.x = _this._scroll.position.x;\n        } else {\n          // get scroll values\n          _this._scroll.position.y = Math.min(0, Math.max(_this._scroll.maxScroll.y, _this._scroll.position.y += e.deltaY));\n          _this._global.percent.y = _this._scroll.position.y / _this._scroll.maxScroll.y;\n          _this._global.percent.y = Number.isNaN(_this._global.percent.y) ? 0 : _this._global.percent.y;\n          _this._scroll.lastPosition.y = _this._scroll.position.y;\n        }\n\n        e.originalEvent.preventDefault();\n      };\n\n      this._scrollRaf = function () {\n        if (_this._global.mode === \'horizontal\') _this._scroll.livePosition.x = lerp(_this._scroll.livePosition.x, _this._scroll.maxScroll.x * _this._global.percent.x, _this._global.lerp);else _this._scroll.livePosition.y = lerp(_this._scroll.livePosition.y, _this._scroll.maxScroll.y * _this._global.percent.y, _this._global.lerp);\n        _this._scroll.target.style.transform = \'translate3d(\' + _this._scroll.livePosition.x + \'px,\' + _this._scroll.livePosition.y + \'px, 0px)\';\n      };\n    } // bar properties\n\n\n    if (options.bar) {\n      this._bar = {\n        enable: true,\n        target: options.barTarget,\n        parent: options.barTarget.parentNode,\n        width: 0,\n        height: 0,\n        dragging: false,\n        ratio: {\n          x: 0,\n          y: 0\n        },\n        position: {\n          x: 0,\n          y: 0\n        },\n        livePosition: {\n          x: 0,\n          y: 0\n        },\n        maxScroll: {\n          x: 0,\n          y: 0\n        },\n        clickedPoint: {\n          x: 0,\n          y: 0\n        }\n      };\n\n      this._barDown = function (e) {\n        // set flag\n        _this._bar.dragging = true;\n\n        _this._bar.target.classList.add(\'dragging\'); // get the point the user clicked on the bar\n\n\n        _this._bar.clickedPoint.x = e.clientX - _this._bar.livePosition.x;\n        _this._bar.clickedPoint.y = e.clientY - _this._bar.livePosition.y; // track the mouse events\n\n        document.addEventListener(\'mousemove\', _this._barMove);\n        document.addEventListener(\'mouseup\', _this._barUp);\n      };\n\n      this._barMove = function (e) {\n        if (_this._global.mode === \'horizontal\') {\n          // calculate the amount the user moved from the clicked point on the scrollbar, checking limits\n          _this._bar.position.x = Math.min(Math.max(e.clientX - _this._bar.clickedPoint.x, 0), _this._bar.maxScroll.x); // update global percentage\n\n          _this._global.percent.x = _this._bar.position.x / _this._bar.maxScroll.x;\n          _this._scroll.position.x = _this._global.percent.x * _this._scroll.maxScroll.x;\n        } else {\n          // calculate the amount the user moved from the clicked point on the scrollbar, checking limits\n          _this._bar.position.y = Math.min(Math.max(e.clientY - _this._bar.clickedPoint.y, 0), _this._bar.maxScroll.y); // update global percentage\n\n          _this._global.percent.y = _this._bar.position.y / _this._bar.maxScroll.y;\n          _this._scroll.position.y = _this._global.percent.y * _this._scroll.maxScroll.y;\n        }\n      };\n\n      this._barUp = function () {\n        // stop tracking the two mouse events\n        document.removeEventListener(\'mousemove\', _this._barMove);\n        document.removeEventListener(\'mouseup\', _this._barUp); // set flag\n\n        _this._bar.dragging = false;\n\n        _this._bar.target.classList.remove(\'dragging\');\n      };\n\n      this._barRaf = function () {\n        if (_this._global.mode === \'horizontal\') _this._bar.livePosition.x = lerp(_this._bar.livePosition.x, _this._bar.maxScroll.x * _this._global.percent.x, 0.1);else _this._bar.livePosition.y = lerp(_this._bar.livePosition.y, _this._bar.maxScroll.y * _this._global.percent.y, 0.1);\n        _this._bar.target.style.transform = \'translate3d(\' + _this._bar.livePosition.x + \'px,\' + _this._bar.livePosition.y + \'px, 0px)\';\n      }; // bind mousedown event\n\n\n      this._bar.target.addEventListener(\'mousedown\', this._barDown);\n    }\n\n    this._raf = function () {\n      if (!_this._scroll.enable) return;\n      if (_this._scroll) _this._scrollRaf();\n      if (_this._bar) _this._barRaf();\n\n      _this._onRaf(_this._scroll.livePosition, _this._global.percent);\n    }; // bind to gsap ticker\n\n\n    node_modules_gsap/* gsap.ticker.add */.p8.ticker.add(this._raf); // bind\n\n    this.init();\n  }\n\n  superScroller_createClass(_default, [{\n    key: "init",\n    value: function init() {\n      var _this2 = this;\n\n      // virtualscroll properties\n      if (this._virtualScroll !== \'undefined\') {\n        this._virtualScroll = new (virtualscroll_default())(this._virtualScrollOptions);\n\n        this._virtualScroll.on(function (e) {\n          _this2._scrollMove(e);\n        });\n      }\n    }\n  }, {\n    key: "scrollAnimate",\n    value: function scrollAnimate(_position) {\n      var _this3 = this;\n\n      var _duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n      var _ease = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'power4.inOut\';\n\n      var _force = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this._scroll.lockHeader = true;\n      _duration = this.appStore.client.browser === \'firefox\' ? _duration / 2 : _duration;\n      if (!_force && !this._scroll.enable) return;\n      this._scroll.position.y = Math.max(-_position, this._scroll.maxScroll.y);\n      node_modules_gsap/* gsap.to */.p8.to(this._global.percent, {\n        y: this._scroll.position.y / this._scroll.maxScroll.y,\n        ease: _ease,\n        duration: _duration\n      });\n      node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(_duration * 5, function () {\n        _this3._scroll.lockHeader = false;\n      });\n    }\n  }, {\n    key: "scrollSet",\n    value: function scrollSet(_position) {\n      var _this4 = this;\n\n      this._scroll.lockHeader = true;\n      this._global.lerp = 1;\n      this._scroll.position.y = Math.max(-_position, this._scroll.maxScroll.y);\n      this._global.percent.y = this._scroll.position.y / this._scroll.maxScroll.y;\n      node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(1, function () {\n        _this4._global.lerp = 0.05;\n      });\n      node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(5, function () {\n        _this4._scroll.lockHeader = false;\n      });\n    }\n  }, {\n    key: "scrollResize",\n    value: function scrollResize() {\n      //\n      this._scroll.width = this._scroll.target.getBoundingClientRect().width;\n      this._scroll.height = this._scroll.target.getBoundingClientRect().height;\n      this._scroll.parentWidth = this._scroll.parent.getBoundingClientRect().height;\n      this._scroll.parentHeight = this._scroll.parent.getBoundingClientRect().height;\n      this._scroll.maxScroll.x = -(this._scroll.width - this._scroll.parentWidth);\n      this._scroll.maxScroll.y = -(this._scroll.height - this._scroll.parentHeight);\n      this._global.percent.x = this._scroll.position.x / this._scroll.maxScroll.x;\n      this._global.percent.x = Number.isNaN(this._global.percent.x) ? 0 : this._global.percent.x;\n      this._global.percent.y = this._scroll.position.y / this._scroll.maxScroll.y;\n      this._global.percent.y = Number.isNaN(this._global.percent.y) ? 0 : this._global.percent.y;\n    }\n  }, {\n    key: "barResize",\n    value: function barResize() {\n      // get container el sizes\n      this._bar.parentWidth = this._bar.parent.getBoundingClientRect().width;\n      this._bar.parentHeight = this._bar.parent.getBoundingClientRect().height; // get bar size\n\n      if (this._global.mode === \'horizontal\') {\n        this._bar.width = this._bar.parentWidth * (this._scroll.parentWidth / this._scroll.width);\n        this._bar.height = this._bar.target.getBoundingClientRect().height;\n        this._bar.target.style.width = this._bar.width + \'px\';\n      } else {\n        this._bar.width = this._bar.target.getBoundingClientRect().width;\n        this._bar.height = this._bar.parentHeight * (this._scroll.parentHeight / this._scroll.height);\n        this._bar.target.style.height = this._bar.height + \'px\';\n      } // calculate maximum scroll\n\n\n      this._bar.maxScroll.x = this._bar.parentWidth - this._bar.width;\n      this._bar.maxScroll.y = this._bar.parentHeight - this._bar.height;\n      this._bar.ratio.x = this._bar.width / this._bar.parentWidth;\n      this._bar.ratio.y = this._bar.height / this._bar.parentHeight;\n    }\n  }, {\n    key: "resize",\n    value: function resize() {\n      if (this._scroll) this.scrollResize();\n      if (this._bar) this.barResize();\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      node_modules_gsap/* gsap.ticker.remove */.p8.ticker.remove(this._raf);\n    }\n  }]);\n\n  return _default;\n}();\n\n\n// EXTERNAL MODULE: ./node_modules/gsap/ScrollTrigger.js\nvar ScrollTrigger = __webpack_require__(7082);\n;// CONCATENATED MODULE: ./app/src/js/renderers/renderer.js\nfunction renderer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { renderer_typeof = function _typeof(obj) { return typeof obj; }; } else { renderer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return renderer_typeof(obj); }\n\nfunction renderer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction renderer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction renderer_createClass(Constructor, protoProps, staticProps) { if (protoProps) renderer_defineProperties(Constructor.prototype, protoProps); if (staticProps) renderer_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (renderer_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// App\n\n\n // Classes\n\n // Highway\n\n // Preload\n\n\n // Utilities\n\n // GSAP Library\n\n\n\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z);\n\nvar Renderer = /*#__PURE__*/function (_Highway$Renderer) {\n  _inherits(Renderer, _Highway$Renderer);\n\n  var _super = _createSuper(Renderer);\n\n  function Renderer(properties) {\n    var _this;\n\n    renderer_classCallCheck(this, Renderer);\n\n    _this = _super.call(this, properties); // Store\n\n    _this.appStore = appStore; // App references\n\n    _this.appCore = new app_appCore();\n    _this.appUi = new app_appUi(); // Events\n\n    _this.domEvents = new domEvents_default();\n    _this.hash = window.location.hash !== \'\' ? window.location.hash : null;\n    _this.params = new URLSearchParams(window.location.search);\n    _this.appStore.firstNavigation = _this.appStore.currentSection === null; // Preloader\n\n    _this.preloadMain = null;\n    _this.preloadSecondary = null;\n    _this.preloadDelay = 1;\n    _this.preloadItems = {\n      // main: [\'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4\', \'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\', \'https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg\'], // Test\n      main: [],\n      // Mandatory items\n      secondary: [] // Secondary items\n\n    }; // Scroll\n\n    _this.superScroller = null;\n    _this.superTrigger = null;\n    _this.appStore.currentSection = _assertThisInitialized(_this);\n    _this.appStore.current = _this.properties.slug;\n    _this._scroll = 0;\n    _this._scrollPosition = document.documentElement.scrollTop;\n    _this.form = {\n      isAnimating: false\n    };\n    return _this;\n  }\n\n  renderer_createClass(Renderer, [{\n    key: "onEnter",\n    value: function onEnter() {\n      this.preselectors();\n      this.selectors();\n      this.events();\n      this.preload();\n\n      if (!this.params.has(\'trp-edit-translation\')) {\n        // Set animations\n        this.setForms();\n        this.setLabels();\n        this.setTitles();\n        this.setTitlesLarge();\n        this.setTexts();\n        this.setImages();\n        this.setLines();\n        this.setLinks();\n        this.setWords();\n        this.setDraggables();\n        if (this.appStore.isDesktop) this.setFooter();\n      }\n\n      this.beforeEnter();\n    }\n  }, {\n    key: "preselectors",\n    value: function preselectors() {\n      // Set reference to current section\n      this.$app = document.getElementById(\'app\');\n      this.$el = this.wrap.lastElementChild;\n      this.$inner = this.$el.querySelector(\'[data-scroll-wrapper] .inner\');\n      this.$scrollbar = this.$el.querySelector(\'[data-scroll-wrapper] .scrollbar\'); // Forms\n\n      this.$hubspot = this.$el.querySelector(\'.hubspot\');\n\n      if (this.$hubspot) {\n        this.$hubspotMask = this.$hubspot.querySelector(\'.hubspot__mask\');\n        this.$hubspotContent = this.$hubspot.querySelector(\'.hubspot__content\');\n        this.$hubspotCloser = this.$hubspot.querySelector(\'.hubspot__closer\');\n        this.$hubspotForm = document.getElementById(\'hubspotform\');\n      } // Scroll\n\n\n      this.$scroll = this.$el.querySelector(\'#scroll\');\n    }\n  }, {\n    key: "selectors",\n    value: function selectors() {} // eslint-disable-line\n\n  }, {\n    key: "events",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: "preload",\n    value: function preload() {} // eslint-disable-line\n\n  }, {\n    key: "checkElements",\n    value: function checkElements() {\n      if (this.appStore.isDesktop) {\n        this.$elementsMobile = document.querySelectorAll(\'[data-mobile]\');\n\n        for (var i = 0; i < this.$elementsMobile.length; i++) {\n          this.$elementsMobile[i].remove();\n        }\n      } else {\n        this.$elementsDesktop = document.querySelectorAll(\'[data-desktop]\');\n\n        for (var _i = 0; _i < this.$elementsDesktop.length; _i++) {\n          this.$elementsDesktop[_i].remove();\n        }\n      }\n    }\n  }, {\n    key: "beforeEnter",\n    value: function beforeEnter() {} // eslint-disable-line\n\n  }, {\n    key: "onEnterCompleted",\n    value: function onEnterCompleted() {\n      var _this2 = this;\n\n      // Reset Scroll\n      window.scrollTo(0, 0);\n      document.documentElement.scrollTop = 0; // Lazy load\n\n      this.lazyLoad = new (lazyload_default())(this.lazyLoad, {\n        root: null,\n        rootMargin: window.innerHeight * 0.25 + \'px\',\n        threshold: 0\n      }); // If first navigation and need preload\n\n      if (this.preloadItems.main.length > 0 && this.appStore.firstNavigation) {\n        var _preloadOn = new Date().getTime();\n\n        this.preloadMain = preload_it_default()();\n        this.preloadMain.fetch(this.preloadItems.main);\n\n        this.preloadMain.onprogress = function (event) {\n          /* this.appUi.$loaderProgress.innerHTML = event.progress + \'%\'; */\n        };\n\n        this.preloadMain.oncomplete = function (items) {\n          var _preloadOff = new Date().getTime();\n\n          var _preloadDifference = (_preloadOff - _preloadOn) / 1000;\n\n          var _preloadDelay = Math.max(0, _this2.preloadDelay - _preloadDifference);\n\n          node_modules_gsap/* default.delayedCall */.ZP.delayedCall(_preloadDelay, function () {\n            _this2.start();\n          });\n        };\n      } // If first navigation but dont need preloads\n      else if (this.preloadItems.main.length === 0 && this.appStore.firstNavigation) {\n        node_modules_gsap/* default.delayedCall */.ZP.delayedCall(this.preloadDelay, function () {\n          _this2.start();\n        });\n      } // If not first navigation\n      else {\n        this.start();\n      }\n    }\n  }, {\n    key: "start",\n    value: function start() {\n      // Reset Scroll\n      window.scrollTo(0, 0);\n      document.documentElement.scrollTop = 0;\n      if (this.appStore.firstNavigation) this.appUi.hideLoader(); // Menu\n\n      this.eventsAlternative();\n      this.scroll();\n      if (this.appStore.firstNavigation) this.appCore.navigateStart();\n\n      if (!this.params.has(\'trp-edit-translation\')) {\n        // Init animations\n        this.initLabels();\n        this.initTitles();\n        this.initTitlesLarge();\n        this.initTexts();\n        this.initImages();\n        this.initLines();\n        this.initLinks();\n        this.initWords();\n        this.initAnchors();\n        this.initDraggables();\n        this.initCarousel();\n        if (this.appStore.isDesktop) this.initFooter();\n      }\n\n      this.enter();\n      if (this.appStore.firstNavigation && this.appStore.current !== \'home\') this.appUi.showHeader();\n      this.beforeResize(window.innerWidth, window.innerHeight);\n      if (this.hash) this.scrollTo(this.hash);\n      this.hideLogo();\n\n      if (this.preloadItems.secondary.length > 0) {\n        this.preloadSecondary = preload_it_default()();\n        this.preloadSecondary.fetch(this.preloadItems.secondary);\n      }\n\n      if (this.appStore.isDesktop && this.$scroll) this.scrollRotate();\n    }\n  }, {\n    key: "scroll",\n    value: function scroll() {\n      var _this3 = this,\n          _arguments = arguments;\n\n      if (this.$inner) {\n        if (this.appStore.isDesktop) {\n          // Superscroller\n          this.superScroller = new _default({\n            scroll: true,\n            scrollTarget: this.$inner,\n            bar: true,\n            barTarget: this.$scrollbar.children[0],\n            onRaf: function onRaf(scroll, percent) {\n              _this3.raf();\n\n              if (_this3.superTrigger) _this3.superTrigger.update();\n            }\n          }); // Scroll Trigger\n\n          this.superTrigger = ScrollTrigger/* default */.Z;\n          this.superTrigger.defaults({\n            scroller: this.$inner\n          });\n          this.superTrigger.scrollerProxy(this.$inner, {\n            scrollTop: function scrollTop(value) {\n              if (_arguments.length) _this3.superScroller._scroll.livePosition.y = -value;\n              return -_this3.superScroller._scroll.livePosition.y;\n            },\n            getBoundingClientRect: function getBoundingClientRect() {\n              return {\n                top: 0,\n                left: 0,\n                width: window.innerWidth,\n                height: window.innerHeight\n              };\n            }\n          });\n          this.superTrigger.refresh();\n        } else {\n          this.superTrigger = ScrollTrigger/* default */.Z;\n          this.superTrigger.config({\n            autoRefreshEvents: \'DOMContentLoaded,load\',\n            syncInterval: 999999999\n          });\n          this.superTrigger.refresh();\n          this.superTrigger = node_modules_gsap/* default.timeline */.ZP.timeline({\n            defaults: {\n              ease: \'none\'\n            },\n            scrollTrigger: {\n              trigger: this.$app,\n              scrub: true,\n              start: \'top top\',\n              end: \'bottom bottom\',\n              onUpdate: function onUpdate(self) {\n                _this3.raf();\n              }\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: "scrollTo",\n    value: function scrollTo(hash) {\n      var $target = this.$el.querySelector(hash);\n\n      if ($target) {\n        if (this.appStore.isDesktop) {\n          var offset = $target.getBoundingClientRect().y + -this.superScroller._scroll.livePosition.y;\n          this.superScroller.scrollAnimate(offset, 2, \'power4.inOut\');\n        } else {\n          var _offset = $target.getBoundingClientRect().y + document.documentElement.scrollTop;\n\n          node_modules_gsap/* default.to */.ZP.to(document.documentElement, {\n            scrollTop: _offset,\n            duration: 2,\n            ease: \'power4.inOut\'\n          });\n        }\n      }\n    }\n  }, {\n    key: "scrollRotate",\n    value: function scrollRotate() {\n      var _this4 = this;\n\n      node_modules_gsap/* default.to */.ZP.to(this.$scroll.querySelector(\'svg\'), {\n        rotation: \'360\',\n        duration: 15,\n        ease: \'none\',\n        repeat: -1\n      });\n      ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: window.innerWidth * 0.02 + \' top\',\n        markers: false,\n        onEnter: function onEnter() {\n          node_modules_gsap/* default.to */.ZP.to(_this4.$scroll, {\n            opacity: 0.0001,\n            duration: 0.5,\n            ease: \'power2.out\',\n            onComplete: function onComplete() {\n              node_modules_gsap/* default.set */.ZP.set(_this4.$scroll, {\n                display: \'none\'\n              });\n            }\n          });\n          node_modules_gsap/* default.to */.ZP.to(_this4.$scroll.querySelector(\'svg\'), {\n            rotation: \'+=180\',\n            duration: 0.3,\n            ease: \'power2.inOut\'\n          });\n        }\n      });\n    }\n  }, {\n    key: "eventsAlternative",\n    value: function eventsAlternative() {\n      var _this5 = this;\n\n      // Open menu\n      this.domEvents.add(this.appUi.$trigger, \'click\', function () {\n        if (_this5.appUi.isAnimating) _this5.appUi.closeMenu();else _this5.appUi.openMenu();\n      }); // Close menu\n\n      this.domEvents.add(this.appUi.$menuMask, \'click\', function () {\n        _this5.appUi.closeMenu();\n      }); // Mouse enter/leave on trigger\n\n      if (this.appStore.isDesktop) {\n        this.domEvents.add(this.appUi.$trigger, \'mouseenter\', function () {\n          _this5.appUi.enterTrigger();\n        });\n        this.domEvents.add(this.appUi.$trigger, \'mouseleave\', function () {\n          _this5.appUi.leaveTrigger();\n        });\n      } // Open forms modal\n\n\n      if (this.appUi.$requestButton) this.domEvents.add(this.appUi.$requestButton, \'click\', function () {\n        _this5.openForm();\n      });\n    }\n  }, {\n    key: "hideLogo",\n    value: function hideLogo() {\n      var _this6 = this;\n\n      ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: window.innerHeight * 0.1 + \' top\',\n        onEnter: function onEnter() {\n          if (_this6.appUi.$logo) node_modules_gsap/* default.to */.ZP.to(_this6.appUi.$logo, {\n            opacity: 0.0001,\n            duration: 0.3,\n            ease: \'power2.out\'\n          });\n        },\n        onLeaveBack: function onLeaveBack() {\n          if (_this6.appUi.$logo) {\n            // gsap.set(this.appUi.$logo, { display: \'block\' });\n            node_modules_gsap/* default.to */.ZP.to(_this6.appUi.$logo, {\n              opacity: 1,\n              duration: 0.3,\n              ease: \'power2.out\'\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: "setForms",\n    value: function setForms() {\n      var _this7 = this;\n\n      this.$forms = this.$el.querySelectorAll(\'.hubspotform\');\n\n      if (this.$forms) {\n        for (var i = 0; i < this.$forms.length; i++) {\n          var _target = \'#\' + this.$forms[i].id;\n\n          var _id = this.$forms[i].getAttribute(\'data-id\');\n\n          if (_id) {\n            hbspt.forms.create({\n              region: \'na1\',\n              portalId: \'6580383\',\n              target: _target,\n              formId: _id,\n              onFormReady: function onFormReady() {\n                if (_this7.appStore.isDesktop) {\n                  if (_this7.interval) {\n                    clearInterval(_this7.interval);\n                    _this7.interval = null;\n                  }\n\n                  _this7.interval = setInterval(function () {\n                    if (_this7.superScroller) {\n                      _this7.superScroller.resize();\n\n                      clearInterval(_this7.interval);\n                    }\n                  }, 300);\n                }\n              }\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: "setLabels",\n    value: function setLabels() {\n      this.$labels = this.$el.querySelectorAll(\'.label--init\');\n\n      if (this.$labels) {\n        for (var i = 0; i < this.$labels.length; i++) {\n          // eslint-disable-next-line no-new\n          new SplitText(this.$labels[i], {\n            type: \'lines, words\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\'\n          });\n\n          for (var j = 0; j < this.$labels[i].querySelectorAll(\'.word\').length; j++) {\n            node_modules_gsap/* default.set */.ZP.set(this.$labels[i].querySelectorAll(\'.word\')[j], {\n              opacity: 0.0001,\n              y: \'100%\'\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: "setTitles",\n    value: function setTitles() {\n      this.$titles = this.$el.querySelectorAll(\'.title--init\');\n\n      if (this.$titles) {\n        for (var i = 0; i < this.$titles.length; i++) {\n          // eslint-disable-next-line no-new\n          new SplitText(this.$titles[i], {\n            type: \'lines words\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\'\n          });\n          var words = this.$titles[i].querySelectorAll(\'.word\');\n\n          for (var j = 0; j < words.length; j++) {\n            node_modules_gsap/* default.set */.ZP.set(words[j], {\n              opacity: 0.0001,\n              y: \'100%\',\n              rotationX: \'3deg\'\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: "setTitlesLarge",\n    value: function setTitlesLarge() {\n      this.$titlesLarge = this.$el.querySelectorAll(\'.titlelarge--init\');\n\n      if (this.$titlesLarge) {\n        for (var i = 0; i < this.$titlesLarge.length; i++) {\n          // eslint-disable-next-line no-new\n          new SplitText(this.$titlesLarge[i], {\n            type: \'lines words chars\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\',\n            charsClass: \'char char--++\'\n          });\n          var chars = this.$titlesLarge[i].querySelectorAll(\'.char\');\n\n          for (var j = 0; j < chars.length; j++) {\n            node_modules_gsap/* default.set */.ZP.set(chars[j], {\n              opacity: 0.0001,\n              y: \'100%\',\n              rotationX: \'3deg\'\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: "setTexts",\n    value: function setTexts() {\n      this.$texts = this.$el.querySelectorAll(\'.text--init\');\n\n      if (this.$texts) {\n        for (var i = 0; i < this.$texts.length; i++) {\n          node_modules_gsap/* default.set */.ZP.set(this.$texts[i], {\n            opacity: 0.0001,\n            y: \'50%\'\n          });\n        }\n      }\n    }\n  }, {\n    key: "setImages",\n    value: function setImages() {\n      this.$opacity = this.$el.querySelectorAll(\'.image--init\');\n\n      if (this.$opacity) {\n        for (var i = 0; i < this.$opacity.length; i++) {\n          node_modules_gsap/* default.set */.ZP.set(this.$opacity[i], {\n            opacity: 0.0001\n          });\n        }\n      }\n    }\n  }, {\n    key: "setLines",\n    value: function setLines() {\n      this.$lines = this.$el.querySelectorAll(\'.hr--init\');\n\n      if (this.$lines) {\n        for (var i = 0; i < this.$lines.length; i++) {\n          node_modules_gsap/* default.set */.ZP.set(this.$lines[i], {\n            scaleX: 0,\n            transformOrigin: \'0 50%\'\n          });\n        }\n      }\n    }\n  }, {\n    key: "setLinks",\n    value: function setLinks() {\n      this.$links = this.$el.querySelectorAll(\'.link--init\');\n\n      if (this.$links && this.appStore.isDesktop) {\n        for (var i = 0; i < this.$links.length; i++) {\n          node_modules_gsap/* default.set */.ZP.set(this.$links[i].querySelector(\'.underline\'), {\n            scaleX: 0,\n            transformOrigin: \'0 50%\'\n          });\n        }\n      }\n    }\n  }, {\n    key: "setWords",\n    value: function setWords() {\n      this.$wordsTitles = this.$el.querySelectorAll(\'.words--init\');\n\n      if (this.$wordsTitles && !this.appStore.isDesktop) {\n        for (var i = 0; i < this.$wordsTitles.length; i++) {\n          // eslint-disable-next-line no-new\n          new SplitText(this.$wordsTitles[i], {\n            type: \'lines words\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\'\n          });\n          var words = this.$wordsTitles[i].querySelectorAll(\'.word\');\n\n          for (var j = 0; j < words.length; j++) {\n            node_modules_gsap/* default.set */.ZP.set(words[j], {\n              opacity: 0.0001,\n              y: \'100%\',\n              rotation: \'3deg\'\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: "setDraggables",\n    value: function setDraggables() {\n      this.$draggables = this.$el.querySelectorAll(\'.draggable--init\');\n\n      if (this.$draggables) {\n        for (var i = 0; i < this.$draggables.length; i++) {\n          this.$draggableInner = this.$draggables[i].querySelector(\'.slider__inner\');\n          this.$draggableItems = this.$draggables[i].querySelectorAll(\'.slider__item\'); // this.$draggableProgress = this.$draggables[i].querySelector(\'.slider__progress\');\n\n          for (var j = 0; j < this.$draggableItems.length; j++) {\n            node_modules_gsap/* default.set */.ZP.set(this.$draggableItems[j], {\n              x: 60 * j + \'%\'\n            });\n          }\n\n          node_modules_gsap/* default.set */.ZP.set(this.$draggableInner, {\n            opacity: 0.0001,\n            x: \'100%\'\n          }); // if(this.$draggableProgress && !this.appStore.isDesktop)\n          //     gsap.set(this.$draggableProgress, { opacity: 0.0001 });\n        }\n      }\n    }\n  }, {\n    key: "setFooter",\n    value: function setFooter() {\n      // Selectors\n      this.$footer = this.$el.querySelector(\'[class*="__footer"]\');\n      this.$footerContainer = this.$footer.querySelector(\'.container\');\n      this.$footerTitle = this.$footer.querySelector(\'.supertitle\');\n      this.$footerText = this.$footer.querySelector(\'.wysiwyg\');\n\n      if (this.$footer) {\n        // Set animation\n        node_modules_gsap/* default.set */.ZP.set(this.$footerContainer, {\n          y: \'-100vh\'\n        }); // eslint-disable-next-line no-new\n\n        new SplitText(this.$footerTitle, {\n          type: \'lines words chars\',\n          linesClass: \'line line--++\',\n          wordsClass: \'word word--++\',\n          charsClass: \'char char--++\'\n        });\n        var chars = this.$footerTitle.querySelectorAll(\'.char\');\n\n        for (var i = 0; i < chars.length; i++) {\n          node_modules_gsap/* default.set */.ZP.set(chars[i], {\n            opacity: 0.0001\n          });\n        } // eslint-disable-next-line no-new\n\n\n        new SplitText(this.$footerText, {\n          type: \'lines words\',\n          linesClass: \'line line--++\',\n          wordsClass: \'word word--++\'\n        });\n        var words = this.$footerText.querySelectorAll(\'.word\');\n\n        for (var _i2 = 0; _i2 < words.length; _i2++) {\n          node_modules_gsap/* default.set */.ZP.set(words[_i2], {\n            opacity: 0.0001,\n            y: \'100%\',\n            rotation: \'3deg\'\n          });\n        }\n\n        node_modules_gsap/* default.set */.ZP.set([this.$footer.querySelector(\'.social\'), this.$footer.querySelector(\'.legal\')], {\n          opacity: 0.0001\n        });\n      }\n    }\n  }, {\n    key: "initLabels",\n    value: function initLabels() {\n      var _this8 = this;\n\n      if (this.$labels) {\n        var _loop = function _loop(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            start: \'top 90%\',\n            trigger: _this8.$labels[i],\n            once: true,\n            onEnter: function onEnter() {\n              var $words = _this8.$labels[i].querySelectorAll(\'.word\');\n\n              for (var j = 0; j < $words.length; j++) {\n                node_modules_gsap/* default.to */.ZP.to($words[j], {\n                  opacity: 1,\n                  y: \'0%\',\n                  rotation: \'0deg\',\n                  ease: \'expo.inOut\',\n                  duration: 0.8,\n                  delay: 0.2 + j * 0.01\n                });\n              }\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$labels.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: "initTitles",\n    value: function initTitles() {\n      var _this9 = this;\n\n      if (this.$titles) {\n        var _loop2 = function _loop2(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            start: \'top 90%\',\n            trigger: _this9.$titles[i],\n            once: true,\n            onEnter: function onEnter() {\n              var words = _this9.$titles[i].querySelectorAll(\'.word\');\n\n              for (var j = 0; j < words.length; j++) {\n                node_modules_gsap/* default.to */.ZP.to(words[j], {\n                  opacity: 1,\n                  y: \'0%\',\n                  rotationX: \'0deg\',\n                  ease: \'expo.out\',\n                  duration: 0.8,\n                  delay: 0.2 + j * 0.01\n                });\n              }\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$titles.length; i++) {\n          _loop2(i);\n        }\n      }\n    }\n  }, {\n    key: "initTitlesLarge",\n    value: function initTitlesLarge() {\n      var _this10 = this;\n\n      if (this.$titlesLarge) {\n        var _loop3 = function _loop3(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this10.appStore.isDesktop ? _this10.$titlesLarge[i] : _this10.$titlesLarge[i].parentNode.parentNode,\n            start: _this10.appStore.isDesktop ? \'top 90%\' : \'top 35%\',\n            once: true,\n            onEnter: function onEnter() {\n              var chars = _this10.$titlesLarge[i].querySelectorAll(\'.char\');\n\n              for (var j = 0; j < chars.length; j++) {\n                node_modules_gsap/* default.to */.ZP.to(chars[j], {\n                  opacity: 1,\n                  y: \'0%\',\n                  rotationX: \'0deg\',\n                  ease: \'expo.out\',\n                  duration: 1.4,\n                  delay: 0.7 + j * 0.02\n                });\n              }\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$titlesLarge.length; i++) {\n          _loop3(i);\n        }\n      }\n    }\n  }, {\n    key: "initTexts",\n    value: function initTexts() {\n      var _this11 = this;\n\n      if (this.$texts) {\n        var _loop4 = function _loop4(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this11.appStore.isDesktop ? _this11.$texts[i] : _this11.$texts[i].parentNode,\n            start: \'top 90%\',\n            once: true,\n            onEnter: function onEnter() {\n              node_modules_gsap/* default.to */.ZP.to(_this11.$texts[i], {\n                opacity: 1,\n                y: \'0%\',\n                duration: _this11.appStore.isDesktop ? 1.5 : 2,\n                ease: \'expo.out\'\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$texts.length; i++) {\n          _loop4(i);\n        }\n      }\n    }\n  }, {\n    key: "initImages",\n    value: function initImages() {\n      var _this12 = this;\n\n      if (this.$images) {\n        var _loop5 = function _loop5(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this12.$images[i],\n            start: _this12.appStore.isDesktop ? \'top 90%\' : \'top 80%\',\n            once: true,\n            onEnter: function onEnter() {\n              node_modules_gsap/* default.to */.ZP.to(_this12.$images[i], {\n                opacity: 1,\n                duration: 5,\n                ease: \'expo.out\'\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$images.length; i++) {\n          _loop5(i);\n        }\n      }\n    }\n  }, {\n    key: "initLines",\n    value: function initLines() {\n      var _this13 = this;\n\n      if (this.$lines) {\n        var _loop6 = function _loop6(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this13.$lines[i],\n            start: _this13.appStore.isDesktop ? \'top 90%\' : \'top 80%\',\n            once: true,\n            onEnter: function onEnter() {\n              node_modules_gsap/* default.to */.ZP.to(_this13.$lines[i], {\n                scaleX: 1,\n                duration: 1.5,\n                ease: \'expo.inOut\'\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$lines.length; i++) {\n          _loop6(i);\n        }\n      }\n    }\n  }, {\n    key: "initLinks",\n    value: function initLinks() {\n      var _this14 = this;\n\n      if (this.$links) {\n        var _loop7 = function _loop7(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this14.$links[i],\n            start: _this14.appStore.isDesktop ? \'top 90%\' : \'top 80%\',\n            once: true,\n            onEnter: function onEnter() {\n              node_modules_gsap/* default.to */.ZP.to(_this14.$links[i].querySelector(\'.underline\'), {\n                scaleX: 1,\n                duration: 1,\n                ease: \'expo.inOut\'\n              });\n            }\n          });\n\n          if (_this14.appStore.isDesktop) {\n            _this14.domEvents.add(_this14.$links[i], \'mouseenter\', function (a, e, el) {\n              node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.underline\'), {\n                scaleX: 0,\n                duration: 0.6,\n                ease: \'expo.inOut\'\n              });\n            });\n\n            _this14.domEvents.add(_this14.$links[i], \'mouseleave\', function (a, e, el) {\n              node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.underline\'), {\n                scaleX: 1,\n                duration: 0.6,\n                ease: \'expo.inOut\'\n              });\n            });\n          }\n        };\n\n        for (var i = 0; i < this.$links.length; i++) {\n          _loop7(i);\n        }\n      }\n    }\n  }, {\n    key: "initWords",\n    value: function initWords() {\n      var _this15 = this;\n\n      if (this.$wordsTitles && !this.appStore.isDesktop) {\n        var _loop8 = function _loop8(i) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: _this15.$wordsTitles[i],\n            start: _this15.appStore.isDesktop ? \'top 90%\' : \'top 80%\',\n            once: true,\n            onEnter: function onEnter() {\n              var words = _this15.$wordsTitles[i].querySelectorAll(\'.word\');\n\n              for (var j = 0; j < words.length; j++) {\n                node_modules_gsap/* default.to */.ZP.to(words[j], {\n                  opacity: 1,\n                  y: \'0%\',\n                  rotation: 0,\n                  ease: \'expo.inOut\',\n                  duration: 0.8,\n                  delay: 0 + j * 0.01\n                });\n              }\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$wordsTitles.length; i++) {\n          _loop8(i);\n        }\n      }\n    }\n  }, {\n    key: "initAnchors",\n    value: function initAnchors() {\n      var _this16 = this;\n\n      this.$anchors = this.$el.querySelectorAll(\'a[href*="#"]\');\n\n      if (this.$anchors) {\n        var _loop9 = function _loop9(i) {\n          _this16.domEvents.add(_this16.$anchors[i], \'click\', function (e) {\n            _this16.scrollTo(\'#\' + _this16.$anchors[i].href.split(\'#\')[1]);\n          });\n        };\n\n        for (var i = 0; i < this.$anchors.length; i++) {\n          _loop9(i);\n        }\n      }\n    }\n  }, {\n    key: "initDraggables",\n    value: function initDraggables() {\n      var _this17 = this;\n\n      if (this.$draggables) {\n        for (var i = 0; i < this.$draggables.length; i++) {\n          ScrollTrigger/* default.create */.Z.create({\n            trigger: this.$draggables[i],\n            start: \'top 90%\',\n            once: true,\n            onEnter: function onEnter() {\n              node_modules_gsap/* default.to */.ZP.to(_this17.$draggableInner, {\n                opacity: 1,\n                x: \'0%\',\n                duration: 2,\n                ease: \'expo.out\'\n              });\n\n              for (var j = 0; j < _this17.$draggableItems.length; j++) {\n                node_modules_gsap/* default.to */.ZP.to(_this17.$draggableItems[j], {\n                  x: \'0%\',\n                  duration: 1.5,\n                  ease: \'expo.out\'\n                });\n              }\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: "initCarousel",\n    value: function initCarousel() {\n      var _this18 = this;\n\n      this.carousel = [];\n      this.$carousels = this.$el.querySelectorAll(\'.carousel__inner\');\n\n      var _loop10 = function _loop10(i) {\n        // const _direction = this.$carousels[i].dataset.direction;\n        var _carousel = {};\n        _carousel.$carouselItems = _this18.$carousels[i].children;\n\n        var _width = _carousel.$carouselItems[0].offsetWidth + \'px\';\n\n        _this18.$carousels[i].style.width = _width;\n        _carousel.carouselLeft = node_modules_gsap/* default.timeline */.ZP.timeline({\n          paused: false,\n          defaults: {\n            ease: \'none\',\n            duration: _this18.appStore.isDesktop ? _carousel.$carouselItems[0].offsetWidth / 200 : _carousel.$carouselItems[0].offsetWidth / 75,\n            repeat: \'-1\',\n            onReverseComplete: function onReverseComplete() {\n              _carousel.carouselLeft.pause();\n\n              _carousel.carouselRight.play();\n            }\n          }\n        });\n\n        for (var j = 0; j < _carousel.$carouselItems.length; j++) {\n          _carousel.carouselLeft.to(_carousel.$carouselItems[j], {\n            x: -100 + \'%\'\n          }, 0);\n        }\n\n        _carousel.carouselRight = node_modules_gsap/* default.timeline */.ZP.timeline({\n          paused: true,\n          defaults: {\n            ease: \'none\',\n            duration: _this18.appStore.isDesktop ? _carousel.$carouselItems[0].offsetWidth / 200 : _carousel.$carouselItems[0].offsetWidth / 75,\n            repeat: \'-1\',\n            onReverseComplete: function onReverseComplete() {\n              _carousel.carouselRight.pause();\n\n              _carousel.carouselLeft.play();\n            }\n          }\n        });\n\n        for (var _j = 0; _j < _carousel.$carouselItems.length; _j++) {\n          _carousel.carouselRight.to(_carousel.$carouselItems[_j], {\n            x: 100 + \'%\'\n          }, 0);\n        }\n\n        if (_this18.appStore.isDesktop) {\n          _carousel.carouselMove = node_modules_gsap/* default.timeline */.ZP.timeline({\n            defaults: {\n              ease: \'none\'\n            },\n            scrollTrigger: {\n              trigger: _this18.$carousels[i],\n              scrub: true,\n              start: \'top bottom\',\n              end: \'bottom top\',\n              onUpdate: function onUpdate(self) {\n                if (!_carousel.carouselLeft.paused()) _carousel.carouselLeft.reversed(self.direction !== 1);\n                if (!_carousel.carouselRight.paused()) _carousel.carouselRight.reversed(self.direction === 1);\n              }\n            }\n          }); // _carousel.carouselMove.fromTo(this.$carousels[i], { x: window.innerWidth * 0.2 * _direction }, { x: -window.innerWidth * 0.2 * _direction }, 0);\n\n          _carousel.carouselMove.fromTo(_this18.$carousels[i], {\n            x: window.innerWidth * 0.2\n          }, {\n            x: -window.innerWidth * 0.2\n          }, 0);\n        }\n\n        _this18.carousel.push(_carousel);\n      };\n\n      for (var i = 0; i < this.$carousels.length; i++) {\n        _loop10(i);\n      }\n    }\n  }, {\n    key: "initFooter",\n    value: function initFooter() {\n      if (this.$footer) {\n        // Start footer timeline\n        this._footerTimeline = node_modules_gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: \'none\',\n            duration: 1\n          },\n          scrollTrigger: {\n            trigger: this.$footer,\n            start: \'top bottom\',\n            end: \'bottom 100%\',\n            scrub: true\n          }\n        }); // Animate in/out\n\n        this._footerTimeline.to(this.$footerContainer, {\n          y: \'100vh\',\n          duration: 1\n        }, 0);\n\n        var chars = this.$footerTitle.querySelectorAll(\'.char\');\n\n        this._footerTimeline.to(chars, {\n          opacity: 0.1,\n          duration: 0.1\n        }, 0.3);\n\n        this._footerTimeline.to(chars, {\n          opacity: 1,\n          stagger: 0.5 / chars.length,\n          duration: 0.5 / chars.length\n        }, 0.5);\n\n        var words = this.$footerText.querySelectorAll(\'.word\');\n\n        this._footerTimeline.to(words, {\n          opacity: 1,\n          y: \'0%\',\n          rotation: \'0deg\',\n          duration: 0.1 / words.length,\n          stagger: {\n            each: 0.1 / words.length,\n            from: \'start\'\n          }\n        }, 0.9);\n\n        this._footerTimeline.to(this.$footer.querySelector(\'.social\'), {\n          opacity: 1,\n          duration: 0.1\n        }, 0.9);\n\n        this._footerTimeline.to(this.$footer.querySelector(\'.legal\'), {\n          opacity: 1,\n          duration: 0.1\n        }, 0.9);\n      }\n    }\n  }, {\n    key: "enterCards",\n    value: function enterCards(a, e, el) {\n      if (el.querySelector(\'.link\')) {\n        node_modules_gsap/* default.killTweensOf */.ZP.killTweensOf(el.querySelector(\'.link\'), el.querySelector(\'.background__bg\'));\n        node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.link\'), {\n          scale: 0.9,\n          duration: 2.5,\n          ease: \'expo.out\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.background__bg\'), {\n          scale: 1,\n          duration: 2.5,\n          ease: \'expo.out\'\n        });\n      }\n    }\n  }, {\n    key: "leaveCards",\n    value: function leaveCards(a, e, el) {\n      if (el.querySelector(\'.link\')) {\n        node_modules_gsap/* default.killTweensOf */.ZP.killTweensOf(el.querySelector(\'.link\'), el.querySelector(\'.background__bg\'));\n        node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.link\'), {\n          scale: 1,\n          duration: 2.5,\n          ease: \'expo.out\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.background__bg\'), {\n          scale: 1.1,\n          duration: 2.5,\n          ease: \'expo.out\'\n        });\n      }\n    }\n  }, {\n    key: "openForm",\n    value: function openForm() {\n      var _this19 = this;\n\n      if (this.form.isAnimating) return;\n      this.form.isAnimating = true;\n      this.appUi.closeMenuOpacity(); // Animate in\n\n      node_modules_gsap/* default.set */.ZP.set(this.appUi.$header, {\n        pointerEvents: \'none\'\n      });\n      if (this.appStore.isDesktop) node_modules_gsap/* default.set */.ZP.set([this.appUi.$trigger, this.appUi.$requestButton], {\n        opacity: 0.0001\n      });else node_modules_gsap/* default.set */.ZP.set(this.appUi.$trigger, {\n        opacity: 0.0001\n      });\n      node_modules_gsap/* default.set */.ZP.set(this.$hubspot, {\n        display: \'block\',\n        zIndex: 999\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$hubspotMask, {\n        opacity: 1,\n        duration: 0.8,\n        ease: \'power2.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$hubspotContent, {\n        scaleY: 1,\n        duration: 1,\n        ease: \'expo.inOut\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$hubspotCloser, {\n        opacity: 1,\n        duration: 0.8,\n        ease: \'power2.out\',\n        delay: 1\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$forms, {\n        opacity: 1,\n        duration: 1,\n        ease: \'power2.out\',\n        delay: 1\n      }); // Block scroll\n\n      if (this.appStore.isDesktop) this.appStore.currentSection.superScroller._scroll.enable = false;else this.appUi.disableScroll();\n      this.domEvents.add(this.$hubspotCloser, \'click\', function () {\n        _this19.closeForm();\n      });\n      if (this.appStore.isDesktop) this.domEvents.add(this.$hubspotMask, \'click\', function () {\n        _this19.closeForm();\n      });\n    }\n  }, {\n    key: "closeForm",\n    value: function closeForm() {\n      var _this20 = this;\n\n      // Animate out\n      node_modules_gsap/* default.to */.ZP.to(this.$hubspotMask, {\n        opacity: 0.0001,\n        duration: 0.4,\n        ease: \'power2.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$hubspotCloser, {\n        opacity: 0.0001,\n        duration: 0.6,\n        ease: \'power2.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$forms, {\n        opacity: 0.0001,\n        duration: 0.6,\n        ease: \'power2.out\'\n      });\n      if (this.appStore.isDesktop) node_modules_gsap/* default.set */.ZP.set([this.appUi.$trigger, this.appUi.$requestButton], {\n        opacity: 1,\n        delay: 0.6\n      });else node_modules_gsap/* default.set */.ZP.set(this.appUi.$trigger, {\n        opacity: 1,\n        delay: 0.6\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$hubspotContent, {\n        scaleY: 0,\n        duration: 0.6,\n        ease: \'expo.inOut\',\n        delay: 0.1,\n        onComplete: function onComplete() {\n          if (_this20.appStore.isDesktop) _this20.appStore.currentSection.superScroller._scroll.enable = true;else _this20.appUi.enableScroll();\n          node_modules_gsap/* default.set */.ZP.set(_this20.appUi.$header, {\n            pointerEvents: \'initial\'\n          });\n          node_modules_gsap/* default.set */.ZP.set(_this20.appUi.$menu, {\n            opacity: 1\n          });\n          node_modules_gsap/* default.set */.ZP.set(_this20.$hubspot, {\n            display: \'none\',\n            zIndex: 0\n          });\n          delete _this20.$hubspotForm.dataset.id;\n          _this20.form.isAnimating = false;\n        }\n      });\n    }\n  }, {\n    key: "raf",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: "beforeResize",\n    value: function beforeResize(width, height) {\n      if (this.superScroller) this.superScroller.resize();\n      this.resize(width, height);\n    }\n  }, {\n    key: "resize",\n    value: function resize(width, height) {} // eslint-disable-line\n\n  }, {\n    key: "enter",\n    value: function enter() {} // eslint-disable-line\n\n  }, {\n    key: "onLeave",\n    value: function onLeave() {\n      this.leave();\n    }\n  }, {\n    key: "leave",\n    value: function leave() {} // eslint-disable-line\n\n  }, {\n    key: "onLeaveCompleted",\n    value: function onLeaveCompleted() {\n      this.afterLeave();\n    }\n  }, {\n    key: "afterLeave",\n    value: function afterLeave() {\n      for (var i = 0; i < this.$forms.length; i++) {\n        this.$forms[i].remove();\n      }\n\n      if (this.domEvents) this.domEvents.destroy();\n      if (this.superScroller) this.superScroller.destroy();\n    }\n  }]);\n\n  return Renderer;\n}(highway_module/* default.Renderer */.Z.Renderer); // Don\'t forget to export your renderer\n\n\n/* harmony default export */ const renderer = (Renderer);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererDefault.js\nfunction rendererDefault_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rendererDefault_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererDefault_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rendererDefault_typeof(obj); }\n\nfunction rendererDefault_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rendererDefault_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererDefault_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererDefault_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererDefault_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererDefault_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererDefault_setPrototypeOf(subClass, superClass); }\n\nfunction rendererDefault_setPrototypeOf(o, p) { rendererDefault_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererDefault_setPrototypeOf(o, p); }\n\nfunction rendererDefault_createSuper(Derived) { var hasNativeReflectConstruct = rendererDefault_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererDefault_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererDefault_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererDefault_possibleConstructorReturn(this, result); }; }\n\nfunction rendererDefault_possibleConstructorReturn(self, call) { if (call && (rendererDefault_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return rendererDefault_assertThisInitialized(self); }\n\nfunction rendererDefault_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rendererDefault_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererDefault_getPrototypeOf(o) { rendererDefault_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererDefault_getPrototypeOf(o); }\n\n// GSAP Library\n\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // Utilities\n\n\n\n\nvar RendererDefault = /*#__PURE__*/function (_Renderer) {\n  rendererDefault_inherits(RendererDefault, _Renderer);\n\n  var _super = rendererDefault_createSuper(RendererDefault);\n\n  function RendererDefault() {\n    rendererDefault_classCallCheck(this, RendererDefault);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererDefault_createClass(RendererDefault, [{\n    key: "selectors",\n    value: function selectors() {} // eslint-disable-line\n\n  }, {\n    key: "events",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: "preload",\n    value: function preload() {\n      // this.preloadDelay = 1;\n      this.preloadItems = {\n        main: [],\n        secondary: []\n      };\n    }\n  }, {\n    key: "beforeEnter",\n    value: function beforeEnter() {} // eslint-disable-line\n\n  }, {\n    key: "enter",\n    value: function enter() {} // eslint-disable-line\n\n  }, {\n    key: "raf",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: "resize",\n    value: function resize(width, height) {} // eslint-disable-line\n\n  }]);\n\n  return RendererDefault;\n}(renderer); // Don\'t forget to export your renderer\n\n\n/* harmony default export */ const rendererDefault = (RendererDefault);\n// EXTERNAL MODULE: ./app/src/js/classes/DrawSVGPlugin.min.js\nvar DrawSVGPlugin_min = __webpack_require__(4374);\nvar DrawSVGPlugin_min_default = /*#__PURE__*/__webpack_require__.n(DrawSVGPlugin_min);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(9365);\n// EXTERNAL MODULE: ./node_modules/dat.gui/build/dat.gui.module.js\nvar dat_gui_module = __webpack_require__(4376);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(9477);\n;// CONCATENATED MODULE: ./app/src/js/webgl/WebGLUtils.js\nfunction WebGLUtils_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction WebGLUtils_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction WebGLUtils_createClass(Constructor, protoProps, staticProps) { if (protoProps) WebGLUtils_defineProperties(Constructor.prototype, protoProps); if (staticProps) WebGLUtils_defineProperties(Constructor, staticProps); return Constructor; }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar WebGLUtils = /*#__PURE__*/function () {\n  function WebGLUtils() {\n    WebGLUtils_classCallCheck(this, WebGLUtils);\n  }\n\n  WebGLUtils_createClass(WebGLUtils, null, [{\n    key: "clamp",\n    value: function clamp(num, min, max) {\n      // Given a num y return the num but making sure its between min and max.\n      // If its below min it will equal to min\n      // If its above max it will equal max\n      return Math.min(Math.max(num, min), max);\n    }\n  }, {\n    key: "lerp",\n    value: function lerp(x, y, a) {\n      //A lerp returns the value between two numbers at a specified, decimal midpoint:\n      // Funciona como mix de glsl\n      // lerp(20, 80, 0)   // 20\n      // lerp(20, 80, 1)   // 80\n      // lerp(20, 80, 0.5) // 40\n      return x * (1 - a) + y * a;\n    }\n  }, {\n    key: "invlerp",\n    value: function invlerp(x, y, a) {\n      // Works in the opposite way to the lerp. Instead of passing a decimal midpoint, you pass any value,\n      // and it’ll return that decimal, wherever it falls on that spectrum. Internally it also uses a clamp,\n      // so you never get unwieldy values back.\n      // invlerp(50, 100, 75)  // 0.5\n      // invlerp(50, 100, 25)  // 0\n      // invlerp(50, 100, 125) // 1\n      return this.clamp((a - x) / (y - x));\n    }\n  }, {\n    key: "range",\n    value: function range(x1, y1, x2, y2, a) {\n      // This final method is ace. It’s a one-liner that converts a value from one data range to another.\n      // That might sound a bit arbitrary, but it’s surprisingly useful.\n      // We pass in two data ranges and a value that sits within data range one (it will still be clamped).\n      //    Range 1    Range 2    Value\n      //range(10, 100, 2000, 20000, 50) // 10000\n      return this.lerp(x2, y2, this.invlerp(x1, y1, a));\n    }\n  }]);\n\n  return WebGLUtils;\n}();\n\n/* harmony default export */ const webgl_WebGLUtils = (WebGLUtils);\n// EXTERNAL MODULE: ./node_modules/easing-functions/index.js\nvar easing_functions = __webpack_require__(6908);\nvar easing_functions_default = /*#__PURE__*/__webpack_require__.n(easing_functions);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1/shaders/home1_dots_vertex.glsl\n/* harmony default export */ const home1_dots_vertex = ("#define GLSLIFY 1\\nattribute vec3 a_randomness;\\nattribute vec3 a_geo1_position;\\nattribute vec3 a_geo1_color;\\nattribute float a_geo1_anguloRad;\\nattribute float a_geo1_orbital;\\nattribute float a_geo1_pos_orbita;\\nattribute float a_geo1_incr_anguloRad;\\nattribute float a_geo1_incr;\\nattribute float a_geo1_dir;\\nattribute float a_geo1_radio;\\n\\nuniform float uCamaraDistance;\\nuniform float uTime;\\nuniform float uOpenProgress;\\nuniform float uResponsiveScale;\\n\\nuniform float uScrollDelta;\\nuniform float uRotation1;\\nuniform float uRotation2;\\nuniform float uRotation3;\\n\\nuniform float uIntroProgress1;\\nuniform float uIntroProgress2;\\nuniform float uIntroProgress3;\\n\\nuniform float uZoomOutProgress1;\\nuniform float uZoomOutProgress2;\\nuniform float uZoomOutProgress3;\\n\\nuniform float uVideoYOffset;\\n\\nuniform float uZoomingProgress;\\n\\nuniform float uHeight;\\n//uniform float uScale;\\n\\nvarying vec3 v_color;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\n\\n#define PI 3.1415926538\\n//#define PI 3.1415926535897932384626433832795\\n\\nvec3 get_pos1(float anguloRad){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(anguloRad)*a_geo1_radio;\\n    float y = sin(anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_openScale(){\\n    return mix(1., 8., uOpenProgress);\\n}\\n\\nvec3 get_openFx( vec3 pos){\\n    //float openScale = mix(1., 8., uOpenProgress);\\n    vec3 posFx = pos*get_openScale();\\n    return posFx;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\nfloat get_pulseStrengthNorm( float direction){\\n    float dotAguleNorm = a_geo1_anguloRad/(2.*PI); // Pasamos el angulo del punto que está en radianes a un valor de 0 a 1.\\n\\n    float modSpeed = mix(1., 2.5, 13./a_geo1_orbital)*direction;\\n    float radialSpeed = uTime*0.02*modSpeed; // Modificamos uTime para determinar la velocidad radial.\\n\\n    float pulseAngleRad = radialSpeed*(4.*PI);\\n\\n    // El valor de pulseAngleRad debe estar entre 0 y 2PI (inicio y fin de una circunferencia).\\n    // Como depende de uTime el valor saldrá de ese rango pronto por lo que tomaremos el resto (modulo),\\n    // de dividir pulseAngleRad por 2PI.\\n    if(pulseAngleRad > 2.*PI){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n    if(pulseAngleRad < 0.){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n\\n    float pulseAngleNorm = pulseAngleRad/(2.*PI); // Normalizamos el valor (de 0 a 1)\\n\\n    float distAngleNorm = abs(pulseAngleNorm-dotAguleNorm); // Calculamos la distancia radial del pulso al punto\\n\\n    // Apañamos la distancia de tal forma que no le afecte el punto de discontinuidad OPI = 2PI\\n    if(distAngleNorm > 0.5){ \\n        distAngleNorm = 0.5-(distAngleNorm-0.5);\\n    }\\n\\n    // La maxima distancia es de medio circulo y en terminos normalizados es 0.5\\n    // Creamos una variable que normalice ese valor entre 0 y 1.\\n    float pulseStrengthNorm  = distAngleNorm*2.; \\n\\n    float pico = 0.92;\\n    pico = mix(pico*0.99, pico*1.01, a_geo1_orbital/13.);\\n\\n    // Nos interesa solo el pico, la zona que va entre 0.95 y 1.\\n    // Toodo lo que haya por debajo de 0.95 lo pasamos a 0.95\\n    // y le restamos ese mismo 0.95 para quedarnos con el pico de 0.05 eol cual amplificamos x20 para normalizarlo (de 0 a 1).\\n    pulseStrengthNorm = (clamp(pulseStrengthNorm, pico, 1.)-pico)*10.;\\n    //--\\n    return pulseStrengthNorm;\\n}\\n\\nvoid main() {\\n\\n    // SORTING:\\n    float anguloRad_time = a_geo1_anguloRad;\\n    float introProgress;\\n    float zoomOutProgress;\\n\\n    if(abs(a_geo1_orbital-9.) < 0.5){ // Detecta el orbital 9\\n        anguloRad_time = a_geo1_anguloRad+uRotation1;\\n        introProgress = mix(2., 0.3, uIntroProgress1); \\n        zoomOutProgress = uZoomOutProgress1;\\n\\n    }else if(abs(a_geo1_orbital-13.) < 0.5){ // Detecta el orbital 13\\n        anguloRad_time = a_geo1_anguloRad+uRotation2;\\n        introProgress = mix(2., 0.5, uIntroProgress2); \\n        zoomOutProgress = uZoomOutProgress2;\\n\\n    }else if(abs(a_geo1_orbital-17.) < 0.5){ // Detecta el orbital 17\\n        anguloRad_time = a_geo1_anguloRad+uRotation3;\\n        introProgress= mix(2., 0.8, uIntroProgress3); \\n        zoomOutProgress = uZoomOutProgress3;\\n    }\\n\\n    float pulseStrengthNorm1 = get_pulseStrengthNorm(1.5);\\n    float pulseStrengthNorm2 = get_pulseStrengthNorm(-1.);\\n    \\n\\n    // Determinamos el tamaño del punto teniendo un minimo de 5 y amplificando el maximo para que visualmente sea bonito\\n    //float size = 5.+(pulseStrengthNorm*15.*longPeriod);\\n    float size = 3.;\\n    //size *= clamp(introProgress, 5., 1.5);\\n    size += (pulseStrengthNorm1*5.);\\n    size += (pulseStrengthNorm2*5.);\\n    size *= mix(1., 8., uOpenProgress);\\n\\n    //-----------------------------------\\n    // POSITION:\\n    vec3 pos_original = get_pos1(anguloRad_time);\\n    pos_original *= uResponsiveScale;\\n\\n    vec3 pos_final = pos_original;\\n    pos_final *= introProgress;\\n    pos_final = mix(pos_final, pos_original, zoomOutProgress);\\n\\n    pos_final *= mix(1., 8., uOpenProgress);\\n\\n    float videoYOffset = uVideoYOffset;\\n    videoYOffset = clamp (videoYOffset, 0., abs(videoYOffset));\\n    pos_final.y -= videoYOffset;\\n    \\n\\n    vec4 mvPosition = modelViewMatrix * vec4( pos_final, 1.0 ); //<-----------------------------------\\n    gl_Position = projectionMatrix * mvPosition; //<--------------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    //--------------------------------------\\n    // VARYINGS:\\n    v_color = a_geo1_color; \\n    v_pulseStrengthNorm1 = pulseStrengthNorm1; \\n    v_pulseStrengthNorm2 = pulseStrengthNorm2; \\n\\n}\\n\\n");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1/shaders/home1_dots_fragment.glsl\n/* harmony default export */ const home1_dots_fragment = ("#define GLSLIFY 1\\nvarying vec3 v_color;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\nfloat circulizar(float radio){\\n    // radio es un valor entre 0 y 1. 0 es 0 de radio y 1 es el maximo del radio dentro de\\n    radio = 1.0-(0.5*radio);\\n    float result = distance(gl_PointCoord, vec2(0.5, 0.5));\\n    result = 1. -result;\\n    result = pow(result, 1.);\\n    result = step(radio, result);\\n    return result;\\n}\\n\\nvoid main() {\\n    vec3 white = vec3(1., 1., 1.);\\n    float pulse = v_pulseStrengthNorm1+v_pulseStrengthNorm2;\\n    pulse = clamp(pulse, 0., 1.);\\n    vec3 finalColor = v_color;\\n    //finalColor = mix(finalColor, white, pulse*5.);\\n    //finalColor = mix(finalColor, white, 0.);\\n    float alpha = circulizar(1.0);\\n\\n    gl_FragColor = vec4(finalColor, alpha*0.8);\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/EventProgress.js\nfunction EventProgress_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction EventProgress_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction EventProgress_createClass(Constructor, protoProps, staticProps) { if (protoProps) EventProgress_defineProperties(Constructor.prototype, protoProps); if (staticProps) EventProgress_defineProperties(Constructor, staticProps); return Constructor; }\n\n//import * as THREE from "three"\n\n\n\nvar events = __webpack_require__(7187);\n\nvar EventProgress = /*#__PURE__*/function () {\n  function EventProgress(id) {\n    EventProgress_classCallCheck(this, EventProgress);\n\n    //console.log("(EventProgress.CONSTRUCTORA)! ")\n    this.durationSec;\n    this.id = id;\n    this.easingFunc = null;\n    this.processTimeSec = null;\n    this.refTimeSec = null; // Secs de referencia del rejof de gsap cuando empieza el start\n    //--\n\n    this.starting_t = 0; // t de referencia de inicio.\n\n    this.t = 0; // En un valor que progresa linealmente de 0 a 1.\n\n    this.range_t = 0; // Ee el rango sobre el que progresará t quitando su starting point.\n    //--\n    //this.process = 0 // Es un valor que traduce la progresión lineal de t a un progresión easong en función de this.easingFunc \n    //--\n\n    this.initialized = false;\n    this.active = false; //--\n\n    this.emitter = new events.EventEmitter();\n  }\n\n  EventProgress_createClass(EventProgress, [{\n    key: "start",\n    value: function start(durationSec, starting_t, easingFunc, pauseSec) {\n      var _this = this;\n\n      //console.log("(EventProgress.start)("+this.id+") durationSec: "+durationSec+" starting_t: "+starting_t)\n      if (pauseSec == 0) {\n        this.initialized = true;\n        this.active = true;\n        this.durationSec = durationSec;\n        this.easingFunc = easingFunc;\n        this.starting_t = starting_t;\n        this.t = starting_t;\n        this.range_t = 1 - this.starting_t;\n        this.refTimeSec = this._get_tickerTime(); //--\n\n        node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this.onTick);\n        this.onTick = this._update.bind(this);\n        node_modules_gsap/* default.ticker.add */.ZP.ticker.add(this.onTick);\n      } else {\n        node_modules_gsap/* default.delayedCall */.ZP.delayedCall(pauseSec, function () {\n          return _this.start(durationSec, starting_t, easingFunc, 0);\n        });\n      }\n    }\n  }, {\n    key: "stop",\n    value: function stop() {\n      this.active = false;\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this.onTick);\n    }\n  }, {\n    key: "get_t",\n    value: function get_t() {\n      return this.t;\n    }\n  }, {\n    key: "get_progress",\n    value: function get_progress() {\n      if (this.initialized) {\n        return this.easingFunc(this.t);\n      } else {\n        return 0;\n      }\n    } //-----------------------------------------\n\n  }, {\n    key: "_get_tickerTime",\n    value: function _get_tickerTime() {\n      return node_modules_gsap/* default.ticker.time */.ZP.ticker.time;\n    }\n  }, {\n    key: "_update",\n    value: function _update() {\n      var tickerTime = this._get_tickerTime();\n\n      this.processTimeSec = tickerTime - this.refTimeSec;\n\n      if (this.processTimeSec >= this.durationSec) {\n        this.active = false;\n        this.processTimeSec = this.durationSec;\n        node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this.onTick); //--\n        //console.log("onProgressFinished")\n\n        this.emitter.emit("onProgressFinished");\n      } //console.log("starting_t: "+this.starting_t)\n      // console.log("this.processTimeSec/this.durationSec: "+this.processTimeSec/this.durationSec)\n      //console.log("this.range_t: "+this.range_t)\n\n\n      this.t = this.starting_t + this.processTimeSec / this.durationSec * this.range_t; //console.log("t: "+this.t)\n    }\n  }]);\n\n  return EventProgress;\n}();\n\n/* harmony default export */ const webgl_EventProgress = (EventProgress);\n;// CONCATENATED MODULE: ./app/src/js/webgl/EasedOutValue.js\nfunction EasedOutValue_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction EasedOutValue_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction EasedOutValue_createClass(Constructor, protoProps, staticProps) { if (protoProps) EasedOutValue_defineProperties(Constructor.prototype, protoProps); if (staticProps) EasedOutValue_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar EasedOutValue = /*#__PURE__*/function () {\n  function EasedOutValue(_value, _factor) {\n    EasedOutValue_classCallCheck(this, EasedOutValue);\n\n    //console.log("(EasedOutValue.CONSTRUCTORA): "+_value)\n    this.value = _value;\n    this.factor = _factor;\n  }\n\n  EasedOutValue_createClass(EasedOutValue, [{\n    key: "get",\n    value: function get(newValue) {\n      var filteredValue = this.value + (newValue - this.value) * this.factor;\n      this.value = filteredValue; //console.log(filteredValue)\n\n      return filteredValue;\n    }\n  }]);\n\n  return EasedOutValue;\n}();\n\n/* harmony default export */ const webgl_EasedOutValue = (EasedOutValue);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1/Home1Geometry.js\nfunction Home1Geometry_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Home1Geometry_typeof = function _typeof(obj) { return typeof obj; }; } else { Home1Geometry_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Home1Geometry_typeof(obj); }\n\nfunction Home1Geometry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home1Geometry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home1Geometry_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home1Geometry_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home1Geometry_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Home1Geometry_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Home1Geometry_setPrototypeOf(subClass, superClass); }\n\nfunction Home1Geometry_setPrototypeOf(o, p) { Home1Geometry_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Home1Geometry_setPrototypeOf(o, p); }\n\nfunction Home1Geometry_createSuper(Derived) { var hasNativeReflectConstruct = Home1Geometry_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Home1Geometry_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Home1Geometry_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Home1Geometry_possibleConstructorReturn(this, result); }; }\n\nfunction Home1Geometry_possibleConstructorReturn(self, call) { if (call && (Home1Geometry_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Home1Geometry_assertThisInitialized(self); }\n\nfunction Home1Geometry_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Home1Geometry_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Home1Geometry_getPrototypeOf(o) { Home1Geometry_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Home1Geometry_getPrototypeOf(o); }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar EventEmitter = __webpack_require__(7187);\n\nvar Home1Geometry = /*#__PURE__*/function (_EventEmitter) {\n  Home1Geometry_inherits(Home1Geometry, _EventEmitter);\n\n  var _super = Home1Geometry_createSuper(Home1Geometry);\n\n  function Home1Geometry(obj) {\n    var _this;\n\n    Home1Geometry_classCallCheck(this, Home1Geometry);\n\n    //console.log("(Home1Geometry.CONSTRUCTORA)!")\n    _this = _super.call(this); //--\n\n    _this.factor = obj.factor; //6\n\n    _this.incr_radio = obj.incr_radio; //25\n\n    _this.numOrbits = obj.numOrbits; //37\n\n    _this.array_triangular = obj.array_triangular;\n    _this.array_dotPos = obj.array_dotPos;\n    _this.numDots = obj.numDots; //--\n\n    _this.arrayColores_RGB = [];\n    _this.arrayColores_RGB_01 = [];\n    _this.colorPos = 0;\n\n    _this._init_colors(); //--\n\n\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_color: new Float32Array(_this.numDots * 3),\n      a_orbital: new Float32Array(_this.numDots * 1),\n      a_pos_orbita: new Float32Array(_this.numDots * 1),\n      a_incr_anguloRad: new Float32Array(_this.numDots * 1),\n      a_anguloRad: new Float32Array(_this.numDots * 1),\n      a_radio: new Float32Array(_this.numDots * 1),\n      a_dir: new Float32Array(_this.numDots * 1),\n      a_incr: new Float32Array(_this.numDots * 1),\n      a_x: new Float32Array(_this.numDots * 1),\n      a_y: new Float32Array(_this.numDots * 1),\n      a_z: new Float32Array(_this.numDots * 1)\n    }; //--\n\n    for (var i = 0; i < _this.array_dotPos.length; i++) {\n      var dotPos = _this.array_dotPos[i];\n\n      var dot = _this._get_dot(dotPos);\n\n      var i3 = i * 3;\n      _this.attributes.a_posiciones[i3] = dot.x;\n      _this.attributes.a_posiciones[i3 + 1] = dot.y;\n      _this.attributes.a_posiciones[i3 + 2] = dot.z; //--\n\n      _this.attributes.a_color[i3] = dot.color[0];\n      _this.attributes.a_color[i3 + 1] = dot.color[1];\n      _this.attributes.a_color[i3 + 2] = dot.color[2]; //--\n\n      _this.attributes.a_orbital[i] = dot.orbital;\n      _this.attributes.a_pos_orbita[i] = dot.pos_orbita;\n      _this.attributes.a_incr_anguloRad[i] = dot.incr_anguloRad;\n      _this.attributes.a_anguloRad[i] = dot.anguloRad;\n      _this.attributes.a_radio[i] = dot.radio;\n      _this.attributes.a_dir[i] = dot.dir;\n      _this.attributes.a_incr[i] = dot.incr;\n      _this.attributes.a_x[i] = dot.y;\n      _this.attributes.a_y[i] = dot.y;\n      _this.attributes.a_z[i] = dot.z;\n    } //--\n\n\n    _this.loaded = false;\n    return _this;\n  } //------------------------------------------\n  // PRIVADAS\n\n\n  Home1Geometry_createClass(Home1Geometry, [{\n    key: "_get_dot",\n    value: function _get_dot(num) {\n      // Devuelve un objeto con la información de un punto de la geometria "orbital MIOTI"\n      var obj = {\n        num: num,\n        color: this._get_color(),\n        x: 0,\n        y: 0,\n        z: 0,\n        orbital: 0,\n        co_orbitantes: 0,\n        pos_orbita: 0,\n        incr_anguloRad: 0,\n        anguloRad: 0,\n        radio: 0\n      }; //--\n\n      for (var i = 0; i <= this.array_triangular.length; i++) {\n        var limSup = this.array_triangular[i]; //console.log("limSup: "+limSup)\n\n        if (num > limSup) {\n          // console.log("*")\n          obj.orbital = i + 1;\n          obj.co_orbitantes = (i + 1) * this.factor;\n          obj.pos_orbita = num - limSup - 1;\n          obj.incr_anguloRad = 2 * Math.PI / obj.co_orbitantes;\n\n          if (obj.orbital % 2 == 0) {\n            obj.dir = 1;\n            obj.incr = 0;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad;\n          } else {\n            obj.dir = -1;\n            obj.incr = 1;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad + obj.incr_anguloRad / 2;\n          }\n\n          obj.radio = obj.orbital * this.incr_radio; //--\n\n          obj.x = Math.cos(obj.anguloRad) * obj.radio;\n          obj.y = Math.sin(obj.anguloRad) * obj.radio;\n          obj.z = 0;\n        } //break\n\n      }\n\n      return obj;\n    }\n  }, {\n    key: "_get_color",\n    value: function _get_color() {\n      var color_RGB_01 = this.arrayColores_RGB_01[this.colorPos];\n      this.colorPos++;\n\n      if (this.colorPos > this.arrayColores_RGB_01.length - 1) {\n        this.colorPos = 0;\n      }\n\n      return color_RGB_01;\n    }\n  }, {\n    key: "_init_colors",\n    value: function _init_colors() {\n      this.arrayColores_RGB = [];\n      this.arrayColores_RGB.push([255, 87, 131]); // Rosa\n\n      this.arrayColores_RGB.push([89, 2, 2]);\n      this.arrayColores_RGB.push([1, 3, 49]);\n      this.arrayColores_RGB.push([0, 16, 116]);\n      this.arrayColores_RGB.push([14, 133, 255]);\n      this.arrayColores_RGB_01 = [];\n\n      for (var i = 0; i < this.arrayColores_RGB.length; i++) {\n        var color_RGB = this.arrayColores_RGB[i];\n        var color_RGB_01 = [color_RGB[0] / 255, color_RGB[1] / 255, color_RGB[2] / 255];\n        this.arrayColores_RGB_01.push(color_RGB_01);\n      }\n    }\n  }]);\n\n  return Home1Geometry;\n}(EventEmitter);\n\n/* harmony default export */ const home1_Home1Geometry = (Home1Geometry);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1/Home1Dots.js\nfunction Home1Dots_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home1Dots_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home1Dots_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home1Dots_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home1Dots_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n //import vertex_bg from "./shaders/home1_background_vertex.glsl"\n//import fragment_bg from "./shaders/home1_background_fragment.glsl"\n\n\n\n\n\nvar Home1Dots = /*#__PURE__*/function () {\n  function Home1Dots(obj) {\n    Home1Dots_classCallCheck(this, Home1Dots);\n\n    //console.log("(Home1Dots.CONSTRUCTORA)!!")\n    //console.log(obj)\n    this.worldGL = obj.worldGL; //--\n    //--\n\n    this.scene = this.worldGL.scene;\n    this.cameraDistance = this.worldGL.cameraDistance; //console.log("this.worldGL.cameraDistance: "+this.worldGL.cameraDistance)\n    //--\n\n    this.material = null;\n    this.geometry = null;\n    this.mesh = null;\n    this.numParticles = null;\n    this.created = false;\n    this.clock = new three_module/* Clock */.SUY();\n    this.rotation = 0; //--\n    //this.event_intro_c1 = new EventProcess({durationSec: 2})\n\n    this.event_intro_c1 = new webgl_EventProgress();\n    this.event_intro_c2 = new webgl_EventProgress();\n    this.event_intro_c3 = new webgl_EventProgress();\n    this.event_zoomout_c1 = new webgl_EventProgress();\n    this.event_zoomout_c2 = new webgl_EventProgress();\n    this.event_zoomout_c3 = new webgl_EventProgress();\n    this.eased_scrollDelta_fast = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.5, 0.1); //--\n\n    this._setup_settings(); //this._init_scrollListeners()\n    //this._setup_gui()\n    //--\n\n\n    this.orbital_geometry = new home1_Home1Geometry(this.settings); //--\n    //--\n    //this._createcube(this.scene)\n\n    this._create(); //--\n    //--\n    // const animTime_intro = 1.5\n    // const animTime_acelDecel = 2\n    // const animTime_unzoom = 0.9\n    //const easeFunc_intro = Easing.Exponential.Out\n    //const initial_pause = 0.3\n    //this.eventFase = "intro"\n    //this.event_intro_c1.start(0.9, 0, easeFunc_intro, initial_pause+0.0)\n    //this.event_intro_c2.start(1.1, 0, easeFunc_intro, initial_pause+0.1)\n    //this.event_intro_c3.start(1.2, 0, easeFunc_intro, initial_pause+0.2)        //--\n    //\n    //gsap.delayedCall(initial_pause+1.2, ()=>{\n    //    this.worldGL.hw_renderer.initEnterAnimation();\n    //    this.do_zoomOut();\n    //})\n\n  }\n\n  Home1Dots_createClass(Home1Dots, [{\n    key: "do_zoomOut",\n    value: function do_zoomOut() {\n      var _this = this;\n\n      //console.log("((Home1Dots.do_zoomOut)!")\n      var easeFunc_zoomout = (easing_functions_default()).Quartic.InOut; //const easeFunc_zoomout = Easing.Exponential.InOut\n\n      this.eventFase = "unzoom"; //--\n\n      this.event_zoomout_c1.start(1.4, 0, easeFunc_zoomout, 0);\n      this.event_zoomout_c2.start(1.5, 0, easeFunc_zoomout, 0.1);\n      this.event_zoomout_c3.start(1.8, 0, easeFunc_zoomout, 0.2); //--\n\n      this.event_zoomout_c3.emitter.on("onProgressFinished", function () {\n        _this.eventFase = "interactive";\n      });\n    } //------------------------------------\n    // PUBLICAS: \n\n  }, {\n    key: "init",\n    value: function init() {\n      var _this2 = this;\n\n      console.log("(Home1Dots.init)!");\n      var easeFunc_intro = (easing_functions_default()).Exponential.Out;\n      var initial_pause = 0;\n      this.eventFase = "intro";\n      this.event_intro_c1.start(0.9, 0, easeFunc_intro, initial_pause + 0.0);\n      this.event_intro_c2.start(1.1, 0, easeFunc_intro, initial_pause + 0.1);\n      this.event_intro_c3.start(1.2, 0, easeFunc_intro, initial_pause + 0.2); //--\n\n      node_modules_gsap/* default.delayedCall */.ZP.delayedCall(initial_pause + 1.2, function () {\n        _this2.worldGL.hw_renderer.initEnterAnimation();\n\n        _this2.do_zoomOut();\n      });\n    } //------------------------------------\n\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.created) {\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uCamaraDistance.value = this.worldGL.cameraDistance;\n        this.material.uniforms.uOpenProgress.value = this.settings.openProgress * 2;\n        this.material.uniforms.uResponsiveScale.value = this.worldGL.responsiveScale;\n        this.material.uniforms.uScrollDelta.value = -this.eased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5); //--\n\n        var extraSpeed;\n\n        if (this.eventFase == "interactive") {\n          extraSpeed = 1 + Math.abs(this.eased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5) * 10);\n        } else {\n          extraSpeed = 1;\n        }\n\n        this.settings.rotation1 += this.settings.speedRotation1 * extraSpeed;\n        this.settings.rotation2 += this.settings.speedRotation2 * extraSpeed;\n        this.settings.rotation3 += this.settings.speedRotation3 * extraSpeed;\n        this.material.uniforms.uRotation1.value = this.settings.rotation1;\n        this.material.uniforms.uRotation2.value = -this.settings.rotation2;\n        this.material.uniforms.uRotation3.value = this.settings.rotation3; //console.log(this.material.uniforms.uRotation1.value)\n\n        this.material.uniforms.uIntroProgress1.value = this.event_intro_c1.get_progress();\n        this.material.uniforms.uIntroProgress2.value = this.event_intro_c2.get_progress();\n        this.material.uniforms.uIntroProgress3.value = this.event_intro_c3.get_progress();\n        this.material.uniforms.uZoomOutProgress1.value = this.event_zoomout_c1.get_progress();\n        this.material.uniforms.uZoomOutProgress2.value = this.event_zoomout_c2.get_progress();\n        this.material.uniforms.uZoomOutProgress3.value = this.event_zoomout_c3.get_progress(); //console.log(this.material.uniforms.uZoomOutProgress1.value+" - "+this.material.uniforms.uZoomOutProgress2.value+" - "+this.material.uniforms.uZoomOutProgress3.value)\n        //this.material.uniforms.uFallProcess.value = this.event_fall.get_progress()\n\n        this.material.uniforms.uFallProcess.value = 1;\n        this.material.uniforms.uHeight.value = this.worldGL.height; //console.log("uIntroProgress1: "+this.material.uniforms.uIntroProgress1.value)\n\n        var videoBounds = this.worldGL.$video.getBoundingClientRect();\n        this.material.uniforms.uVideoYOffset.value = videoBounds.y; //console.log(videoBounds.y)\n      }\n    }\n    /*\r\n    onUpdateGeometryPosY(posY){\r\n        // Este script hacia los calculos para sincronizar la posicin de la geometria con las de un div que se movía verticalmente con el scroll.\r\n                // Comentado por si sirve en el futuro.\r\n        console.log("posY: "+posY)\r\n        this.settings.geometryPosY = posY\r\n        this.mesh.position.setY(posY);\r\n    }\r\n    */\n\n  }, {\n    key: "onUpdateOpenProgress",\n    value: function onUpdateOpenProgress(progress) {\n      this.settings.openProgress = progress;\n    } //------------------------------------\n    // PUBLICAS:\n\n  }, {\n    key: "resize",\n    value: function resize(newWidth, newHeight) {//console.log("(GradientBackground.resize)!")\n    } //------------------------------------\n    // PRIVADAS: \n\n  }, {\n    key: "_setup_settings",\n    value: function _setup_settings() {\n      //console.log("(Home1Dots._setup_settings)!!")\n      var speedBase = 0.002;\n      this.settings = {\n        factor: 6,\n        incr_radio: 25,\n        numOrbits: 31,\n        //arrayOrbits: [5, 6, 7, 8, 9, 10, 13, 17, 18, 19, 22, 23, 24, 25, 26, 27]\n        arrayOrbits: [9, 13, 17],\n        //arrayOrbits: [1, 3]\n        // Ortbit rotation\n        speedBase: speedBase,\n        rotation1: 0,\n        speedRotation1: 3 * speedBase,\n        rotation2: 2,\n        speedRotation2: 2 * speedBase,\n        rotation3: 0,\n        speedRotation3: 1 * speedBase\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.array_triangular_dots_x_orbita = this._get_array_triangular_dots_x_orbita(this.settings.array_triangular, this.settings.arrayOrbits);\n      this.settings.array_dotPos = this._get_array_dotPos(this.settings.arrayOrbits, this.settings.array_triangular, this.settings.array_triangular_dots_x_orbita);\n      this.settings.numDots = this.settings.array_dotPos.length;\n      this.settings.openProgress = 0;\n      this.settings.geometryPosY = 0; //this.settings.numDots = this.settings.array_triangular[this.settings.array_triangular.length-1]\n      //console.log("this.settings.array_triangular: "+this.settings.array_triangular)\n      //console.log("this.settings.array_triangular_dots_x_orbita: "+this.settings.array_triangular_dots_x_orbita)\n      //console.log("this.settings.numDots: "+this.settings.numDots)\n      //console.log("this.settings.arrayOrbits: "+this.settings.arrayOrbits)\n      //console.log("this.settings.array_dotPos: "+this.settings.array_dotPos)\n      //console.log("this.settings.array_dotPos.length: "+this.settings.array_dotPos.length)\n    }\n  }, {\n    key: "_create",\n    value: function _create() {\n      //console.log("(Home1Dots._create)!")\n      //--\n      var videoBounds = this.worldGL.$video.getBoundingClientRect();\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        depthWrite: false,\n        //blending: THREE.AdditiveBlending,\n        vertexColors: true,\n        vertexShader: home1_dots_vertex,\n        fragmentShader: home1_dots_fragment,\n        transparent: true,\n        uniforms: {\n          uCamaraDistance: {\n            value: this.worldGL.cameraDistance\n          },\n          uTime: {\n            value: 0\n          },\n          //uScale:{value: 1},\n          uOpenProgress: {\n            value: 0\n          },\n          uResponsiveScale: {\n            value: 0\n          },\n          uScrollDelta: {\n            value: 0\n          },\n          uRotation1: {\n            value: 0\n          },\n          uRotation2: {\n            value: 0\n          },\n          uRotation3: {\n            value: 0\n          },\n          uIntroProgress1: {\n            value: 0\n          },\n          uIntroProgress2: {\n            value: 0\n          },\n          uIntroProgress3: {\n            value: 0\n          },\n          uZoomOutProgress1: {\n            value: 0\n          },\n          uZoomOutProgress2: {\n            value: 0\n          },\n          uZoomOutProgress3: {\n            value: 0\n          },\n          uFallProcess: {\n            value: 0\n          },\n          uHeight: {\n            value: this.worldGL.height\n          },\n          uVideoYOffset: {\n            value: videoBounds.y\n          },\n          uZoomingProgress: {\n            value: 0\n          } //uVideoHeight:{value: videoBounds.height},\n\n        }\n      }); //--\n      //console.log(this.orbital_geometry.attributes.a_color)\n      //--\n\n      this.geometry = new three_module/* BufferGeometry */.u9r();\n      this.geometry.setAttribute(\'position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_color\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_color, 3));\n      this.geometry.setAttribute(\'a_geo1_orbital\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_orbital, 1));\n      this.geometry.setAttribute(\'a_geo1_pos_orbita\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_pos_orbita, 1));\n      this.geometry.setAttribute(\'a_geo1_incr_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_radio\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_radio, 1));\n      this.geometry.setAttribute(\'a_geo1_dir\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dir, 1));\n      this.geometry.setAttribute(\'a_geo1_incr\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr, 1));\n      this.geometry.setAttribute(\'a_geo1_x\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_x, 1));\n      this.geometry.setAttribute(\'a_geo1_y\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_y, 1));\n      this.geometry.setAttribute(\'a_geo1_z\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_z, 1));\n      this.mesh = new three_module/* Points */.woe(this.geometry, this.material);\n      this.scene.add(this.mesh); //---------\n      // this.material2 = new THREE.ShaderMaterial({\n      //     depthWrite: false,\n      //     blending: THREE.AdditiveBlending,\n      //     vertexColors: true,\n      //     vertexShader: vertex_bg, \n      //     fragmentShader: fragment_bg,\n      //     transparent: true,\n      //     uniforms: {\n      //         uCamaraDistance: {value: this.worldGL.cameraDistance},\n      //         uTime: {value: 0},\n      //         //uScale:{value: 1.5},\n      //         uOpenProgress:{value: 0}\n      //     }\n      // })\n      // this.mesh2 = new THREE.Points(this.geometry, this.material2)\n      // this.mesh2.position.z =-1\n      // this.scene.add(this.mesh2)\n      //---------\n\n      this.created = true;\n    }\n  }, {\n    key: "_init_scrollListeners",\n    value: function _init_scrollListeners() {\n      /*\r\n      ScrollTrigger.create({\r\n          trigger: document.querySelector(\'.about__hero\'),\r\n          start: \'top top\',\r\n          end: \'bottom top\',\r\n          //once: true,\r\n          // markers: true,\r\n          scrub: true,\r\n          onUpdate: (e) => {\r\n              let incr = e.progress - this.lastScrollValue\r\n              incr = Math.round(incr * 1000)\r\n              this.lastScrollValue = e.progress\r\n              incr = Math.min(Math.max(parseInt(incr), -20), 20);\r\n              this.settings.scrollSpeed = incr/20\r\n              //--console.log(e)\r\n              this.settings.progress5 = e.progress*5 //Rotaciones\r\n              this.settings.progress0 = e.progress*10 //\r\n              this.settings.progress6 = e.progress*10\r\n              this.settings.progress4 = e.progress*50\r\n          }\r\n      })\r\n      // Progreso sección Touch\r\n      ScrollTrigger.create({\r\n          trigger: document.querySelector(\'.about__touch\'),\r\n          start: \'top bottom\',\r\n          end: \'bottom bottom\',\r\n          //once: true,\r\n          // markers: true,\r\n          scrub: true,\r\n          onUpdate: (e) => {\r\n              this.settings.progress1 = e.progress\r\n          }\r\n      })\r\n      */\n    }\n  }, {\n    key: "_get_array_dotPos",\n    value: function _get_array_dotPos(_arrayOrbits, _array_triangular, _array_triangular_dots_x_orbita) {\n      var miArray = [];\n\n      for (var i = 0; i < _arrayOrbits.length; i++) {\n        var orbitNum = _arrayOrbits[i];\n        var dots_x_orbit = _array_triangular_dots_x_orbita[i];\n        var dotNum_base = _array_triangular[_arrayOrbits[i] - 1]; // console.log("orbitNum: "+orbitNum)\n        // console.log("dots_x_orbit: "+dots_x_orbit)\n        // console.log("dotNum_base: "+dotNum_base)\n\n        for (var j = 0; j < dots_x_orbit; j++) {\n          miArray.push(dotNum_base + j + 1);\n        }\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_numDots",\n    value: function _get_numDots(_array_triangular_dots_x_orbita) {\n      var numDots = 0;\n\n      for (var i = 0; i <= _array_triangular_dots_x_orbita.length - 1; i++) {\n        numDots += _array_triangular_dots_x_orbita[i];\n      }\n\n      return numDots;\n    }\n  }, {\n    key: "_get_array_triangular_dots_x_orbita",\n    value: function _get_array_triangular_dots_x_orbita(_array_triangular, _arrayOrbits) {\n      // Genera una array basada en la progresión triangular (* factor).\n      // ... donde se indica el numero de dots por orbital\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _arrayOrbits.length - 1; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        var numDots_orbita_actual = _array_triangular[_arrayOrbits[i]];\n        var numDots_orbita_anterior = _array_triangular[_arrayOrbits[i] - 1];\n        var numDots_orbita = numDots_orbita_actual - numDots_orbita_anterior;\n        miArray.push(numDots_orbita);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_array_triangular",\n    value: function _get_array_triangular(_factor, _numObits) {\n      // Genera una array de progresión triangular (* factor).\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _numObits; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        miArray.push(i * (i + 1) / 2 * _factor);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_setup_gui",\n    value: function _setup_gui() {//console.log("(Home1Dots._setup_gui)!")\n      // this.gui = new dat.GUI();\n      // this.gui.width = 400\n      // const folder0 = this.gui.addFolder("Orbit spinning")\n      // folder0.add(this.settings, "progress5", 0, 10, 0.01).name("Progress")\n      // folder0.open()\n    }\n  }, {\n    key: "_createcube",\n    value: function _createcube(_scene) {\n      var geometry = new three_module/* BoxGeometry */.DvJ(100, 100, 100);\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        color: 0xff0000\n      });\n      var cube = new three_module/* Mesh */.Kj0(geometry, material);\n\n      _scene.add(cube);\n    } //---------------------------------------------------------\n    //---------------------------------------------------------\n\n  }]);\n\n  return Home1Dots;\n}();\n\n/* harmony default export */ const home1_Home1Dots = (Home1Dots);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1/Home1App.js\nfunction Home1App_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home1App_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home1App_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home1App_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home1App_defineProperties(Constructor, staticProps); return Constructor; }\n\n// FPS-Meter:\n//(function(){var script=document.createElement(\'script\');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src=\'//cdn.jsdelivr.net/gh/Kevnz/stats.js/build/stats.min.js\';document.head.appendChild(script);})()\n\n\n\n\n\n\n\n\nvar Home1App = /*#__PURE__*/function () {\n  function Home1App(obj) {\n    Home1App_classCallCheck(this, Home1App);\n\n    //console.log("(Home1App.CONSTRUCTORA)!!", obj) \n    this.hw_renderer = obj.renderer; // Rederer/pagina de HighWay. No confundir con el render/renderer de Three.js\n\n    this.$container = obj.domElement; //--\n\n    this.$video = this.hw_renderer.$video;\n    this.$inner = document.querySelector(\'.inner\');\n    this.$video = this.hw_renderer.$video; //--\n\n    this.width = this.$container.offsetWidth; //console.log("width: "+this.width)\n\n    this.height = this.$container.offsetHeight; //--\n\n    this.refResolution = 1920;\n    this.responsiveScale = this.width / this.refResolution; //--\n\n    this.cameraDistance = 500; //--\n\n    this.settings = {\n      scroll_lastInnerY: 0,\n      // Ultima posición del elemento de referencia\n      scroll_delta: 0,\n      // Incremento de pixels del scroll\n      scroll_limitedDelta: 0,\n      // Limita los valores a -20 -> +20\n      scroll_normalizedDelta: 0,\n      // Pasa el delta a -1 -> +1\n      scroll_factordDelta: 1,\n      // Valores absolutos de 0 -> 1\n      scroll_direction: 1 // Direccion del delta. 1 si está parado\n\n    }; //--\n    // Scene\n\n    this.scene = new three_module/* Scene */.xsS(); //--\n    // Camera\n    //PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\n\n    this.camera = new three_module/* PerspectiveCamera */.cPb(30, this.width / this.height, 0.1, 2000);\n    this.camera.position.z = this.cameraDistance;\n    this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //--\n    // Renderer\n    //--\n\n    this.ACTIVE_RENDER = false; //--\n\n    this.renderer = new three_module/* WebGL1Renderer */.b5g({\n      antialias: true,\n      alpha: true\n    });\n    this.renderer.autoClear = false; // Vamos a usar 2 scenas (una para el background y otra para los puntos) que implicarán usar 2 acciones de render. Con autoclear false permitimos que la segunda no borre la primera.\n    //console.log("window.devicePixelRatio (original): "+window.devicePixelRatio)\n\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1)); //console.log("window.devicePixelRatio (filtrado): "+window.devicePixelRatio)\n    //console.log("WebGL2?: "+this.renderer.capabilities.isWebGL2)\n    //--\n    //this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n    // this.controls.addEventListener(\'change\', (e) =>{\n    //     this.onCameraPositionChange(e)\n    // });\n    //--\n\n    this.$container.appendChild(this.renderer.domElement); //--\n\n    this.dots = new home1_Home1Dots({\n      worldGL: this\n    }); //--\n\n    this._resize(); //this._render();\n    //this._init_scrollListeners()\n\n  } //---------------------------\n  // PUBLICAS:\n\n\n  Home1App_createClass(Home1App, [{\n    key: "init",\n    value: function init() {\n      this.$video = this.hw_renderer.$video;\n      this.$inner = document.querySelector(\'.inner\');\n      this.$video = this.hw_renderer.$video; //--\n\n      this.dots.init(); //--\n\n      this._init_scrollListeners();\n\n      this._render();\n    }\n  }, {\n    key: "kill",\n    value: function kill() {\n      this.trigger.kill();\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_render);\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_eval_scroll);\n      this.dots = null;\n    } //---------------------------\n\n  }, {\n    key: "onUpdateOpenProgress",\n    value: function onUpdateOpenProgress(progress) {\n      if (this.dots) {\n        this.dots.onUpdateOpenProgress(progress);\n      }\n    }\n  }, {\n    key: "onResize",\n    value: function onResize() {\n      //console.log("(Home1App.onResize)!")\n      this._resize();\n    } //---------------------------\n    // PRIVADAS:\n\n  }, {\n    key: "_init_scrollListeners",\n    value: function _init_scrollListeners() {\n      var _this = this;\n\n      var binded_render = function binded_render() {\n        _this._render();\n      };\n\n      var binded_eval_scroll = function binded_eval_scroll() {\n        _this._eval_scroll(_this.trigger.progress);\n      };\n\n      this._binded_render = binded_render;\n      this._binded_eval_scroll = binded_eval_scroll;\n      this.trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$video,\n        start: \'top bottom\',\n        end: \'bottom top\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        //markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            // console.log("MAIN_ACTIVE")\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_render);\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_eval_scroll);\n          } else {\n            // console.log("MAIN_NOT_ACTIVE")\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_render);\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_eval_scroll);\n          }\n        }\n      });\n    }\n  }, {\n    key: "_eval_scroll",\n    value: function _eval_scroll(progress) {\n      var innerData = this.$inner.getBoundingClientRect();\n      var newInnerY = innerData.y;\n      this.settings.scroll_delta = newInnerY - this.settings.scroll_lastInnerY;\n      this.settings.scroll_lastInnerY = newInnerY;\n      this.settings.scroll_limitedDelta = webgl_WebGLUtils.clamp(this.settings.scroll_delta, -20, 20); // Limita los valores a -20 -> +20\n\n      this.settings.scroll_normalizedDelta = (this.settings.scroll_limitedDelta / 20).toFixed(3); // Pasa el delta a -1 -> +1\n\n      this.settings.scroll_factordDelta = Math.abs(this.settings.scroll_normalizedDelta) + 0; // Valores absolutos de 0 -> 1\n\n      this.settings.scroll_direction = 1;\n\n      if (this.settings.scroll_normalizedDelta < 0) {\n        this.settings.scroll_direction = -1;\n      } // console.log("this.settings.scroll_normalizedDelta: "+this.settings.scroll_normalizedDelta)\n      //console.log("this.settings.scroll_factordDelta: "+this.settings.scroll_factordDelta)\n\n    }\n  }, {\n    key: "_resize",\n    value: function _resize() {\n      //console.log("(Home1App._resize)!!")\n      this.width = this.$container.offsetWidth;\n      this.height = this.$container.offsetHeight;\n      this.responsiveScale = this.width / this.refResolution;\n      this.renderer.setSize(this.width, this.height);\n      this.camera.aspect = this.width / this.height;\n      this.cameraDistance = this.camera.position.z;\n      this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //--\n\n      this.camera.updateProjectionMatrix(); //--\n\n      if (this.dots) {//this.dots.resize(this.width, this.height);\n      }\n    }\n  }, {\n    key: "_render",\n    value: function _render() {\n      //console.log("(Home1App._render)!")\n      if (this.height != this.$container.offsetHeight || this.width != this.$container.offsetWidth) {\n        this._resize();\n      }\n\n      if (this.dots) {\n        this.dots.render();\n      }\n\n      this.renderer.render(this.scene, this.camera); //requestAnimationFrame(this._render.bind(this)) // El bucle de render lo genera el onUpdate del ScrollTrigger\n    }\n  }]);\n\n  return Home1App;\n}();\n\n/* harmony default export */ const home1_Home1App = (Home1App);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2/Home2Geometry.js\nfunction Home2Geometry_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Home2Geometry_typeof = function _typeof(obj) { return typeof obj; }; } else { Home2Geometry_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Home2Geometry_typeof(obj); }\n\nfunction Home2Geometry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home2Geometry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home2Geometry_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home2Geometry_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home2Geometry_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Home2Geometry_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Home2Geometry_setPrototypeOf(subClass, superClass); }\n\nfunction Home2Geometry_setPrototypeOf(o, p) { Home2Geometry_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Home2Geometry_setPrototypeOf(o, p); }\n\nfunction Home2Geometry_createSuper(Derived) { var hasNativeReflectConstruct = Home2Geometry_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Home2Geometry_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Home2Geometry_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Home2Geometry_possibleConstructorReturn(this, result); }; }\n\nfunction Home2Geometry_possibleConstructorReturn(self, call) { if (call && (Home2Geometry_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Home2Geometry_assertThisInitialized(self); }\n\nfunction Home2Geometry_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Home2Geometry_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Home2Geometry_getPrototypeOf(o) { Home2Geometry_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Home2Geometry_getPrototypeOf(o); }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar Home2Geometry_EventEmitter = __webpack_require__(7187);\n\nvar Home2Geometry = /*#__PURE__*/function (_EventEmitter) {\n  Home2Geometry_inherits(Home2Geometry, _EventEmitter);\n\n  var _super = Home2Geometry_createSuper(Home2Geometry);\n\n  function Home2Geometry(obj) {\n    var _this;\n\n    Home2Geometry_classCallCheck(this, Home2Geometry);\n\n    //console.log("(Home2Geometry.CONSTRUCTORA)!")\n    _this = _super.call(this); //--\n\n    _this.factor = obj.factor; //6\n\n    _this.incr_radio = obj.incr_radio; //25\n\n    _this.numOrbits = obj.numOrbits; //37\n\n    _this.array_triangular = obj.array_triangular;\n    _this.array_dotPos = obj.array_dotPos;\n    _this.numDots = obj.numDots; //--\n\n    _this.arrayColores_RGB = [];\n    _this.arrayColores_RGB_01 = [];\n    _this.colorPos = 0;\n\n    _this._init_colors(); //--\n\n\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_color: new Float32Array(_this.numDots * 3),\n      a_orbital: new Float32Array(_this.numDots * 1),\n      a_pos_orbita: new Float32Array(_this.numDots * 1),\n      a_incr_anguloRad: new Float32Array(_this.numDots * 1),\n      a_anguloRad: new Float32Array(_this.numDots * 1),\n      a_radio: new Float32Array(_this.numDots * 1),\n      a_dir: new Float32Array(_this.numDots * 1),\n      a_incr: new Float32Array(_this.numDots * 1),\n      a_x: new Float32Array(_this.numDots * 1),\n      a_y: new Float32Array(_this.numDots * 1),\n      a_z: new Float32Array(_this.numDots * 1)\n    }; //--\n\n    for (var i = 0; i < _this.array_dotPos.length; i++) {\n      var dotPos = _this.array_dotPos[i];\n\n      var dot = _this._get_dot(dotPos);\n\n      var i3 = i * 3;\n      _this.attributes.a_posiciones[i3] = dot.x;\n      _this.attributes.a_posiciones[i3 + 1] = dot.y;\n      _this.attributes.a_posiciones[i3 + 2] = dot.z; //--\n\n      _this.attributes.a_color[i3] = dot.color[0];\n      _this.attributes.a_color[i3 + 1] = dot.color[1];\n      _this.attributes.a_color[i3 + 2] = dot.color[2]; //--\n\n      _this.attributes.a_orbital[i] = dot.orbital;\n      _this.attributes.a_pos_orbita[i] = dot.pos_orbita;\n      _this.attributes.a_incr_anguloRad[i] = dot.incr_anguloRad;\n      _this.attributes.a_anguloRad[i] = dot.anguloRad;\n      _this.attributes.a_radio[i] = dot.radio;\n      _this.attributes.a_dir[i] = dot.dir;\n      _this.attributes.a_incr[i] = dot.incr;\n      _this.attributes.a_x[i] = dot.y;\n      _this.attributes.a_y[i] = dot.y;\n      _this.attributes.a_z[i] = dot.z;\n    } //--\n\n\n    _this.loaded = false;\n    return _this;\n  } //------------------------------------------\n  // PRIVADAS\n\n\n  Home2Geometry_createClass(Home2Geometry, [{\n    key: "_get_dot",\n    value: function _get_dot(num) {\n      // Devuelve un objeto con la información de un punto de la geometria "orbital MIOTI"\n      var obj = {\n        num: num,\n        color: this._get_color(),\n        x: 0,\n        y: 0,\n        z: 0,\n        orbital: 0,\n        co_orbitantes: 0,\n        pos_orbita: 0,\n        incr_anguloRad: 0,\n        anguloRad: 0,\n        radio: 0\n      }; //--\n\n      for (var i = 0; i <= this.array_triangular.length; i++) {\n        var limSup = this.array_triangular[i]; //console.log("limSup: "+limSup)\n\n        if (num > limSup) {\n          // console.log("*")\n          obj.orbital = i + 1;\n          obj.co_orbitantes = (i + 1) * this.factor;\n          obj.pos_orbita = num - limSup - 1;\n          obj.incr_anguloRad = 2 * Math.PI / obj.co_orbitantes;\n\n          if (obj.orbital % 2 == 0) {\n            obj.dir = 1;\n            obj.incr = 0;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad;\n          } else {\n            obj.dir = -1;\n            obj.incr = 1;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad + obj.incr_anguloRad / 2;\n          }\n\n          obj.radio = obj.orbital * this.incr_radio; //--\n\n          obj.x = Math.cos(obj.anguloRad) * obj.radio;\n          obj.y = Math.sin(obj.anguloRad) * obj.radio;\n          obj.z = 0;\n        } //break\n\n      }\n\n      return obj;\n    }\n  }, {\n    key: "_get_color",\n    value: function _get_color() {\n      var color_RGB_01 = this.arrayColores_RGB_01[this.colorPos];\n      this.colorPos++;\n\n      if (this.colorPos > this.arrayColores_RGB_01.length - 1) {\n        this.colorPos = 0;\n      }\n\n      return color_RGB_01;\n    }\n  }, {\n    key: "_init_colors",\n    value: function _init_colors() {\n      this.arrayColores_RGB = [];\n      this.arrayColores_RGB.push([232, 67, 131]);\n      this.arrayColores_RGB.push([0, 126, 255]);\n      this.arrayColores_RGB_01 = [];\n\n      for (var i = 0; i < this.arrayColores_RGB.length; i++) {\n        var color_RGB = this.arrayColores_RGB[i];\n        var color_RGB_01 = [color_RGB[0] / 255, color_RGB[1] / 255, color_RGB[2] / 255];\n        this.arrayColores_RGB_01.push(color_RGB_01);\n      }\n    }\n  }]);\n\n  return Home2Geometry;\n}(Home2Geometry_EventEmitter);\n\n/* harmony default export */ const home2_Home2Geometry = (Home2Geometry);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2/shaders/home2_dots_vertex.glsl\n/* harmony default export */ const home2_dots_vertex = ("#define GLSLIFY 1\\nattribute vec3 a_randomness;\\nattribute vec3 a_geo1_position;\\nattribute vec3 a_geo1_color;\\nattribute float a_geo1_anguloRad;\\nattribute float a_geo1_orbital;\\nattribute float a_geo1_pos_orbita;\\nattribute float a_geo1_incr_anguloRad;\\nattribute float a_geo1_incr;\\nattribute float a_geo1_dir;\\nattribute float a_geo1_radio;\\n\\nuniform float uCamaraDistance;\\nuniform float uTime;\\nuniform float uResponsiveScale;\\nuniform float uScrollDelta;\\nuniform float uRotation1;\\nuniform float uRotation2;\\nuniform float uRotation3;\\n\\nvarying float v_angleRad;\\nvarying vec3 v_color;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\n#define PI 3.1415926538\\n\\nvec3 get_pos1(float anguloRad){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(anguloRad)*a_geo1_radio;\\n    float y = sin(anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\nfloat get_pulseStrengthNorm( float direction){\\n    float dotAguleNorm = a_geo1_anguloRad/(2.*PI); // Pasamos el angulo del punto que está en radianes a un valor de 0 a 1.\\n\\n    float modSpeed = mix(1., 2.5, 13./a_geo1_orbital)*direction;\\n    float radialSpeed = uTime*0.02*modSpeed; // Modificamos uTime para determinar la velocidad radial.\\n\\n    float pulseAngleRad = radialSpeed*(4.*PI);\\n\\n    // El valor de pulseAngleRad debe estar entre 0 y 2PI (inicio y fin de una circunferencia).\\n    // Como depende de uTime el valor saldrá de ese rango pronto por lo que tomaremos el resto (modulo),\\n    // de dividir pulseAngleRad por 2PI.\\n    if(pulseAngleRad > 2.*PI){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n    if(pulseAngleRad < 0.){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n\\n    float pulseAngleNorm = pulseAngleRad/(2.*PI); // Normalizamos el valor (de 0 a 1)\\n\\n    float distAngleNorm = abs(pulseAngleNorm-dotAguleNorm); // Calculamos la distancia radial del pulso al punto\\n\\n    // Apañamos la distancia de tal forma que no le afecte el punto de discontinuidad OPI = 2PI\\n    if(distAngleNorm > 0.5){ \\n        distAngleNorm = 0.5-(distAngleNorm-0.5);\\n    }\\n\\n    // La maxima distancia es de medio circulo y en terminos normalizados es 0.5\\n    // Creamos una variable que normalice ese valor entre 0 y 1.\\n    float pulseStrengthNorm  = distAngleNorm*2.; \\n\\n    float pico = 0.92;\\n    pico = mix(pico*0.99, pico*1.01, a_geo1_orbital/13.);\\n\\n    // Nos interesa solo el pico, la zona que va entre 0.95 y 1.\\n    // Toodo lo que haya por debajo de 0.95 lo pasamos a 0.95\\n    // y le restamos ese mismo 0.95 para quedarnos con el pico de 0.05 eol cual amplificamos x20 para normalizarlo (de 0 a 1).\\n    pulseStrengthNorm = (clamp(pulseStrengthNorm, pico, 1.)-pico)*10.;\\n    //--\\n    return pulseStrengthNorm;\\n}\\n\\nvoid main() {\\n\\n    float pulseStrengthNorm1 = get_pulseStrengthNorm(1.5);\\n    float pulseStrengthNorm2 = get_pulseStrengthNorm(-1.);\\n\\n    // Determinamos el tamaño del punto teniendo un minimo de 5 y amplificando el maximo para que visualmente sea bonito\\n    //float size = 5.+(pulseStrengthNorm*15.*longPeriod);\\n    float size = 5.;\\n    size += (pulseStrengthNorm1*5.);\\n    size += (pulseStrengthNorm2*5.);\\n    size *= uResponsiveScale;\\n\\n    float anguloRad_time = 0.;\\n\\n    if(abs(a_geo1_orbital-6.) < 0.5){ // Detecta el orbital 6\\n        anguloRad_time = a_geo1_anguloRad+uRotation1;\\n    }else if(abs(a_geo1_orbital-10.) < 0.5){ // Detecta el orbital 11\\n        anguloRad_time = a_geo1_anguloRad+uRotation2;\\n    }else if(abs(a_geo1_orbital-14.) < 0.5){ // Detecta el orbital 13\\n        anguloRad_time = a_geo1_anguloRad+uRotation3;\\n    }\\n    \\n    //float anguloRad_time = a_geo1_anguloRad+(direction*sin(uTime+a_geo1_orbital)*0.2);\\n    vec3 pos1 = get_pos1(anguloRad_time);\\n    pos1 *= 2.;\\n    //pos1 *= 1.+(uScrollDelta*0.2);\\n    pos1 *= uResponsiveScale;\\n    //vec3 pos2 = pos1*1.0;\\n    //pos1= mix(pos1, pos2, pulseStrengthNorm);\\n\\n    //----------------------------------------------------------\\n    // VERTEX\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z);\\n    //----------------------------------------------------------\\n\\n    //--------------------------------------\\n    // VARYINGS:\\n    v_angleRad = anguloRad_time;\\n    v_color = a_geo1_color; \\n    v_pulseStrengthNorm1 = pulseStrengthNorm1; \\n    v_pulseStrengthNorm2 = pulseStrengthNorm2; \\n\\n}\\n\\n");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2/shaders/home2_dots_fragment.glsl\n/* harmony default export */ const home2_dots_fragment = ("#define GLSLIFY 1\\nuniform vec3 uColor1;\\nuniform vec3 uColor2;\\n\\nvarying float v_angleRad;\\nvarying vec3 v_color;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\n#define PI 3.1415926538\\n\\nfloat circulizar(float radio){\\n    // radio es un valor entre 0 y 1. 0 es 0 de radio y 1 es el maximo del radio dentro de\\n    radio = 1.0-(0.5*radio);\\n    float result = distance(gl_PointCoord, vec2(0.5, 0.5));\\n    result = 1. -result;\\n    result = pow(result, 1.);\\n    result = step(radio, result);\\n    return result;\\n}\\n\\nvoid main() {\\n    vec3 white = vec3(1., 1., 1.);\\n    float pulse = v_pulseStrengthNorm1+v_pulseStrengthNorm2;\\n    pulse = clamp(pulse, 0., 1.);\\n    vec3 finalColor = v_color;\\n    //finalColor = mix(finalColor, white, pulse*5.);\\n    //finalColor = mix(finalColor, white, 0.);\\n    float alpha = circulizar(1.0);\\n\\n    float mod_angleRad = mod(v_angleRad, (2.*PI));\\n    float hemisphere = step(PI, mod_angleRad);\\n\\n    finalColor = mix(uColor1, uColor2, hemisphere);\\n\\n    gl_FragColor = vec4(finalColor, alpha*0.8);\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2/Home2Dots.js\nfunction Home2Dots_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home2Dots_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home2Dots_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home2Dots_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home2Dots_defineProperties(Constructor, staticProps); return Constructor; }\n\n //import gsap from "gsap"\n\n\n\n\n\n\nvar Home2Dots = /*#__PURE__*/function () {\n  function Home2Dots(obj) {\n    Home2Dots_classCallCheck(this, Home2Dots);\n\n    //console.log("(Home2Dots.CONSTRUCTORA)!")\n    //console.log(obj)\n    this.worldGL = obj.worldGL; //--\n\n    this.scene = this.worldGL.scene;\n    this.cameraDistance = this.worldGL.cameraDistance; //--\n\n    this.material = null;\n    this.geometry = null;\n    this.mesh = null;\n    this.numParticles = null;\n    this.created = false;\n    this.clock = new three_module/* Clock */.SUY(); //--\n\n    this.eased_scrollDelta = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.5, 0.01);\n    this.eeased_scrollDelta_fast = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.5, 0.1); //--\n\n    this._setup_settings(); //--\n\n\n    this.orbital_geometry = new home2_Home2Geometry(this.settings); //--\n    //--\n    //this._createcube(this.scene)\n\n    this._create();\n\n    this.resize();\n  } //------------------------------------\n  // PUBLICAS: \n\n\n  Home2Dots_createClass(Home2Dots, [{\n    key: "render",\n    value: function render() {\n      if (this.created) {\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uCamaraDistance.value = this.worldGL.cameraDistance;\n        this.material.uniforms.uResponsiveScale.value = this.worldGL.responsiveScale;\n        this.material.uniforms.uScrollDelta.value = -this.eeased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5); //--\n\n        var extraSpeed = 1 + Math.abs(this.eeased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5) * 10);\n        this.settings.rotation1 += this.settings.speedRotation1 * extraSpeed;\n        this.settings.rotation2 += this.settings.speedRotation2 * extraSpeed;\n        this.settings.rotation3 += this.settings.speedRotation3 * extraSpeed;\n        this.material.uniforms.uRotation1.value = this.settings.rotation1;\n        this.material.uniforms.uRotation2.value = -this.settings.rotation2;\n        this.material.uniforms.uRotation3.value = this.settings.rotation3;\n      }\n    }\n  }, {\n    key: "resize",\n    value: function resize(newWidth, newHeight) {\n      //console.log("(Home2Dots.resize)!")\n      if (this.mesh) {\n        this.mesh.position.setX(this.worldGL.width / 2);\n      }\n    } //------------------------------------\n    // PRIVADAS: \n\n  }, {\n    key: "_setup_settings",\n    value: function _setup_settings() {\n      //console.log("(Home2Dots._setup_settings)!")\n      var speedBase = 0.002;\n      this.settings = {\n        factor: 6,\n        incr_radio: 25,\n        numOrbits: 26,\n        //arrayOrbits: [12, 19, 26]\n        arrayOrbits: [6, 10, 14],\n        // Ortbit rotation\n        rotation1: 0,\n        speedRotation1: 3 * speedBase,\n        rotation2: 2,\n        speedRotation2: 2 * speedBase,\n        rotation3: 0,\n        speedRotation3: 1 * speedBase\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.array_triangular_dots_x_orbita = this._get_array_triangular_dots_x_orbita(this.settings.array_triangular, this.settings.arrayOrbits);\n      this.settings.array_dotPos = this._get_array_dotPos(this.settings.arrayOrbits, this.settings.array_triangular, this.settings.array_triangular_dots_x_orbita);\n      this.settings.numDots = this.settings.array_dotPos.length; //this.settings.numDots = this.settings.array_triangular[this.settings.array_triangular.length-1]\n      //console.log("this.settings.array_triangular: "+this.settings.array_triangular)\n      //console.log("this.settings.array_triangular_dots_x_orbita: "+this.settings.array_triangular_dots_x_orbita)\n      //console.log("this.settings.numDots: "+this.settings.numDots)\n      //console.log("this.settings.arrayOrbits: "+this.settings.arrayOrbits)\n      //console.log("this.settings.array_dotPos: "+this.settings.array_dotPos)\n      //console.log("this.settings.array_dotPos.length: "+this.settings.array_dotPos.length)\n    }\n  }, {\n    key: "_create",\n    value: function _create() {\n      //console.log("(Home2Dots._create)!")\n      //--\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        depthWrite: false,\n        //blending: THREE.AdditiveBlending,\n        vertexColors: true,\n        vertexShader: home2_dots_vertex,\n        fragmentShader: home2_dots_fragment,\n        transparent: true,\n        uniforms: {\n          uColor1: {\n            value: new three_module/* Color */.Ilk(0xe84371)\n          },\n          uColor2: {\n            value: new three_module/* Color */.Ilk(0x007eff)\n          },\n          uCamaraDistance: {\n            value: this.worldGL.cameraDistance\n          },\n          uTime: {\n            value: 0\n          },\n          uScrollDelta: {\n            value: 0\n          },\n          uResponsiveScale: {\n            value: 1\n          },\n          uRotation1: {\n            value: 0\n          },\n          uRotation2: {\n            value: 0\n          },\n          uRotation3: {\n            value: 0\n          }\n        }\n      }); //--\n      //console.log(this.orbital_geometry.attributes.a_color)\n      //--\n\n      this.geometry = new three_module/* BufferGeometry */.u9r();\n      this.geometry.setAttribute(\'position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_color\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_color, 3));\n      this.geometry.setAttribute(\'a_geo1_orbital\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_orbital, 1));\n      this.geometry.setAttribute(\'a_geo1_pos_orbita\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_pos_orbita, 1));\n      this.geometry.setAttribute(\'a_geo1_incr_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_radio\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_radio, 1));\n      this.geometry.setAttribute(\'a_geo1_dir\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dir, 1));\n      this.geometry.setAttribute(\'a_geo1_incr\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr, 1));\n      this.geometry.setAttribute(\'a_geo1_x\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_x, 1));\n      this.geometry.setAttribute(\'a_geo1_y\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_y, 1));\n      this.geometry.setAttribute(\'a_geo1_z\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_z, 1));\n      this.mesh = new three_module/* Points */.woe(this.geometry, this.material);\n      this.scene.add(this.mesh); //---------\n\n      /*\n      this.material2 = new THREE.ShaderMaterial({\n          depthWrite: false,\n          blending: THREE.AdditiveBlending,\n          vertexColors: true,\n          vertexShader: vertex_bg, \n          fragmentShader: fragment_bg,\n          transparent: true,\n          uniforms: {\n              uCamaraDistance: {value: this.worldGL.cameraDistance},\n              uTime: {value: 0},\n              uScale:{value: 1.5}\n          }\n      })\n      this.mesh2 = new THREE.Points(this.geometry, this.material2)\n      this.mesh2.position.z =-1\n      this.scene.add(this.mesh2)\n      */\n      //---------\n\n      this.created = true;\n    }\n  }, {\n    key: "_get_array_dotPos",\n    value: function _get_array_dotPos(_arrayOrbits, _array_triangular, _array_triangular_dots_x_orbita) {\n      var miArray = [];\n\n      for (var i = 0; i < _arrayOrbits.length; i++) {\n        var orbitNum = _arrayOrbits[i];\n        var dots_x_orbit = _array_triangular_dots_x_orbita[i];\n        var dotNum_base = _array_triangular[_arrayOrbits[i] - 1]; // console.log("orbitNum: "+orbitNum)\n        // console.log("dots_x_orbit: "+dots_x_orbit)\n        // console.log("dotNum_base: "+dotNum_base)\n\n        for (var j = 0; j < dots_x_orbit; j++) {\n          miArray.push(dotNum_base + j + 1);\n        }\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_numDots",\n    value: function _get_numDots(_array_triangular_dots_x_orbita) {\n      var numDots = 0;\n\n      for (var i = 0; i <= _array_triangular_dots_x_orbita.length - 1; i++) {\n        numDots += _array_triangular_dots_x_orbita[i];\n      }\n\n      return numDots;\n    }\n  }, {\n    key: "_get_array_triangular_dots_x_orbita",\n    value: function _get_array_triangular_dots_x_orbita(_array_triangular, _arrayOrbits) {\n      // Genera una array basada en la progresión triangular (* factor).\n      // ... donde se indica el numero de dots por orbital\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _arrayOrbits.length - 1; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        var numDots_orbita_actual = _array_triangular[_arrayOrbits[i]];\n        var numDots_orbita_anterior = _array_triangular[_arrayOrbits[i] - 1];\n        var numDots_orbita = numDots_orbita_actual - numDots_orbita_anterior;\n        miArray.push(numDots_orbita);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_array_triangular",\n    value: function _get_array_triangular(_factor, _numObits) {\n      // Genera una array de progresión triangular (* factor).\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _numObits; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        miArray.push(i * (i + 1) / 2 * _factor);\n      }\n\n      return miArray;\n    }\n    /* \n    _createcube(_scene){\n        const geometry = new THREE.BoxGeometry(100,100,100);\n        const material = new THREE.MeshBasicMaterial({color: 0xff0000});\n        const cube = new THREE.Mesh(geometry,material);\n        _scene.add(cube);\n    }\n    */\n    //---------------------------------------------------------\n    //---------------------------------------------------------\n\n  }]);\n\n  return Home2Dots;\n}();\n\n/* harmony default export */ const home2_Home2Dots = (Home2Dots);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2/Home2App.js\nfunction Home2App_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home2App_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home2App_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home2App_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home2App_defineProperties(Constructor, staticProps); return Constructor; }\n\n//(function(){var script=document.createElement(\'script\');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src=\'//cdn.jsdelivr.net/gh/Kevnz/stats.js/build/stats.min.js\';document.head.appendChild(script);})()\n\n\n\n\n\n\n\n\nvar Home2App = /*#__PURE__*/function () {\n  function Home2App(obj) {\n    Home2App_classCallCheck(this, Home2App);\n\n    //console.log("(Home2App.CONSTRUCTORA)!!", obj) \n    this.hw_renderer = obj.renderer; // Rederer/pagina de HighWay. No confundir con el render/renderer de Three.js\n\n    this.$container = obj.domElement; //--\n\n    this.$services = this.hw_renderer.$services;\n    this.$inner = document.querySelector(\'.inner\'); //--\n\n    this.width = this.$container.offsetWidth;\n    this.height = this.$container.offsetHeight; //--\n\n    this.refResolution = 1920;\n    this.responsiveScale = this.width / this.refResolution; //--\n\n    this.cameraDistance = 500; //--\n\n    this.settings = {\n      scroll_lastInnerY: 0,\n      // Ultima posición del elemento de referencia\n      scroll_delta: 0,\n      // Incremento de pixels del scroll\n      scroll_limitedDelta: 0,\n      // Limita los valores a -20 -> +20\n      scroll_normalizedDelta: 0,\n      // Pasa el delta a -1 -> +1\n      scroll_factordDelta: 1,\n      // Valores absolutos de 0 -> 1\n      scroll_direction: 1 // Direccion del delta. 1 si está parado\n\n    }; //--\n    // Scene\n\n    this.scene = new three_module/* Scene */.xsS(); //--\n    // Camera\n    //PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\n\n    this.camera = new three_module/* PerspectiveCamera */.cPb(30, this.width / this.height, 0.1, 2000);\n    this.camera.position.z = this.cameraDistance;\n    this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //--\n    // Renderer\n\n    this.renderer = new three_module/* WebGL1Renderer */.b5g({\n      antialias: true,\n      alpha: true,\n      transparent: true\n    });\n    this.renderer.autoClear = false; // Vamos a usar 2 scenas (una para el background y otra para los puntos) que implicarán usar 2 acciones de render. Con autoclear false permitimos que la segunda no borre la primera.\n    //console.log("window.devicePixelRatio (original): "+window.devicePixelRatio)\n\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1)); //console.log("window.devicePixelRatio (filtrado): "+window.devicePixelRatio)\n    //console.log("WebGL2?: "+this.renderer.capabilities.isWebGL2)\n    //--\n    //this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n    // this.controls.addEventListener(\'change\', (e) =>{\n    //     this.onCameraPositionChange(e)\n    // });\n    //--\n\n    this.$container.appendChild(this.renderer.domElement); //--\n    // this.background = new Home2App_background({\n    //     worldGL:this,\n    // })\n    //--\n\n    this.dots = new home2_Home2Dots({\n      worldGL: this\n    }); //--\n\n    this._resize(); //this._render();\n    //this._init_scrollListeners()\n\n  } //---------------------------\n  // PUBLICAS:\n\n\n  Home2App_createClass(Home2App, [{\n    key: "init",\n    value: function init() {\n      this._init_scrollListeners();\n\n      this._render();\n    }\n  }, {\n    key: "kill",\n    value: function kill() {\n      //console.log("(Solutions1App.kill)!") \n      this.trigger.kill();\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_render);\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_eval_scroll);\n      this.dots = null;\n    } //---------------------------\n\n  }, {\n    key: "onResize",\n    value: function onResize() {\n      //console.log("(Home1App.onResize)!")\n      this._resize();\n    } //---------------------------\n    // PRIVADAS:\n\n  }, {\n    key: "_init_scrollListeners",\n    value: function _init_scrollListeners() {\n      var _this = this;\n\n      var binded_render = function binded_render() {\n        _this._render();\n      };\n\n      var binded_eval_scroll = function binded_eval_scroll() {\n        _this._eval_scroll(_this.trigger.progress);\n      };\n\n      this._binded_render = binded_render;\n      this._binded_eval_scroll = binded_eval_scroll;\n      this.trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$services,\n        start: \'top bottom\',\n        end: \'bottom top\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_render);\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_eval_scroll);\n          } else {\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_render);\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_eval_scroll);\n          }\n        }\n      });\n    }\n  }, {\n    key: "_eval_scroll",\n    value: function _eval_scroll(progress) {\n      var innerData = this.$inner.getBoundingClientRect();\n      var newInnerY = innerData.y;\n      this.settings.scroll_delta = newInnerY - this.settings.scroll_lastInnerY;\n      this.settings.scroll_lastInnerY = newInnerY;\n      this.settings.scroll_limitedDelta = webgl_WebGLUtils.clamp(this.settings.scroll_delta, -20, 20); // Limita los valores a -20 -> +20\n\n      this.settings.scroll_normalizedDelta = (this.settings.scroll_limitedDelta / 20).toFixed(3); // Pasa el delta a -1 -> +1\n\n      this.settings.scroll_factordDelta = Math.abs(this.settings.scroll_normalizedDelta) + 0; // Valores absolutos de 0 -> 1\n\n      this.settings.scroll_direction = 1;\n\n      if (this.settings.scroll_normalizedDelta < 0) {\n        this.settings.scroll_direction = -1;\n      } // console.log("this.settings.scroll_normalizedDelta: "+this.settings.scroll_normalizedDelta)\n      //console.log("this.settings.scroll_factordDelta: "+this.settings.scroll_factordDelta)\n\n    }\n  }, {\n    key: "_resize",\n    value: function _resize() {\n      //console.log("(Home2App.resize)!")\n      this.width = this.$container.offsetWidth;\n      this.height = this.$container.offsetHeight;\n      this.responsiveScale = this.width / this.refResolution;\n      this.renderer.setSize(this.width, this.height);\n      this.camera.aspect = this.width / this.height;\n      this.cameraDistance = this.camera.position.z;\n      this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //--\n\n      this.camera.updateProjectionMatrix(); //--\n\n      if (this.dots) {\n        this.dots.resize(this.width, this.height);\n      }\n    }\n  }, {\n    key: "_render",\n    value: function _render() {\n      //console.log("(Home2App._render)!")\n      if (this.height != this.$container.offsetHeight) {\n        this._resize();\n      }\n\n      if (this.dots) {\n        this.dots.render();\n      }\n\n      this.renderer.render(this.scene, this.camera); //requestAnimationFrame(this._render.bind(this))\n    }\n  }]);\n\n  return Home2App;\n}();\n\n/* harmony default export */ const home2_Home2App = (Home2App);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home3/Home3Geometry.js\nfunction Home3Geometry_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Home3Geometry_typeof = function _typeof(obj) { return typeof obj; }; } else { Home3Geometry_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Home3Geometry_typeof(obj); }\n\nfunction Home3Geometry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home3Geometry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home3Geometry_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home3Geometry_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home3Geometry_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Home3Geometry_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Home3Geometry_setPrototypeOf(subClass, superClass); }\n\nfunction Home3Geometry_setPrototypeOf(o, p) { Home3Geometry_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Home3Geometry_setPrototypeOf(o, p); }\n\nfunction Home3Geometry_createSuper(Derived) { var hasNativeReflectConstruct = Home3Geometry_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Home3Geometry_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Home3Geometry_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Home3Geometry_possibleConstructorReturn(this, result); }; }\n\nfunction Home3Geometry_possibleConstructorReturn(self, call) { if (call && (Home3Geometry_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Home3Geometry_assertThisInitialized(self); }\n\nfunction Home3Geometry_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Home3Geometry_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Home3Geometry_getPrototypeOf(o) { Home3Geometry_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Home3Geometry_getPrototypeOf(o); }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar Home3Geometry_EventEmitter = __webpack_require__(7187);\n\nvar Home3Geometry = /*#__PURE__*/function (_EventEmitter) {\n  Home3Geometry_inherits(Home3Geometry, _EventEmitter);\n\n  var _super = Home3Geometry_createSuper(Home3Geometry);\n\n  function Home3Geometry(obj) {\n    var _this;\n\n    Home3Geometry_classCallCheck(this, Home3Geometry);\n\n    //console.log("(Home3Geometry.CONSTRUCTORA)!")\n    _this = _super.call(this); //--\n\n    _this.factor = obj.factor; //6\n\n    _this.incr_radio = obj.incr_radio; //25\n\n    _this.numOrbits = obj.numOrbits; //37\n\n    _this.array_triangular = obj.array_triangular;\n    _this.array_dotPos = obj.array_dotPos;\n    _this.numDots = obj.numDots; //--\n\n    _this.arrayColores_RGB = [];\n    _this.arrayColores_RGB_01 = [];\n    _this.colorPos = 0;\n\n    _this._init_colors(); //--\n\n\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_color: new Float32Array(_this.numDots * 3),\n      a_orbital: new Float32Array(_this.numDots * 1),\n      a_pos_orbita: new Float32Array(_this.numDots * 1),\n      a_incr_anguloRad: new Float32Array(_this.numDots * 1),\n      a_anguloRad: new Float32Array(_this.numDots * 1),\n      a_radio: new Float32Array(_this.numDots * 1),\n      a_dir: new Float32Array(_this.numDots * 1),\n      a_incr: new Float32Array(_this.numDots * 1),\n      a_x: new Float32Array(_this.numDots * 1),\n      a_y: new Float32Array(_this.numDots * 1),\n      a_z: new Float32Array(_this.numDots * 1)\n    }; //--\n\n    for (var i = 0; i < _this.array_dotPos.length; i++) {\n      var dotPos = _this.array_dotPos[i];\n\n      var dot = _this._get_dot(dotPos);\n\n      var i3 = i * 3;\n      _this.attributes.a_posiciones[i3] = dot.x;\n      _this.attributes.a_posiciones[i3 + 1] = dot.y;\n      _this.attributes.a_posiciones[i3 + 2] = dot.z; //--\n\n      _this.attributes.a_color[i3] = dot.color[0];\n      _this.attributes.a_color[i3 + 1] = dot.color[1];\n      _this.attributes.a_color[i3 + 2] = dot.color[2]; //--\n\n      _this.attributes.a_orbital[i] = dot.orbital;\n      _this.attributes.a_pos_orbita[i] = dot.pos_orbita;\n      _this.attributes.a_incr_anguloRad[i] = dot.incr_anguloRad;\n      _this.attributes.a_anguloRad[i] = dot.anguloRad;\n      _this.attributes.a_radio[i] = dot.radio;\n      _this.attributes.a_dir[i] = dot.dir;\n      _this.attributes.a_incr[i] = dot.incr;\n      _this.attributes.a_x[i] = dot.y;\n      _this.attributes.a_y[i] = dot.y;\n      _this.attributes.a_z[i] = dot.z;\n    } //--\n\n\n    _this.loaded = false;\n    return _this;\n  } //------------------------------------------\n  // PRIVADAS\n\n\n  Home3Geometry_createClass(Home3Geometry, [{\n    key: "_get_dot",\n    value: function _get_dot(num) {\n      // Devuelve un objeto con la información de un punto de la geometria "orbital MIOTI"\n      var obj = {\n        num: num,\n        color: this._get_color(),\n        x: 0,\n        y: 0,\n        z: 0,\n        orbital: 0,\n        co_orbitantes: 0,\n        pos_orbita: 0,\n        incr_anguloRad: 0,\n        anguloRad: 0,\n        radio: 0\n      }; //--\n\n      for (var i = 0; i <= this.array_triangular.length; i++) {\n        var limSup = this.array_triangular[i]; //console.log("limSup: "+limSup)\n\n        if (num > limSup) {\n          // console.log("*")\n          obj.orbital = i + 1;\n          obj.co_orbitantes = (i + 1) * this.factor;\n          obj.pos_orbita = num - limSup - 1;\n          obj.incr_anguloRad = 2 * Math.PI / obj.co_orbitantes;\n\n          if (obj.orbital % 2 == 0) {\n            obj.dir = 1;\n            obj.incr = 0;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad;\n          } else {\n            obj.dir = -1;\n            obj.incr = 1;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad + obj.incr_anguloRad / 2;\n          }\n\n          obj.radio = obj.orbital * this.incr_radio; //--\n\n          obj.x = Math.cos(obj.anguloRad) * obj.radio;\n          obj.y = Math.sin(obj.anguloRad) * obj.radio;\n          obj.z = 0;\n        } //break\n\n      }\n\n      return obj;\n    }\n  }, {\n    key: "_get_color",\n    value: function _get_color() {\n      var color_RGB_01 = this.arrayColores_RGB_01[this.colorPos];\n      this.colorPos++;\n\n      if (this.colorPos > this.arrayColores_RGB_01.length - 1) {\n        this.colorPos = 0;\n      }\n\n      return color_RGB_01;\n    }\n  }, {\n    key: "_init_colors",\n    value: function _init_colors() {\n      this.arrayColores_RGB = [];\n      this.arrayColores_RGB.push([232, 67, 131]);\n      this.arrayColores_RGB.push([0, 126, 255]);\n      this.arrayColores_RGB_01 = [];\n\n      for (var i = 0; i < this.arrayColores_RGB.length; i++) {\n        var color_RGB = this.arrayColores_RGB[i];\n        var color_RGB_01 = [color_RGB[0] / 255, color_RGB[1] / 255, color_RGB[2] / 255];\n        this.arrayColores_RGB_01.push(color_RGB_01);\n      }\n    }\n  }]);\n\n  return Home3Geometry;\n}(Home3Geometry_EventEmitter);\n\n/* harmony default export */ const home3_Home3Geometry = (Home3Geometry);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home3/shaders/home3_dots_vertex.glsl\n/* harmony default export */ const home3_dots_vertex = ("#define GLSLIFY 1\\nattribute vec3 a_randomness;\\nattribute vec3 a_geo1_position;\\nattribute vec3 a_geo1_color;\\nattribute float a_geo1_anguloRad;\\nattribute float a_geo1_orbital;\\nattribute float a_geo1_pos_orbita;\\nattribute float a_geo1_incr_anguloRad;\\nattribute float a_geo1_incr;\\nattribute float a_geo1_dir;\\nattribute float a_geo1_radio;\\n\\nuniform float uCamaraDistance;\\nuniform float uTime;\\nuniform float uResponsiveScale;\\nuniform float uScrollDelta;\\nuniform float uRotation1;\\nuniform float uRotation2;\\nuniform float uRotation3;\\n\\nuniform float uChangeAnim;\\nuniform float uChangeProgress;\\n\\nuniform vec3 uPrevColor;\\nuniform vec3 uNextColor;\\n\\nvarying float v_angleRad;\\nvarying float v_colorPosition;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\nvarying vec3 v_prevColor;\\nvarying vec3 v_nextColor;\\n\\n#define PI 3.1415926538\\n\\nvec3 get_pos1(float anguloRad){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(anguloRad)*a_geo1_radio;\\n    float y = sin(anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\nfloat get_pulseStrengthNorm( float direction){\\n    float dotAguleNorm = a_geo1_anguloRad/(2.*PI); // Pasamos el angulo del punto que está en radianes a un valor de 0 a 1.\\n\\n    float modSpeed = mix(1., 2.5, 13./a_geo1_orbital)*direction;\\n    float radialSpeed = uTime*0.02*modSpeed; // Modificamos uTime para determinar la velocidad radial.\\n\\n    float pulseAngleRad = radialSpeed*(4.*PI);\\n\\n    // El valor de pulseAngleRad debe estar entre 0 y 2PI (inicio y fin de una circunferencia).\\n    // Como depende de uTime el valor saldrá de ese rango pronto por lo que tomaremos el resto (modulo),\\n    // de dividir pulseAngleRad por 2PI.\\n    if(pulseAngleRad > 2.*PI){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n    if(pulseAngleRad < 0.){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n\\n    float pulseAngleNorm = pulseAngleRad/(2.*PI); // Normalizamos el valor (de 0 a 1)\\n\\n    float distAngleNorm = abs(pulseAngleNorm-dotAguleNorm); // Calculamos la distancia radial del pulso al punto\\n\\n    // Apañamos la distancia de tal forma que no le afecte el punto de discontinuidad OPI = 2PI\\n    if(distAngleNorm > 0.5){ \\n        distAngleNorm = 0.5-(distAngleNorm-0.5);\\n    }\\n\\n    // La maxima distancia es de medio circulo y en terminos normalizados es 0.5\\n    // Creamos una variable que normalice ese valor entre 0 y 1.\\n    float pulseStrengthNorm  = distAngleNorm*2.; \\n\\n    float pico = 0.92;\\n    pico = mix(pico*0.99, pico*1.01, a_geo1_orbital/13.);\\n\\n    // Nos interesa solo el pico, la zona que va entre 0.95 y 1.\\n    // Toodo lo que haya por debajo de 0.95 lo pasamos a 0.95\\n    // y le restamos ese mismo 0.95 para quedarnos con el pico de 0.05 eol cual amplificamos x20 para normalizarlo (de 0 a 1).\\n    pulseStrengthNorm = (clamp(pulseStrengthNorm, pico, 1.)-pico)*10.;\\n    //--\\n    return pulseStrengthNorm;\\n}\\n\\nvoid main() {\\n\\n    float pulseStrengthNorm1 = get_pulseStrengthNorm(1.5);\\n    float pulseStrengthNorm2 = get_pulseStrengthNorm(-1.);\\n\\n    \\n\\n    float anguloRad_time = 0.;\\n    float changeScale = 0.5;\\n\\n    if(abs(a_geo1_orbital-12.) < 0.5){ // Detecta el orbital 14\\n        anguloRad_time = a_geo1_anguloRad+uRotation1;\\n        v_colorPosition = 1.;\\n        changeScale = 0.3;\\n    }else if(abs(a_geo1_orbital-15.) < 0.5){ // Detecta el orbital 14\\n        anguloRad_time = a_geo1_anguloRad+uRotation2;\\n        v_colorPosition = 0.;\\n        changeScale = 0.5;\\n    }else if(abs(a_geo1_orbital-18.) < 0.5){ // Detecta el orbital 17\\n        anguloRad_time = a_geo1_anguloRad+uRotation3;\\n        v_colorPosition = 1.;\\n        changeScale = 0.8;\\n    }\\n    \\n    //float anguloRad_time = a_geo1_anguloRad+(direction*sin(uTime+a_geo1_orbital)*0.2);\\n    vec3 pos1 = get_pos1(anguloRad_time);\\n    //pos1 *= 2.;\\n    //pos1 *= 1.+(uScrollDelta*0.2);\\n    pos1 *= mix(1., changeScale, uChangeAnim);\\n    pos1 *= uResponsiveScale;\\n    //vec3 pos2 = pos1*1.0;\\n    //pos1= mix(pos1, pos2, pulseStrengthNorm);\\n\\n    float obitalFactor = a_geo1_orbital/18.;\\n    if(uChangeProgress >= obitalFactor){\\n        v_nextColor = uNextColor;\\n    }else{\\n        v_nextColor = uPrevColor;\\n    }\\n\\n    // Determinamos el tamaño del punto teniendo un minimo de 5 y amplificando el maximo para que visualmente sea bonito\\n    //float size = 5.+(pulseStrengthNorm*15.*longPeriod);\\n    float size = 3.;\\n    size += (pulseStrengthNorm1*1.);\\n    size += (pulseStrengthNorm2*1.);\\n    size *= uResponsiveScale;\\n\\n    //----------------------------------------------------------\\n    // VERTEX\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z);\\n    //----------------------------------------------------------\\n\\n    //--------------------------------------\\n    // VARYINGS:\\n    v_angleRad = anguloRad_time;\\n    v_pulseStrengthNorm1 = pulseStrengthNorm1; \\n    v_pulseStrengthNorm2 = pulseStrengthNorm2; \\n\\n    //v_prevColor = uPrevColor;\\n    //v_nextColor = uNextColor;\\n\\n}\\n\\n");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home3/shaders/home3_dots_fragment.glsl\n/* harmony default export */ const home3_dots_fragment = ("#define GLSLIFY 1\\nuniform vec3 uColor1;\\nuniform vec3 uColor2;\\n\\nvarying float v_angleRad;\\nvarying float v_colorPosition;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\nvarying vec3 v_prevColor;\\nvarying vec3 v_nextColor;\\n\\n#define PI 3.1415926538\\n\\nfloat circulizar(float radio){\\n    // radio es un valor entre 0 y 1. 0 es 0 de radio y 1 es el maximo del radio dentro de\\n    radio = 1.0-(0.5*radio);\\n    float result = distance(gl_PointCoord, vec2(0.5, 0.5));\\n    result = 1. -result;\\n    result = pow(result, 1.);\\n    result = step(radio, result);\\n    return result;\\n}\\n\\nvoid main() {\\n    float alpha = circulizar(1.0);\\n    //vec3 finalColor = mix(uColor1, uColor2, v_colorPosition);\\n    vec3 finalColor = v_nextColor;\\n\\n    gl_FragColor = vec4(finalColor, alpha*0.8);\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home3/Home3Dots.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction Home3Dots_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home3Dots_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home3Dots_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home3Dots_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home3Dots_defineProperties(Constructor, staticProps); return Constructor; }\n\n //import gsap from "gsap"\n\n\n\n\n\n\n\n\nvar Home3Dots = /*#__PURE__*/function () {\n  function Home3Dots(obj) {\n    var _this = this;\n\n    Home3Dots_classCallCheck(this, Home3Dots);\n\n    //console.log("(Home3Dots.CONSTRUCTORA)!")\n    //console.log(obj)\n    this.worldGL = obj.worldGL; //--\n\n    this.scene = this.worldGL.scene;\n    this.cameraDistance = this.worldGL.cameraDistance; //--\n\n    this.material = null;\n    this.geometry = null;\n    this.mesh = null;\n    this.numParticles = null;\n    this.created = false;\n    this.clock = new three_module/* Clock */.SUY(); //--\n\n    this.changeAnim_fase = 0; // 0: idle 1,Out, 2:In\n\n    this.changeAnim_duration = null;\n    this.eventProgress_changeAnim_OUT = new webgl_EventProgress("OUT");\n    this.eventProgress_changeAnim_OUT.emitter.on("onProgressFinished", function () {\n      _this._faseOutEnded();\n    });\n    this.eventProgress_changeAnim_IN = new webgl_EventProgress("IN");\n    this.eventProgress_changeAnim_IN.emitter.on("onProgressFinished", function () {\n      _this._faseInEnded();\n    }); //--\n\n    this.eased_scrollDelta = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.5, 0.01);\n    this.eeased_scrollDelta_fast = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.5, 0.1); //--\n\n    this._setup_settings(); //--\n\n\n    this.orbital_geometry = new home3_Home3Geometry(this.settings); //--\n    //--\n    //this._createcube(this.scene)\n\n    this._create();\n\n    this.resize();\n  } //------------------------------------\n  // PUBLICAS: \n\n\n  Home3Dots_createClass(Home3Dots, [{\n    key: "doChangeAnim",\n    value: function doChangeAnim(obj) {\n      // console.log("(Home3Dots.doChangeAnim): ", obj)\n      this.changeAnim_duration = obj.duration * 0.9;\n      var t;\n\n      if (this.changeAnim_fase == 0) {\n        // Pilla en estado idel.\n        t = 0;\n      } else if (this.changeAnim_fase == 1) {\n        // Corta la animación de out\n        t = this.eventProgress_changeAnim_OUT.get_t();\n      } else if (this.changeAnim_fase == 2) {\n        // Corta la animación de in\n        //t = this.eventProgress_changeAnim_IN.get_t()\n        t = 1 - this.eventProgress_changeAnim_IN.get_progress();\n      } //console.log("t: "+t)\n\n\n      this.settings.prevColor = _toConsumableArray(this.settings.nextColor);\n      this.settings.nextColor = obj.color.split(",");\n      this.settings.nextColor[0] = this.settings.nextColor[0] / 255;\n      this.settings.nextColor[1] = this.settings.nextColor[1] / 255;\n      this.settings.nextColor[2] = this.settings.nextColor[2] / 255; //console.log("color: "+this.settings.nextColor)\n\n      this._startChangeAnim(t);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.created) {\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uCamaraDistance.value = this.worldGL.cameraDistance;\n        this.material.uniforms.uResponsiveScale.value = this.worldGL.responsiveScale;\n        this.material.uniforms.uScrollDelta.value = -this.eeased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5); //--\n\n        var extraSpeed = 1 + Math.abs(this.eeased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5) * 10);\n        this.settings.rotation1 += this.settings.speedRotation1 * extraSpeed;\n        this.settings.rotation2 += this.settings.speedRotation2 * extraSpeed;\n        this.settings.rotation3 += this.settings.speedRotation3 * extraSpeed;\n        this.material.uniforms.uRotation1.value = this.settings.rotation1;\n        this.material.uniforms.uRotation2.value = -this.settings.rotation2;\n        this.material.uniforms.uRotation3.value = this.settings.rotation3; //--\n\n        this.material.uniforms.uPrevColor.value = new three_module/* Color */.Ilk(this.settings.prevColor[0], this.settings.prevColor[1], this.settings.prevColor[2]);\n        this.material.uniforms.uNextColor.value = new three_module/* Color */.Ilk(this.settings.nextColor[0], this.settings.nextColor[1], this.settings.nextColor[2]); //--\n\n        if (this.eventProgress_changeAnim_IN != null) {\n          var changeAnim;\n          var changeProgress;\n\n          if (this.changeAnim_fase == 0) {\n            changeAnim = 0;\n            changeProgress = 1; //console.log("0: "+changeAnim)\n          } else if (this.changeAnim_fase == 1) {\n            changeAnim = this.eventProgress_changeAnim_OUT.get_progress();\n            changeProgress = changeAnim * 0.5; //const t = this.eventProgress_changeAnim_OUT.get_t()\n            //console.log("changeAnim: "+changeAnim)\n            //console.log("changeProgress: "+changeProgress)\n          } else if (this.changeAnim_fase == 2) {\n            changeAnim = 1 - this.eventProgress_changeAnim_IN.get_progress();\n            changeProgress = 0.5 + this.eventProgress_changeAnim_IN.get_progress() * 0.5; //const t = this.eventProgress_changeAnim_IN.get_t()\n            // console.log("2: "+changeAnim+" t:"+t)\n            // console.log("changeProgress: "+changeProgress)\n          } //console.log("changeProgress: "+changeProgress)\n\n\n          this.material.uniforms.uChangeAnim.value = changeAnim;\n          this.material.uniforms.uChangeProgress.value = changeProgress;\n        }\n      }\n    }\n  }, {\n    key: "resize",\n    value: function resize(newWidth, newHeight) {\n      //console.log("(Home3Dots.resize)!")\n      if (this.mesh) {//this.mesh.position.setX(this.worldGL.width/2)\n      }\n    } //------------------------------------\n    // PRIVADAS: \n\n  }, {\n    key: "_startChangeAnim",\n    value: function _startChangeAnim(starting_t) {\n      //console.log("(Home3Dots._startChangeAnim): "+starting_t+"----------------------------------------------")\n      this.changeAnim_fase = 1;\n      this.eventProgress_changeAnim_OUT.stop();\n      this.eventProgress_changeAnim_IN.stop(); //--\n\n      var easeFunc;\n\n      if (starting_t == 0) {\n        easeFunc = (easing_functions_default()).Exponential.InOut;\n      } else {\n        easeFunc = (easing_functions_default()).Exponential.InOut; //easeFunc = Easing.Linear.None\n      }\n\n      this.eventProgress_changeAnim_OUT.start(this.changeAnim_duration, starting_t, easeFunc, 0);\n    }\n  }, {\n    key: "_faseOutEnded",\n    value: function _faseOutEnded() {\n      //console.log("(Home3Dots._faseOutEnded)!----------------------------------------------")\n      this.changeAnim_fase = 2;\n      this.eventProgress_changeAnim_IN.start(this.changeAnim_duration, 0, (easing_functions_default()).Quadratic.InOut, 0);\n    }\n  }, {\n    key: "_faseInEnded",\n    value: function _faseInEnded() {\n      //console.log("(Home3Dots._faseInEnded)!----------------------------------------------")\n      this.changeAnim_fase = 0;\n    }\n  }, {\n    key: "_setup_settings",\n    value: function _setup_settings() {\n      //console.log("(Home3Dots._setup_settings)!")\n      var speedBase = 0.002;\n      this.settings = {\n        factor: 6,\n        incr_radio: 25,\n        numOrbits: 26,\n        arrayOrbits: [12, 15, 18],\n        rotation1: 0,\n        speedRotation1: 3 * speedBase,\n        rotation2: 2,\n        speedRotation2: 2 * speedBase,\n        rotation3: 0,\n        speedRotation3: 1 * speedBase,\n        prevColor: [0.909, 0.262, 0.443],\n        nextColor: [0.909, 0.262, 0.443]\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.array_triangular_dots_x_orbita = this._get_array_triangular_dots_x_orbita(this.settings.array_triangular, this.settings.arrayOrbits);\n      this.settings.array_dotPos = this._get_array_dotPos(this.settings.arrayOrbits, this.settings.array_triangular, this.settings.array_triangular_dots_x_orbita);\n      this.settings.numDots = this.settings.array_dotPos.length; //this.settings.numDots = this.settings.array_triangular[this.settings.array_triangular.length-1]\n      //console.log("this.settings.array_triangular: "+this.settings.array_triangular)\n      //console.log("this.settings.array_triangular_dots_x_orbita: "+this.settings.array_triangular_dots_x_orbita)\n      //console.log("this.settings.numDots: "+this.settings.numDots)\n      //console.log("this.settings.arrayOrbits: "+this.settings.arrayOrbits)\n      //console.log("this.settings.array_dotPos: "+this.settings.array_dotPos)\n      //console.log("this.settings.array_dotPos.length: "+this.settings.array_dotPos.length)\n    }\n  }, {\n    key: "_create",\n    value: function _create() {\n      //console.log("(Home3Dots._create)!")\n      //--\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        depthWrite: false,\n        //blending: THREE.AdditiveBlending,\n        vertexColors: true,\n        vertexShader: home3_dots_vertex,\n        fragmentShader: home3_dots_fragment,\n        transparent: true,\n        uniforms: {\n          uColor1: {\n            value: new three_module/* Color */.Ilk(0x333333)\n          },\n          uColor2: {\n            value: new three_module/* Color */.Ilk(0x999999)\n          },\n          uCamaraDistance: {\n            value: this.worldGL.cameraDistance\n          },\n          uTime: {\n            value: 0\n          },\n          uScrollDelta: {\n            value: 0\n          },\n          uResponsiveScale: {\n            value: 1\n          },\n          uRotation1: {\n            value: 0\n          },\n          uRotation2: {\n            value: 0\n          },\n          uRotation3: {\n            value: 0\n          },\n          uChangeAnim: {\n            value: 0\n          },\n          uChangeProgress: {\n            value: 0\n          },\n          uPrevColor: {\n            value: new three_module/* Color */.Ilk(0x333333)\n          },\n          uNextColor: {\n            value: new three_module/* Color */.Ilk(0x333333)\n          }\n        }\n      }); //--\n      //console.log(this.orbital_geometry.attributes.a_color)\n      //--\n\n      this.geometry = new three_module/* BufferGeometry */.u9r();\n      this.geometry.setAttribute(\'position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_color\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_color, 3));\n      this.geometry.setAttribute(\'a_geo1_orbital\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_orbital, 1));\n      this.geometry.setAttribute(\'a_geo1_pos_orbita\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_pos_orbita, 1));\n      this.geometry.setAttribute(\'a_geo1_incr_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_radio\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_radio, 1));\n      this.geometry.setAttribute(\'a_geo1_dir\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dir, 1));\n      this.geometry.setAttribute(\'a_geo1_incr\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr, 1));\n      this.geometry.setAttribute(\'a_geo1_x\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_x, 1));\n      this.geometry.setAttribute(\'a_geo1_y\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_y, 1));\n      this.geometry.setAttribute(\'a_geo1_z\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_z, 1));\n      this.mesh = new three_module/* Points */.woe(this.geometry, this.material);\n      this.scene.add(this.mesh); //---------\n\n      /*\n      this.material2 = new THREE.ShaderMaterial({\n          depthWrite: false,\n          blending: THREE.AdditiveBlending,\n          vertexColors: true,\n          vertexShader: vertex_bg, \n          fragmentShader: fragment_bg,\n          transparent: true,\n          uniforms: {\n              uCamaraDistance: {value: this.worldGL.cameraDistance},\n              uTime: {value: 0},\n              uScale:{value: 1.5}\n          }\n      })\n      this.mesh2 = new THREE.Points(this.geometry, this.material2)\n      this.mesh2.position.z =-1\n      this.scene.add(this.mesh2)\n      */\n      //---------\n\n      this.created = true;\n    }\n  }, {\n    key: "_get_array_dotPos",\n    value: function _get_array_dotPos(_arrayOrbits, _array_triangular, _array_triangular_dots_x_orbita) {\n      var miArray = [];\n\n      for (var i = 0; i < _arrayOrbits.length; i++) {\n        var orbitNum = _arrayOrbits[i];\n        var dots_x_orbit = _array_triangular_dots_x_orbita[i];\n        var dotNum_base = _array_triangular[_arrayOrbits[i] - 1]; // console.log("orbitNum: "+orbitNum)\n        // console.log("dots_x_orbit: "+dots_x_orbit)\n        // console.log("dotNum_base: "+dotNum_base)\n\n        for (var j = 0; j < dots_x_orbit; j++) {\n          miArray.push(dotNum_base + j + 1);\n        }\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_numDots",\n    value: function _get_numDots(_array_triangular_dots_x_orbita) {\n      var numDots = 0;\n\n      for (var i = 0; i <= _array_triangular_dots_x_orbita.length - 1; i++) {\n        numDots += _array_triangular_dots_x_orbita[i];\n      }\n\n      return numDots;\n    }\n  }, {\n    key: "_get_array_triangular_dots_x_orbita",\n    value: function _get_array_triangular_dots_x_orbita(_array_triangular, _arrayOrbits) {\n      // Genera una array basada en la progresión triangular (* factor).\n      // ... donde se indica el numero de dots por orbital\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _arrayOrbits.length - 1; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        var numDots_orbita_actual = _array_triangular[_arrayOrbits[i]];\n        var numDots_orbita_anterior = _array_triangular[_arrayOrbits[i] - 1];\n        var numDots_orbita = numDots_orbita_actual - numDots_orbita_anterior;\n        miArray.push(numDots_orbita);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_array_triangular",\n    value: function _get_array_triangular(_factor, _numObits) {\n      // Genera una array de progresión triangular (* factor).\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _numObits; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        miArray.push(i * (i + 1) / 2 * _factor);\n      }\n\n      return miArray;\n    }\n    /* \n    _createcube(_scene){\n        const geometry = new THREE.BoxGeometry(100,100,100);\n        const material = new THREE.MeshBasicMaterial({color: 0xff0000});\n        const cube = new THREE.Mesh(geometry,material);\n        _scene.add(cube);\n    }\n    */\n    //---------------------------------------------------------\n    //---------------------------------------------------------\n\n  }]);\n\n  return Home3Dots;\n}();\n\n/* harmony default export */ const home3_Home3Dots = (Home3Dots);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home3/Home3App.js\nfunction Home3App_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home3App_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home3App_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home3App_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home3App_defineProperties(Constructor, staticProps); return Constructor; }\n\n// FPS-Meter:\n//(function(){var script=document.createElement(\'script\');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src=\'//cdn.jsdelivr.net/gh/Kevnz/stats.js/build/stats.min.js\';document.head.appendChild(script);})()\n\n\n\n\n\n\n\n\nvar Home3App = /*#__PURE__*/function () {\n  function Home3App(obj) {\n    Home3App_classCallCheck(this, Home3App);\n\n    //console.log("(Home3App.CONSTRUCTORA)!", obj) \n    this.hw_renderer = obj.renderer; // Rederer/pagina de HighWay. No confundir con el render/renderer de Three.js\n\n    this.$container = obj.domElement;\n    this.dotColor = obj.dotColor; //this.sliderRef = obj.sliderRef\n    //--\n    //this.sliderRef.emitter.on("onSliderChange", (obj)=>{\n    //    this.onSliderChange(obj)\n    //})\n    //--\n\n    this.REF_RESOLUTION = {\n      width: 1920,\n      height: 947\n    };\n    this.REF_CAMERA_DISTANCE = 500; //--\n\n    this.width = this.$container.offsetWidth;\n    this.height = this.$container.offsetHeight;\n    this.responsiveScale = this.width / this.REF_RESOLUTION.width;\n    this.cameraDistance = this.REF_CAMERA_DISTANCE * (this.height / this.REF_RESOLUTION.height); //--\n\n    this.$main = document.querySelector(\'.inner\');\n    this.$hero = document.querySelector(\'.hero\');\n    this.$footer = document.querySelector(\'.footer\');\n    this.$image = document.querySelector(\'.ai__hero .image\'); //--\n    //this.MAIN_ACTIVE = false\n    //--\n\n    this.mouseNorm = {\n      x: 0,\n      y: 0\n    }; //--\n\n    this.settings = {\n      scroll_lastInnerY: 0,\n      // Ultima posición del elemento de referencia\n      scroll_delta: 0,\n      // Incremento de pixels del scroll\n      scroll_limitedDelta: 0,\n      // Limita los valores a -20 -> +20\n      scroll_normalizedDelta: 0,\n      // Pasa el delta a -1 -> +1\n      scroll_factordDelta: 1,\n      // Valores absolutos de 0 -> 1\n      scroll_direction: 1,\n      // Direccion del delta. 1 si está parado\n      scroll_hero_progress: 0,\n      scroll_footer_progress: 0,\n      morphingProgress: 0\n    }; //--\n    // Scene\n\n    this.scene = new three_module/* Scene */.xsS(); //this.scene.background = new THREE.Color(0x333333)\n    //--\n    // Camera\n    //PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\n\n    this.camera = new three_module/* PerspectiveCamera */.cPb(30, this.width / this.height, 0.1, 2000);\n    this.camera.position.z = this.cameraDistance; //console.log("this.camera.fov: "+this.camera.fov)\n\n    this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //console.log("this.camera.fov: "+this.camera.fov)\n    //--\n    // Renderer\n\n    this.renderer = new three_module/* WebGL1Renderer */.b5g({\n      antialias: true,\n      alpha: true\n    });\n    this.renderer.autoClear = false; // Vamos a usar 2 scenas (una para el background y otra para los puntos) que implicarán usar 2 acciones de render. Con autoclear false permitimos que la segunda no borre la primera.\n\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1)); //--\n\n    this.$container.appendChild(this.renderer.domElement); //--\n    //--\n\n    this.dots = new home3_Home3Dots({\n      worldGL: this\n    }); //--\n\n    this._resize(); //this._render();\n    //this._init_scrollListeners()\n\n  } //---------------------------\n  // PUBLICAS:\n\n\n  Home3App_createClass(Home3App, [{\n    key: "init",\n    value: function init(obj) {\n      var _this = this;\n\n      this.sliderRef = obj.sliderRef; //--\n\n      this.sliderRef.emitter.on("onSliderChange", function (obj) {\n        _this.onSliderChange(obj);\n      }); //--\n\n      this._init_scrollListeners();\n\n      this._render();\n    }\n  }, {\n    key: "kill",\n    value: function kill() {\n      this.$container_scrollTrigger.kill();\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_render);\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_eval_scroll);\n      this.dots = null;\n    } //---------------------------\n\n  }, {\n    key: "onSliderChange",\n    value: function onSliderChange(obj) {\n      if (this.dots) {\n        this.dots.doChangeAnim(obj);\n      }\n    }\n  }, {\n    key: "onResize",\n    value: function onResize() {\n      //console.log("(Home3App.onResize)!")\n      this._resize();\n    } //---------------------------\n    // PRIVADAS:\n\n  }, {\n    key: "_init_scrollListeners",\n    value: function _init_scrollListeners() {\n      var _this2 = this;\n\n      var binded_render = function binded_render() {\n        _this2._render();\n      };\n\n      var binded_eval_scroll = function binded_eval_scroll() {\n        _this2._eval_inertia_scroll(_this2.$container_scrollTrigger.progress);\n      };\n\n      this._binded_render = binded_render;\n      this._binded_eval_scroll = binded_eval_scroll;\n      this.$container_scrollTrigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$container,\n        start: \'top bottom\',\n        end: \'bottom top\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        //markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_render);\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_eval_scroll);\n          } else {\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_render);\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_eval_scroll);\n          }\n        }\n      });\n    }\n  }, {\n    key: "_eval_inertia_scroll",\n    value: function _eval_inertia_scroll(progress) {\n      var innerData = this.$main.getBoundingClientRect();\n      var newInnerY = innerData.y;\n      this.settings.scroll_progress = progress;\n      this.settings.scroll_delta = newInnerY - this.settings.scroll_lastInnerY;\n      this.settings.scroll_lastInnerY = newInnerY;\n      this.settings.scroll_limitedDelta = webgl_WebGLUtils.clamp(this.settings.scroll_delta, -20, 20); // Limita los valores a -20 -> +20\n\n      this.settings.scroll_normalizedDelta = (this.settings.scroll_limitedDelta / 20).toFixed(3); // Pasa el delta a -1 -> +1\n\n      this.settings.scroll_factordDelta = Math.abs(this.settings.scroll_normalizedDelta) + 0; // Valores absolutos de 0 -> 1\n\n      this.settings.scroll_direction = 1;\n\n      if (this.settings.scroll_normalizedDelta < 0) {\n        this.settings.scroll_direction = -1;\n      }\n    }\n  }, {\n    key: "_eval_footer_scroll",\n    value: function _eval_footer_scroll(progress) {\n      //console.log("(Home3App._eval_footer_scroll): "+progress)\n      this.settings.scroll_footer_progress = progress;\n      this.settings.morphingProgress = progress;\n    }\n  }, {\n    key: "_eval_hero_scroll",\n    value: function _eval_hero_scroll(progress) {\n      //console.log("(Home3App._eval_hero_scroll): "+progress)\n      this.settings.scroll_hero_progress = progress;\n    }\n  }, {\n    key: "_resize",\n    value: function _resize() {\n      //console.log("(Home3App._resize)!")\n      this.width = this.$container.offsetWidth;\n      this.height = this.$container.offsetHeight;\n      this.responsiveScale = this.width / this.REF_RESOLUTION.width;\n      this.cameraDistance = this.REF_CAMERA_DISTANCE * (this.height / this.REF_RESOLUTION.height);\n      this.renderer.setSize(this.width, this.height);\n      this.camera.aspect = this.width / this.height;\n      this.camera.position.z = this.cameraDistance;\n      this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); // console.log("this.width: "+this.width)\n      // console.log("this.height: "+this.height)\n      // console.log("this.responsiveScale: "+this.responsiveScale)\n      // console.log("this.camera.aspect: "+this.camera.aspect)\n      // console.log("this.camera.position.z: "+this.camera.position.z)\n      // console.log("this.camera.fov: "+this.camera.fov)\n      //--\n\n      this.camera.updateProjectionMatrix(); //--\n\n      if (this.background) {\n        this.background.resize(this.width, this.height);\n      }\n\n      if (this.dots) {\n        this.dots.resize(this.width, this.height);\n      }\n    }\n  }, {\n    key: "_render",\n    value: function _render() {\n      //console.log("(Home3App._render)!")\n      if (this.height != this.$container.offsetHeight) {\n        this._resize();\n      }\n\n      if (this.background) {\n        this.background.render();\n      }\n\n      if (this.dots) {\n        this.dots.render();\n      }\n\n      this.renderer.render(this.scene, this.camera); //requestAnimationFrame(this.render.bind(this))\n    }\n  }]);\n\n  return Home3App;\n}();\n\n/* harmony default export */ const home3_Home3App = (Home3App);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/math/MeshSurfaceSampler.js\nvar MeshSurfaceSampler = __webpack_require__(441);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/loaders/GLTFLoader.js\nvar GLTFLoader = __webpack_require__(1217);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/loaders/DRACOLoader.js\nvar DRACOLoader = __webpack_require__(2854);\n;// CONCATENATED MODULE: ./js/LoadedGeometry.js\nfunction LoadedGeometry_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { LoadedGeometry_typeof = function _typeof(obj) { return typeof obj; }; } else { LoadedGeometry_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return LoadedGeometry_typeof(obj); }\n\nfunction LoadedGeometry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction LoadedGeometry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction LoadedGeometry_createClass(Constructor, protoProps, staticProps) { if (protoProps) LoadedGeometry_defineProperties(Constructor.prototype, protoProps); if (staticProps) LoadedGeometry_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction LoadedGeometry_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) LoadedGeometry_setPrototypeOf(subClass, superClass); }\n\nfunction LoadedGeometry_setPrototypeOf(o, p) { LoadedGeometry_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return LoadedGeometry_setPrototypeOf(o, p); }\n\nfunction LoadedGeometry_createSuper(Derived) { var hasNativeReflectConstruct = LoadedGeometry_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = LoadedGeometry_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = LoadedGeometry_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return LoadedGeometry_possibleConstructorReturn(this, result); }; }\n\nfunction LoadedGeometry_possibleConstructorReturn(self, call) { if (call && (LoadedGeometry_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return LoadedGeometry_assertThisInitialized(self); }\n\nfunction LoadedGeometry_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction LoadedGeometry_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction LoadedGeometry_getPrototypeOf(o) { LoadedGeometry_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return LoadedGeometry_getPrototypeOf(o); }\n\n\n\n\n\n\nvar LoadedGeometry_EventEmitter = __webpack_require__(7187);\n\nvar LoadedGeometry = /*#__PURE__*/function (_EventEmitter) {\n  LoadedGeometry_inherits(LoadedGeometry, _EventEmitter);\n\n  var _super = LoadedGeometry_createSuper(LoadedGeometry);\n\n  function LoadedGeometry(obj, settings) {\n    var _this;\n\n    LoadedGeometry_classCallCheck(this, LoadedGeometry);\n\n    //console.log("(LoadedGeometry.CONSTRUCTORA)!")\n    _this = _super.call(this); //--\n\n    _this.file = obj.file;\n    _this.id = obj.id;\n    _this.isDraco = obj.isDraco || false;\n    _this.scale = obj.scale;\n    _this.rotationY = obj.rotationY || 0; //--\n\n    _this.numDots = settings.numDots; //--\n\n    _this.mesh = null;\n    _this.sampler = null;\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_randomness: new Float32Array(_this.numDots * 3)\n    };\n    _this.loader = new GLTFLoader/* GLTFLoader */.E();\n\n    if (_this.isDraco) {\n      _this.dracoLoader = new DRACOLoader/* DRACOLoader */._();\n\n      _this.dracoLoader.setDecoderPath("./draco/");\n\n      _this.loader.setDRACOLoader(_this.dracoLoader);\n    }\n\n    _this.loaded = false; //--\n    //this.init()\n\n    return _this;\n  }\n\n  LoadedGeometry_createClass(LoadedGeometry, [{\n    key: "init",\n    value: function init() {\n      var _this2 = this;\n\n      //console.log("(LoadedGeometry.init)!")\n      this.loader.load(this.file, function (response) {\n        //console.log("   mesh "+this.id+" loaded!")\n        //console.log("response: ", response)\n        _this2.mesh = response.scene.children[0];\n\n        _this2.mesh.geometry.rotateY(_this2.rotationY);\n\n        _this2.sampler = new MeshSurfaceSampler/* MeshSurfaceSampler */.a(_this2.mesh).build(); //--\n\n        for (var i = 0; i < _this2.numDots; i++) {\n          var newPostion = new three_module/* Vector3 */.Pa4();\n\n          _this2.sampler.sample(newPostion);\n\n          _this2.attributes.a_posiciones.set([newPostion.x * _this2.scale, newPostion.y * _this2.scale, newPostion.z * _this2.scale], i * 3);\n\n          _this2.attributes.a_randomness.set([Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1], i * 3);\n        } //--\n\n\n        _this2.loaded = true;\n\n        _this2.emit("onMeshLoaded", {\n          ref: _this2\n        });\n      });\n    }\n  }]);\n\n  return LoadedGeometry;\n}(LoadedGeometry_EventEmitter);\n\n/* harmony default export */ const webgl_LoadedGeometry = (LoadedGeometry);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home4/Home4Geometry.js\nfunction Home4Geometry_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Home4Geometry_typeof = function _typeof(obj) { return typeof obj; }; } else { Home4Geometry_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Home4Geometry_typeof(obj); }\n\nfunction Home4Geometry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home4Geometry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home4Geometry_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home4Geometry_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home4Geometry_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Home4Geometry_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Home4Geometry_setPrototypeOf(subClass, superClass); }\n\nfunction Home4Geometry_setPrototypeOf(o, p) { Home4Geometry_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Home4Geometry_setPrototypeOf(o, p); }\n\nfunction Home4Geometry_createSuper(Derived) { var hasNativeReflectConstruct = Home4Geometry_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Home4Geometry_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Home4Geometry_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Home4Geometry_possibleConstructorReturn(this, result); }; }\n\nfunction Home4Geometry_possibleConstructorReturn(self, call) { if (call && (Home4Geometry_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Home4Geometry_assertThisInitialized(self); }\n\nfunction Home4Geometry_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Home4Geometry_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Home4Geometry_getPrototypeOf(o) { Home4Geometry_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Home4Geometry_getPrototypeOf(o); }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar Home4Geometry_EventEmitter = __webpack_require__(7187);\n\nvar About1Geometry = /*#__PURE__*/function (_EventEmitter) {\n  Home4Geometry_inherits(About1Geometry, _EventEmitter);\n\n  var _super = Home4Geometry_createSuper(About1Geometry);\n\n  function About1Geometry(obj) {\n    var _this;\n\n    Home4Geometry_classCallCheck(this, About1Geometry);\n\n    //console.log("(About1Geometry.CONSTRUCTORA): ", obj)\n    _this = _super.call(this); //--\n\n    _this.factor = obj.factor; //6\n\n    _this.incr_radio = obj.incr_radio; //25\n\n    _this.numOrbits = obj.numOrbits; //37\n\n    _this.array_triangular = obj.array_triangular;\n    _this.numDots = obj.numDots; //--\n\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_dot_num: new Float32Array(_this.numDots * 1),\n      a_orbital: new Float32Array(_this.numDots * 1),\n      a_pos_orbita: new Float32Array(_this.numDots * 1),\n      a_incr_anguloRad: new Float32Array(_this.numDots * 1),\n      a_anguloRad: new Float32Array(_this.numDots * 1),\n      a_radio: new Float32Array(_this.numDots * 1),\n      a_dir: new Float32Array(_this.numDots * 1),\n      a_incr: new Float32Array(_this.numDots * 1),\n      a_x: new Float32Array(_this.numDots * 1),\n      a_y: new Float32Array(_this.numDots * 1),\n      a_z: new Float32Array(_this.numDots * 1)\n    }; //--\n\n    for (var i = 0; i < _this.numDots; i++) {\n      var dot = _this._get_dot(i);\n\n      var i3 = i * 3;\n      _this.attributes.a_posiciones[i3] = dot.x;\n      _this.attributes.a_posiciones[i3 + 1] = dot.y;\n      _this.attributes.a_posiciones[i3 + 2] = dot.z; //--\n\n      _this.attributes.a_dot_num[i] = i;\n      _this.attributes.a_orbital[i] = dot.orbital;\n      _this.attributes.a_pos_orbita[i] = dot.pos_orbita;\n      _this.attributes.a_incr_anguloRad[i] = dot.incr_anguloRad;\n      _this.attributes.a_anguloRad[i] = dot.anguloRad;\n      _this.attributes.a_radio[i] = dot.radio;\n      _this.attributes.a_dir[i] = dot.dir;\n      _this.attributes.a_incr[i] = dot.incr;\n      _this.attributes.a_x[i] = dot.y;\n      _this.attributes.a_y[i] = dot.y;\n      _this.attributes.a_z[i] = dot.z;\n    } //--\n\n\n    _this.loaded = false; //console.log(this.attributes.a_dot_num)\n\n    return _this;\n  }\n\n  Home4Geometry_createClass(About1Geometry, [{\n    key: "init",\n    value: function init() {\n      //console.log("(About1Geometry.init)!")\n      //--\n      //--\n      this.emit("onMeshLoaded", {\n        ref: this\n      });\n    } //------------------------------------------\n    // PRIVADAS\n\n  }, {\n    key: "_get_dot",\n    value: function _get_dot(num) {\n      // Devuelve un objeto con la informaciín de un punto de la geometria "orbital MIOTI"\n      var obj = {\n        num: num,\n        x: 0,\n        y: 0,\n        z: 0,\n        orbital: 0,\n        co_orbitantes: 0,\n        pos_orbita: 0,\n        incr_anguloRad: 0,\n        anguloRad: 0,\n        radio: 0\n      }; //--\n\n      for (var i = 0; i <= this.array_triangular.length; i++) {\n        var limSup = this.array_triangular[i]; //console.log("limSup: "+limSup)\n\n        if (num > limSup) {\n          // console.log("*")\n          obj.orbital = i + 1;\n          obj.co_orbitantes = (i + 1) * this.factor;\n          obj.pos_orbita = num - limSup - 1;\n          obj.incr_anguloRad = 2 * Math.PI / obj.co_orbitantes;\n\n          if (obj.orbital % 2 == 0) {\n            obj.dir = 1;\n            obj.incr = 0;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad;\n          } else {\n            obj.dir = -1;\n            obj.incr = 1;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad + obj.incr_anguloRad / 2;\n          }\n\n          obj.radio = obj.orbital * this.incr_radio; //--\n\n          obj.x = Math.cos(obj.anguloRad) * obj.radio;\n          obj.y = Math.sin(obj.anguloRad) * obj.radio;\n          obj.z = 0;\n        } //break\n\n      }\n\n      return obj;\n    }\n  }]);\n\n  return About1Geometry;\n}(Home4Geometry_EventEmitter);\n\n/* harmony default export */ const Home4Geometry = (About1Geometry);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home4/shaders/home4_dots_vertex.glsl\n/* harmony default export */ const home4_dots_vertex = ("#define GLSLIFY 1\\nattribute vec3 a_randomness;\\nattribute vec3 a_geo1_position;\\nattribute float a_geo1_dot_num;\\nattribute float a_geo1_orbital;\\nattribute float a_geo1_pos_orbita;\\nattribute float a_geo1_incr_anguloRad;\\nattribute float a_geo1_anguloRad;\\nattribute float a_geo1_incr;\\nattribute float a_geo1_dir;\\nattribute float a_geo1_radio;\\n\\nattribute vec3 a_geo2_position;\\nattribute vec3 a_geo3_position;\\n\\nuniform float uTime;\\nuniform float uCamaraDistance;\\nuniform float uScrollSpeed;\\nuniform float uScale;\\nuniform float uResponsiveScale;\\nuniform float uScrollDelta;\\nuniform float uScrollProgress;\\nuniform float uMorphingProgress;\\nuniform float uIntroProgress;\\n\\nuniform float uRotationInner;\\nuniform float uRotationOutter;\\n\\nuniform float uProgress0;\\nuniform float uProgress0b;\\n\\nuniform float uProgress1;\\nuniform float uProgress2;\\nuniform float uProgress3;\\nuniform float uProgress4;\\nuniform float uProgress4b;\\nuniform float uProgress5;\\nuniform float uProgress6;\\nuniform float uProgress6b;\\n\\n// varying vec3 vPosition;\\n//varying vec2 vUv;\\nvarying vec3 v_randomness;\\nvarying float v_colorStrength;\\n\\nvarying float v_activePulse;\\nvarying float v_activePulseProgress;\\nvarying float v_test;\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat cnoise(vec3 P){\\n  vec3 Pi0 = floor(P); // Integer part for indexing\\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 / 7.0;\\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 / 7.0;\\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n  return 2.2 * n_xyz;\\n}\\n\\nvec3 get_pos1(float anguloRad){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(anguloRad)*a_geo1_radio;\\n    float y = sin(anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nvec3 get_posScrollSpeed(vec3 pos){\\n    float factor = mix(1.0, 2.0, uScrollSpeed);\\n    pos = pos*factor;\\n    return pos;\\n}\\n\\nfloat get_escalaNoise(float x, float y, float amplitudMapa, float progress){\\n    float valor = cnoise(vec3(x/amplitudMapa, y/amplitudMapa, progress));\\n    valor = 0.5+(valor/2.);\\n    valor *=2.;\\n    return valor;\\n}\\n\\nfloat get_escalaOndaRadial(float orbital, float progress){\\n    float frecuencia = 0.5; // Valores bajos ondas mas largas, valores altos ondas mas cortas\\n    float seno = (sin((progress+orbital)*frecuencia)+1.)/2.;\\n\\n    float valor = 0.5+(seno*0.5);\\n\\n    return valor;\\n}\\n\\nfloat get_escalaEdge(float orbital){\\n    float value = 1.;\\n    float orbitalMax = 37.;\\n    float fadeLimit = 22.;\\n    float fadeScale = 1.;\\n    float rango = orbitalMax -fadeLimit;\\n    if(orbital >= fadeLimit){\\n        float orbitalRel = orbital -fadeLimit;\\n        float ratio = orbitalRel/rango;\\n        fadeScale = fadeScale-ratio;\\n    }\\n    return fadeScale;\\n}\\n\\nvec3 randomizePosition(vec3 oldPos, vec3 randomness, float time, float amplitude, float amount, float speed){\\n    time = time*speed;\\n    vec3 newPos = oldPos;\\n    newPos.x += sin(time * randomness.x) * (amplitude*amount);\\n    newPos.y += cos(time * randomness.y) * (amplitude*amount);\\n    newPos.z += cos(time * randomness.z) * (amplitude*amount);\\n    return newPos;\\n}\\n\\nfloat quinticOut(float t) {\\n  return (pow(t - 1.0, 5.0));\\n}\\n\\nfloat quadraticOut(float t) {\\n  return -t * (t - 2.0);\\n}\\n\\nfloat quarticOut(float t) {\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\n}\\n\\nvoid main() {\\n\\n    // float time = uTime * 4.;    \\n\\n    //vec3 pos = mix(position, a_geo1_position, uProgress);\\n    // vec3 pos = a_geo2_position;\\n    //vec3 pos = position;\\n    //vec3 pos1 = get_pos1();\\n    //pos1 = pos1*(sin((-uTime+a_geo1_orbital)*0.5)+2.)*0.1;\\n\\n    //float senoFx = sin((-uTime+a_geo1_orbital))*0.5*0.5;\\n    //float escalaFx = mix(0.98, 1.02, senoFx);\\n    //pos1 = pos1*escalaFx;\\n    //pos1 = get_posScrollSpeed(pos1);\\n\\n    //vec3 endPos = mix(a_geo2_position, a_geo3_position, 0.);\\n    //vec3 endPos = a_geo2_position;\\n    //vec3 pos = mix(pos1, a_geo2_position, uProgress1);\\n    //pos = randomizePosition(pos, a_randomness, uTime, 5.0, uProgress1, 5.);\\n    // pos.x += sin(time * a_randomness.x) *0.02;\\n    // pos.y += cos(time * a_randomness.y) *0.02;\\n    // pos.z += cos(time * a_randomness.z) *0.02;\\n    \\n    // pos *= uScale;\\n    // vPosition = pos;\\n\\n    //----------------------------------------------------------\\n    // POSITION:\\n    float rotation = mix(uRotationInner, uRotationOutter, ((a_geo1_orbital)*1.)/37.);\\n    float anguloRad_time = (a_geo1_anguloRad+rotation);\\n    // Geometries present:\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(uScrollProgress*a_geo1_dir*2.2);\\n    vec3 POSITION_1 = get_pos1(anguloRad_time);\\n    //vec3 POSITION_1 = position;\\n    vec3 POSITION_2 = a_geo2_position;\\n    POSITION_2 = randomizePosition(POSITION_2, a_randomness, uTime, 5.0, uMorphingProgress, 5.);\\n    // Z modifications:\\n    \\n    // Ondas de seno:\\n    float senoFx = sin((-uTime+a_geo1_orbital))*0.5*0.5;\\n    float escalaFx = mix(0.98, 1.02, senoFx);\\n    //POSITION_1 *= escalaFx;\\n    // Morphing:\\n    float clamped_morpingProgress = clamp(0., 0.95, uMorphingProgress);\\n    POSITION_1 = mix(POSITION_1, POSITION_2, clamped_morpingProgress);\\n    // Randomized position while in POSITION_2\\n    POSITION_1 = randomizePosition(POSITION_1, a_randomness*2., uTime, 5.0, uMorphingProgress, 2.5);\\n    // Escala por scroll delta:\\n    //POSITION_1 *= 1.+(uScrollDelta);\\n    // Escalado incial:\\n    //POSITION_1 *= mix(5., 1., quinticOut(uIntroProgress));\\n    //POSITION_1 *= mix(5., 1., quadraticOut(uIntroProgress));\\n    //POSITION_1 *= mix(10., 1., quarticOut(uIntroProgress));\\n    POSITION_1 *= mix(10., 1., uIntroProgress);\\n    // Responsive Scale:\\n    POSITION_1 *= uResponsiveScale;\\n    //\\n    POSITION_1 = mix(POSITION_1, POSITION_2, uMorphingProgress);\\n    //----------------------------------------------------------\\n\\n    //----------------------------------------------------------\\n    // SIZE:\\n    float SIZE_1 = 8.;\\n    // Los puntos son mas pequeños en los orbitales de la periferia\\n    float esclaEdege = get_escalaEdge(a_geo1_orbital); \\n    float rango = 1.-esclaEdege;\\n    SIZE_1 *= (esclaEdege + (rango*uProgress1));\\n    // Los puntos se escalan en base a un mapa de ruido\\n    SIZE_1 *= mix(1., get_escalaNoise(POSITION_1.x, POSITION_1.y, 500., uProgress0), uProgress0b);\\n    // Los puntos se escalan en base a ondas concentricas de seno:\\n    SIZE_1 *= mix(1., get_escalaOndaRadial(a_geo1_orbital, -uTime*10.), uProgress4b);\\n    // Los puntos se escalan por pulson random:\\n    SIZE_1 *= mix(1., 1.5, v_activePulseProgress);\\n    // Los puntos se escalan junto con la geometria con el scrolldelta\\n    SIZE_1 *= 1.+(uScrollDelta);\\n\\n    float SIZE_2 = 5.; \\n    // \\n    float zDepthNorm = (POSITION_2.z+600.)/(600.*2.); // de -600 a 600 de un valor normalizado (sin clamp, es decir que puede ser <0 y >1) de la posicion z\\n    float zDepthAlpha = mix(0.2, 0.9, zDepthNorm);\\n    float zDepthScale = mix(0.8, 2.5, zDepthNorm);\\n    float randomSize = SIZE_2 *0.5+(a_randomness.x*0.9);\\n    randomSize *= zDepthScale;\\n    SIZE_2 = mix(SIZE_2, randomSize, uMorphingProgress);\\n    \\n    \\n    float SIZE = mix(SIZE_1, SIZE_2, uMorphingProgress);\\n    // Los puntos se escalan si se redimensona el lienzo\\n    SIZE *= uResponsiveScale;\\n    \\n    \\n    //----------------------------------------------------------\\n\\n    //----------------------------------------------------------\\n    // VERTEX\\n    vec4 mvPosition = modelViewMatrix * vec4( POSITION_1, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n    gl_PointSize = SIZE*(uCamaraDistance/-mvPosition.z);\\n    //----------------------------------------------------------\\n\\n    \\n\\n    //----------------------------------------------------------\\n    // VARYINGS:\\n    v_randomness = a_randomness;\\n    v_colorStrength = get_escalaNoise(POSITION_1.x, POSITION_1.y, 200., sin(uTime));\\n    v_colorStrength = mix(1., v_colorStrength, uMorphingProgress);\\n\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home4/shaders/home4_dots_fragment.glsl\n/* harmony default export */ const home4_dots_fragment = ("#define GLSLIFY 1\\n// varying vec3 vPosition;\\n// varying vec2 vUv;\\n\\nvarying vec3 v_randomness;\\nvarying float v_colorStrength;\\n\\nuniform vec3 uColor1;\\nuniform vec3 uColor2;\\nuniform vec3 uColor3;\\n\\nuniform float uProgress1;\\nuniform float uProgress2;\\nuniform float uProgress3;\\nuniform float uIntroProgress;\\n\\nvarying float v_activePulse;\\nvarying float v_activePulseProgress; \\nvarying float v_test;\\n\\nfloat quarticOut(float t) {\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\n}\\n\\nfloat circulizar(float radio){\\n    // radio es un valor entre 0 y 1. 0 es 0 de radio y 1 es el maximo del radio dentro de\\n    radio = 1.0-(0.5*radio);\\n    float result = distance(gl_PointCoord, vec2(0.5, 0.5));\\n    result = 1. -result;\\n    result = pow(result, 1.);\\n    result = step(radio, result);\\n    return result;\\n}\\n\\nvoid main() {\\n\\n    float randomnessCir = v_randomness.x*uProgress1;\\n    randomnessCir = mix(1., randomnessCir, uProgress1);\\n    //float alpha = circulizar(1.0*randomnessCir);\\n    float alpha = circulizar(1.0);\\n\\n    //alpha *= mix(-2., 1., quarticOut(uIntroProgress));\\n    alpha *= mix(0.8, 1., uIntroProgress);\\n\\n    vec3 finalColor = mix(uColor2, uColor1, v_colorStrength);\\n\\n    vec3 colorWhite = vec3(1.0, 1.0, 1.0);\\n    vec3 mixActiveColor = mix(finalColor, uColor3, v_activePulse);\\n\\n    vec3 white = vec3(1., 1., 1.);\\n\\n    finalColor =  mix(finalColor, white, v_activePulseProgress*0.15);\\n\\n    gl_FragColor = vec4(finalColor, alpha);\\n\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home4/Home4Dots.js\nfunction Home4Dots_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home4Dots_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home4Dots_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home4Dots_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home4Dots_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\nvar Home4Dots = /*#__PURE__*/function () {\n  function Home4Dots(obj) {\n    var _this = this;\n\n    Home4Dots_classCallCheck(this, Home4Dots);\n\n    //console.log("(Home4Dots.CONSTRUCTORA)!")\n    //console.log(obj)\n    this.worldGL = obj.worldGL; //--\n\n    this.scene = this.worldGL.scene;\n    this.cameraDistance = this.worldGL.cameraDistance; //--\n\n    this.material = null;\n    this.geometry = null;\n    this.mesh = null;\n    this.numParticles = null;\n    this.allLoaded = false;\n    this.created = false;\n    this.clock = new three_module/* Clock */.SUY();\n    this.startTime = null;\n    this.introTime = 1.2;\n    this.rotationX = 0;\n    this.rotationY = 0;\n    this.rotationWantedX = 0;\n    this.rotationWantedY = 0;\n    this.morphingProgress = 0; //--\n\n    this.eased_rotation = new webgl_EasedOutValue(0, 0.05);\n    this.eased_scrollDelta = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.3, 0.05);\n    this.eased_scrollDelta_fast = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.5, 0.1);\n    this.eased_scrollProgress = new webgl_EasedOutValue(this.worldGL.settings.scroll_progress, 0.05); //--\n\n    this._setup_settings(); //--\n\n\n    this.orbital_geometry = new Home4Geometry(this.settings); //--\n\n    this.M_geometry = new webgl_LoadedGeometry({\n      id: "M_geometry",\n      file: "",\n      isDraco: false,\n      scale: 600 //rotationY : -Math.PI*0.25\n\n    }, this.settings);\n    this.M_geometry.on("onMeshLoaded", function (data) {\n      //console.log("(Home4Dots) onMeshLoaded!")\n      _this._eval_allLoaded();\n    }); //--\n\n    this.resize(); //--\n\n    this.M_geometry.init();\n  } //------------------------------------\n  // PUBLICAS:\n\n\n  Home4Dots_createClass(Home4Dots, [{\n    key: "create",\n    value: function create() {\n      //console.log("(Home4Dots._create)!")\n      //--\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        depthWrite: false,\n        blending: three_module/* AdditiveBlending */.WMw,\n        //blending: THREE.NormalBlending,\n        //blending: THREE.MultiplyBlending,\n        vertexColors: true,\n        vertexShader: home4_dots_vertex,\n        fragmentShader: home4_dots_fragment,\n        transparent: true,\n        uniforms: {\n          uColor1: {\n            value: new three_module/* Color */.Ilk("#170e41")\n          },\n          //801c65\n          uColor2: {\n            value: new three_module/* Color */.Ilk("#801c65")\n          },\n          uColor3: {\n            value: new three_module/* Color */.Ilk("#880364")\n          },\n          uTime: {\n            value: 0\n          },\n          uCamaraDistance: {\n            value: this.cameraDistance\n          },\n          uScrollDelta: {\n            value: 0\n          },\n          uScrollProgress: {\n            value: 1\n          },\n          uResponsiveScale: {\n            value: 1\n          },\n          uRotation1: {\n            value: 0\n          },\n          uRotation2: {\n            value: 0\n          },\n          uRotation3: {\n            value: 0\n          },\n          uRotationInner: {\n            value: 0\n          },\n          uRotationOutter: {\n            value: 0\n          },\n          uMorphingProgress: {\n            value: 0\n          },\n          uIntroProgress: {\n            value: 0\n          },\n          uScrollSpeed: {\n            value: 0\n          },\n          uProgress0: {\n            value: 0\n          },\n          uProgress0b: {\n            value: 1\n          },\n          uProgress1: {\n            value: 0\n          },\n          uProgress2: {\n            value: 0\n          },\n          uProgress3: {\n            value: 0\n          },\n          uProgress4: {\n            value: 0\n          },\n          uProgress4b: {\n            value: 0\n          },\n          uProgress5: {\n            value: 0\n          },\n          uProgress6: {\n            value: 0\n          },\n          uProgress6b: {\n            value: 0\n          } //uScale: {value: 1},\n          //uSize: {value: 30 * this.renderer.getPixelRatio()}\n\n        }\n      }); //--\n      //console.log(this.orbital_geometry.attributes.a_posiciones)\n      //--\n\n      this.geometry = new three_module/* BufferGeometry */.u9r();\n      this.geometry.setAttribute(\'position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_dot_num\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dot_num, 1));\n      this.geometry.setAttribute(\'a_geo1_orbital\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_orbital, 1));\n      this.geometry.setAttribute(\'a_geo1_pos_orbita\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_pos_orbita, 1));\n      this.geometry.setAttribute(\'a_geo1_incr_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_radio\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_radio, 1));\n      this.geometry.setAttribute(\'a_geo1_dir\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dir, 1));\n      this.geometry.setAttribute(\'a_geo1_incr\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr, 1));\n      this.geometry.setAttribute(\'a_geo1_x\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_x, 1));\n      this.geometry.setAttribute(\'a_geo1_y\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_y, 1));\n      this.geometry.setAttribute(\'a_geo1_z\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_z, 1));\n      this.geometry.setAttribute(\'a_geo2_position\', new three_module/* BufferAttribute */.TlE(this.M_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_randomness\', new three_module/* BufferAttribute */.TlE(this.M_geometry.attributes.a_randomness, 3));\n      this.mesh = new three_module/* Points */.woe(this.geometry, this.material);\n      this.scene.add(this.mesh);\n    }\n  }, {\n    key: "onMouseUpdate",\n    value: function onMouseUpdate(mouseNormX, mouseNormY) {\n      //console.log("(Home4Dots.onMouseUpdate): "+mouseNormX)\n      if (this.morphingProgress > 0) {\n        //console.log("*")\n        this._mouseUpdateX(mouseNormX);\n\n        this._mouseUpdateY(mouseNormY);\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.allLoaded) {\n        //console.log("(Home4Dots.render)!")\n        //--\n        if (this.startTime == null) {\n          this.startTime = this.clock.getElapsedTime();\n        }\n\n        var introProgress = webgl_WebGLUtils.clamp((this.clock.getElapsedTime() - this.startTime) / this.introTime, 0, 1);\n        introProgress = easing_functions_default().Quartic.Out(introProgress);\n        this.material.uniforms.uIntroProgress.value = introProgress; //--\n\n        var rotationEasedY = this.rotationY + (this.rotationWantedY - this.rotationY) * 0.05;\n        this.rotationY = rotationEasedY;\n        this.mesh.rotation.y = rotationEasedY; //--\n\n        var rotationEasedX = this.rotationX + (this.rotationWantedX - this.rotationX) * 0.05;\n        this.rotationX = rotationEasedX;\n        this.mesh.rotation.x = rotationEasedX; //--\n\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uCamaraDistance.value = this.worldGL.cameraDistance;\n        this.material.uniforms.uResponsiveScale.value = this.worldGL.responsiveScale;\n        this.material.uniforms.uScrollDelta.value = -this.eased_scrollDelta.get(this.worldGL.settings.scroll_normalizedDelta * 0.5);\n        this.material.uniforms.uScrollProgress.value = this.worldGL.settings.scroll_progress;\n\n        if (this.worldGL.settings.morphingProgress <= 0.5) {\n          this.morphingProgress = 0;\n\n          this._mouseUpdateX(0);\n\n          this._mouseUpdateY(0);\n        } else {\n          this.morphingProgress = (this.worldGL.settings.morphingProgress - 0.5) * 2;\n        } //console.log("this.morphingProgress: "+this.morphingProgress)\n        //--\n\n\n        this.material.uniforms.uMorphingProgress.value = this.morphingProgress;\n        var extraSpeed = 1 + Math.abs(this.eased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5) * 10);\n        this.settings.rotation1 += this.settings.speedRotation1 * extraSpeed;\n        this.settings.rotation2 += this.settings.speedRotation2 * extraSpeed;\n        this.settings.rotation3 += this.settings.speedRotation3 * extraSpeed;\n        this.material.uniforms.uRotation1.value = this.settings.rotation1;\n        this.material.uniforms.uRotation2.value = -this.settings.rotation2;\n        this.material.uniforms.uRotation3.value = this.settings.rotation3;\n        this.settings.rotationInner += this.settings.speedRotationInner * extraSpeed;\n        this.settings.rotationOutter += this.settings.speedRotationOutter * extraSpeed;\n        this.material.uniforms.uRotationInner.value = this.settings.rotationInner;\n        this.material.uniforms.uRotationOutter.value = this.settings.rotationOutter;\n        this.material.uniforms.uProgress0.value = this.settings.progress0;\n        this.material.uniforms.uProgress0b.value = this.settings.progress0b;\n        this.material.uniforms.uProgress1.value = this.settings.progress1;\n        this.material.uniforms.uProgress2.value = this.settings.progress2;\n        this.material.uniforms.uProgress3.value = this.settings.progress3;\n        this.material.uniforms.uProgress4.value = this.settings.progress4;\n        this.material.uniforms.uProgress4b.value = this.settings.progress4b;\n        this.material.uniforms.uProgress5.value = this.settings.progress5;\n        this.material.uniforms.uProgress6.value = this.settings.progress6;\n        this.material.uniforms.uProgress6b.value = this.settings.progress6b;\n        this.material.uniforms.uScrollSpeed.value = this.settings.scrollSpeedFiltered; //--\n\n        this.settings.rotationInner += this.settings.speedRotationInner * extraSpeed;\n        this.settings.rotationOutter += this.settings.speedRotationOutter * extraSpeed;\n      }\n    }\n  }, {\n    key: "resize",\n    value: function resize() {//NADA\n    } //------------------------------------\n    // PRIVADAS: \n\n  }, {\n    key: "_mouseUpdateX",\n    value: function _mouseUpdateX(mouseNormX) {\n      var maxAngleRad = Math.PI * 0.25;\n      this.rotationWantedY = maxAngleRad * mouseNormX * this.morphingProgress;\n    }\n  }, {\n    key: "_mouseUpdateY",\n    value: function _mouseUpdateY(mouseNormY) {\n      var maxAngleRad = Math.PI * 0.1;\n      this.rotationWantedX = maxAngleRad * mouseNormY * this.morphingProgress;\n    }\n  }, {\n    key: "_eval_allLoaded",\n    value: function _eval_allLoaded() {\n      if (this.M_geometry.loaded) {\n        this.allLoaded = true;\n        this.worldGL.eval_start();\n      }\n    }\n  }, {\n    key: "_setup_settings3",\n    value: function _setup_settings3() {\n      //console.log("(Home4Dots._setup_settings)!")\n      this.settings = {\n        factor: 6,\n        incr_radio: 25,\n        numOrbits: 26,\n        //arrayOrbits: [12, 19, 26]\n        arrayOrbits: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26] //arrayOrbits: [1, 3]\n\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.array_triangular_dots_x_orbita = this._get_array_triangular_dots_x_orbita(this.settings.array_triangular, this.settings.arrayOrbits);\n      this.settings.array_dotPos = this._get_array_dotPos(this.settings.arrayOrbits, this.settings.array_triangular, this.settings.array_triangular_dots_x_orbita);\n      this.settings.numDots = this.settings.array_dotPos.length;\n    }\n  }, {\n    key: "_setup_settings",\n    value: function _setup_settings() {\n      //console.log("(Home4Dots._setup_settings)!")\n      var speedBase = 0.00005; //--\n\n      this.settings = {\n        //--\n        rotationInner: 0,\n        speedRotationInner: 37 * speedBase,\n        rotationOutter: 0,\n        speedRotationOutter: 1 * speedBase,\n        //--\n        factor: 6,\n        incr_radio: 25,\n        numOrbits: 37,\n        pulseArray: [],\n        pulseMax: 1,\n        pulseNum_0: 0,\n        pulseInitTime_0: 0,\n        pulseProgress_0: 0,\n        progress0: 0,\n        progress0b: 1,\n        progress1: 0,\n        progress2: 0,\n        progress3: 0,\n        progress4: 0,\n        progress4b: 1,\n        progress5: 0,\n        progress6: 0,\n        progress6b: 1,\n        scrollSpeed: 0,\n        scrollSpeedFiltered: 0\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.numDots = this.settings.array_triangular[this.settings.array_triangular.length - 1];\n    }\n  }, {\n    key: "_get_array_triangular",\n    value: function _get_array_triangular(_factor, _numObits) {\n      // Genera una array de progresión triangular (* factor).\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _numObits; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        miArray.push(i * (i + 1) / 2 * _factor);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_array_dotPos",\n    value: function _get_array_dotPos(_arrayOrbits, _array_triangular, _array_triangular_dots_x_orbita) {\n      var miArray = [];\n\n      for (var i = 0; i < _arrayOrbits.length; i++) {\n        var orbitNum = _arrayOrbits[i];\n        var dots_x_orbit = _array_triangular_dots_x_orbita[i];\n        var dotNum_base = _array_triangular[_arrayOrbits[i] - 1]; // console.log("orbitNum: "+orbitNum)\n        // console.log("dots_x_orbit: "+dots_x_orbit)\n        // console.log("dotNum_base: "+dotNum_base)\n\n        for (var j = 0; j < dots_x_orbit; j++) {\n          miArray.push(dotNum_base + j + 1);\n        }\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_numDots",\n    value: function _get_numDots(_array_triangular_dots_x_orbita) {\n      var numDots = 0;\n\n      for (var i = 0; i <= _array_triangular_dots_x_orbita.length - 1; i++) {\n        numDots += _array_triangular_dots_x_orbita[i];\n      }\n\n      return numDots;\n    }\n  }, {\n    key: "_get_array_triangular_dots_x_orbita",\n    value: function _get_array_triangular_dots_x_orbita(_array_triangular, _arrayOrbits) {\n      // Genera una array basada en la progresión triangular (* factor).\n      // ... donde se indica el numero de dots por orbital\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _arrayOrbits.length - 1; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        var numDots_orbita_actual = _array_triangular[_arrayOrbits[i]];\n        var numDots_orbita_anterior = _array_triangular[_arrayOrbits[i] - 1];\n        var numDots_orbita = numDots_orbita_actual - numDots_orbita_anterior;\n        miArray.push(numDots_orbita);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_createcube",\n    value: function _createcube(_scene) {\n      var geometry = new three_module/* BoxGeometry */.DvJ(100, 100, 100);\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        color: 0x00ff00\n      });\n      var cube = new three_module/* Mesh */.Kj0(geometry, material);\n\n      _scene.add(cube);\n    }\n  }]);\n\n  return Home4Dots;\n}();\n\n/* harmony default export */ const home4_Home4Dots = (Home4Dots);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home4/Home4App.js\nfunction Home4App_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home4App_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home4App_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home4App_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home4App_defineProperties(Constructor, staticProps); return Constructor; }\n\n// FPS-Meter:\n//(function(){var script=document.createElement(\'script\');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src=\'//cdn.jsdelivr.net/gh/Kevnz/stats.js/build/stats.min.js\';document.head.appendChild(script);})()\n\n\n\n\n\n\nvar Home4App = /*#__PURE__*/function () {\n  function Home4App(obj) {\n    var _this = this;\n\n    Home4App_classCallCheck(this, Home4App);\n\n    //console.log("(Home4App.CONSTRUCTORA)!", obj) \n    this.hw_renderer = obj.renderer; // Rederer/pagina de HighWay. No confundir con el render/renderer de Three.js\n\n    this.$container = obj.domElement; //-- \n    //this.$inner = document.querySelector(\'.inner\')\n    //this.$footer = document.querySelector(\'.footer\')\n    //--\n\n    this.REF_RESOLUTION = {\n      width: 1920,\n      height: 947\n    };\n    this.REF_CAMERA_DISTANCE = 500; //--\n\n    this.initialized = false; //--\n\n    this.width;\n    this.height;\n    this.responsiveScale;\n    this.cameraDistance; //--\n\n    document.addEventListener(\'mousemove\', function (self) {\n      _this.onMouseUpdate(self);\n    }, false);\n    document.addEventListener(\'wheel\', function (self) {\n      _this.onMouseUpdate(self);\n    }, false); //--\n\n    this.MAIN_ACTIVE = false;\n    this.FOOTER_ACTIVE = false; //--\n\n    this.mouseNorm = {\n      x: 0,\n      y: 0\n    }; //--\n    //this.refResolution = 1920;\n    //this.refResolution = 450;\n    //this.responsiveScale = this.width/this.refResolution;\n    //--\n    //this.cameraDistance = 500\n    //--\n\n    this.settings = {\n      scroll_lastInnerY: 0,\n      // Ultima posición del elemento de referencia\n      scroll_delta: 0,\n      // Incremento de pixels del scroll\n      scroll_limitedDelta: 0,\n      // Limita los valores a -20 -> +20\n      scroll_normalizedDelta: 0,\n      // Pasa el delta a -1 -> +1\n      scroll_factordDelta: 1,\n      // Valores absolutos de 0 -> 1\n      scroll_direction: 1,\n      // Direccion del delta. 1 si está parado\n      scroll_footer_progress: 0,\n      morphingProgress: 0\n    }; //--\n\n    this._update_dimensions(); //--\n    // Scene\n\n\n    this.scene = new three_module/* Scene */.xsS();\n    this.scene.background = new three_module/* Color */.Ilk(0x000a33); //--\n    // Camera\n    //PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\n\n    this.camera = new three_module/* PerspectiveCamera */.cPb(30, this.width / this.height, 0.1, 2000);\n    this.camera.position.z = this.cameraDistance; //console.log("this.camera.fov: "+this.camera.fov)\n\n    this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //console.log("this.camera.fov: "+this.camera.fov)\n    //--\n    // Renderer\n\n    this.renderer = new three_module/* WebGL1Renderer */.b5g({\n      antialias: true,\n      alpha: true\n    });\n    this.renderer.autoClear = false; // Vamos a usar 2 scenas (una para el background y otra para los puntos) que implicarán usar 2 acciones de render. Con autoclear false permitimos que la segunda no borre la primera.\n\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1)); //--\n\n    this.$container.appendChild(this.renderer.domElement); //--\n\n    this.dots = new home4_Home4Dots({\n      worldGL: this\n    }); //--\n\n    this._resize(); //this._render();\n    //this._init_scrollListeners()\n\n  } //---------------------------\n  // PUBLICAS:\n\n\n  Home4App_createClass(Home4App, [{\n    key: "init",\n    value: function init() {\n      //console.log("(Home4App.init)!") \n      this.initialized = true;\n      this.eval_start();\n    }\n  }, {\n    key: "eval_start",\n    value: function eval_start() {\n      //console.log("(Home4App.eval_start): "+this.initialized+":"+this.dots.allLoaded) \n      if (this.initialized && this.dots.allLoaded) {\n        //console.log("(Home4App.eval_start) -- START") \n        //console.log("START!")\n        //--\n        this.$inner = document.querySelector(\'.inner\');\n        this.$footer = document.querySelector(\'.footer\'); //--\n\n        this.dots.create();\n\n        this._render();\n\n        this._init_scrollListeners();\n      }\n    }\n  }, {\n    key: "kill",\n    value: function kill() {\n      //console.log("(Home4App.kill)!") \n      this.$inner_trigger.kill();\n      this.$footer_trigger.kill();\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_render);\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_eval_scroll);\n      this.dots = null;\n    } //---------------------------\n\n  }, {\n    key: "onResize",\n    value: function onResize() {\n      //console.log("(Home1App.onResize)!")\n      this._resize();\n    }\n  }, {\n    key: "onMouseUpdate",\n    value: function onMouseUpdate(e) {\n      if (this.FOOTER_ACTIVE) {\n        this.mouseNorm.x = e.pageX / this.width * 2 - 1;\n        this.mouseNorm.y = e.pageY / this.height * 2 - 1;\n\n        if (this.dots) {\n          this.dots.onMouseUpdate(this.mouseNorm.x, this.mouseNorm.y);\n        }\n      }\n    } //---------------------------\n    // PRIVADAS:\n\n  }, {\n    key: "_update_dimensions",\n    value: function _update_dimensions() {\n      // console.log("(Home2App_m._update_dimensions)!", this.renderer)\n      this.width = this.$container.offsetWidth;\n      this.height = this.$container.offsetHeight;\n      this.responsiveScale = this.width / this.REF_RESOLUTION.width;\n      this.cameraDistance = this.REF_CAMERA_DISTANCE * this.responsiveScale; //--\n\n      if (this.renderer) {\n        this.renderer.setSize(this.width, this.height); //--\n\n        this.camera.aspect = this.width / this.height;\n        this.cameraDistance = this.camera.position.z;\n        this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI);\n        this.camera.updateProjectionMatrix();\n      } //--\n\n    }\n  }, {\n    key: "_init_scrollListeners",\n    value: function _init_scrollListeners() {\n      var _this2 = this;\n\n      var binded_render = function binded_render() {\n        _this2._render();\n      };\n\n      var binded_eval_scroll = function binded_eval_scroll() {\n        _this2._eval_inertia_scroll(_this2.$inner_trigger.progress);\n\n        _this2._eval_footer_scroll(_this2.$footer_trigger.progress);\n      };\n\n      this._binded_render = binded_render;\n      this._binded_eval_scroll = binded_eval_scroll;\n      var that = this;\n      this.$inner_trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: \'top-=10 top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            //console.log("MAIN ACTIVE")\n            that.MAIN_ACTIVE = true;\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_render);\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_eval_scroll);\n          } else {\n            that.MAIN_ACTIVE = false; //console.log("MAIN NOT ACTIVE")\n            //gsap.ticker.remove(binded_render) // El fondo webgl persiste siempre. No lo desactivamos nunca.\n\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_eval_scroll); // El fondo webgl persiste siempre. No lo desactivamos nunca.\n          }\n        }\n      });\n      this.$footer_trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$footer,\n        start: \'top bottom\',\n        end: \'bottom+=10 bottom\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            //console.log("FOOTER ACTIVE")\n            that.FOOTER_ACTIVE = true;\n          } else {\n            //console.log("FOOTER NOT ACTIVE")\n            that.FOOTER_ACTIVE = false;\n          }\n        }\n      });\n    }\n  }, {\n    key: "_eval_inertia_scroll",\n    value: function _eval_inertia_scroll(progress) {\n      var innerData = this.$inner.getBoundingClientRect();\n      var newInnerY = innerData.y;\n      this.settings.scroll_progress = progress;\n      this.settings.scroll_delta = newInnerY - this.settings.scroll_lastInnerY;\n      this.settings.scroll_lastInnerY = newInnerY;\n      this.settings.scroll_limitedDelta = webgl_WebGLUtils.clamp(this.settings.scroll_delta, -20, 20); // Limita los valores a -20 -> +20\n\n      this.settings.scroll_normalizedDelta = (this.settings.scroll_limitedDelta / 20).toFixed(3); // Pasa el delta a -1 -> +1\n\n      this.settings.scroll_factordDelta = Math.abs(this.settings.scroll_normalizedDelta) + 0; // Valores absolutos de 0 -> 1\n\n      this.settings.scroll_direction = 1;\n\n      if (this.settings.scroll_normalizedDelta < 0) {\n        this.settings.scroll_direction = -1;\n      }\n    }\n  }, {\n    key: "_eval_footer_scroll",\n    value: function _eval_footer_scroll(progress) {\n      //console.log("(Home4App._eval_footer_scroll): "+progress)\n      this.settings.scroll_footer_progress = progress;\n      this.settings.morphingProgress = progress;\n    }\n  }, {\n    key: "_resize",\n    value: function _resize() {\n      //console.log("(Home4Dots.resize)!")\n      //this.width = this.$container.offsetWidth;\n      //this.height = this.$container.offsetHeight;\n      //this.responsiveScale = this.width/this.refResolution;\n      //this.renderer.setSize( this.width, this.height );\n      //this.camera.aspect = this.width/this.height\n      //this.cameraDistance = this.camera.position.z\n      //this.camera.fov = 2*Math.atan((this.height/2)/(this.cameraDistance)) * (180/Math.PI) \n      ////--\n      //this.camera.updateProjectionMatrix();\n      //--\n      this._update_dimensions(); //--\n\n\n      if (this.dots) {\n        this.dots.resize(this.width, this.height);\n      }\n    }\n  }, {\n    key: "_render",\n    value: function _render() {\n      //console.log("(Home4App._render): "+this.settings.scroll_progress+":"+this.settings.scroll_footer_progress)\n      if (this.height != this.$container.offsetHeight || this.width != this.$container.offsetWidth) {\n        this._resize();\n      }\n\n      if (this.dots) {\n        this.dots.render();\n      }\n\n      this.renderer.render(this.scene, this.camera); //requestAnimationFrame(this.render.bind(this))\n    }\n  }]);\n\n  return Home4App;\n}();\n\n/* harmony default export */ const home4_Home4App = (Home4App);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1_m/Home1Scroll_m.js\nfunction Home1Scroll_m_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home1Scroll_m_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home1Scroll_m_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home1Scroll_m_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home1Scroll_m_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar Home1Scroll_m = /*#__PURE__*/function () {\n  function Home1Scroll_m(obj) {\n    Home1Scroll_m_classCallCheck(this, Home1Scroll_m);\n\n    // console.log("(Home1Scroll_m.CONSTRUCTORA): ", obj)\n    this.app = obj.app;\n    this.$inner = obj.$inner; //--\n\n    this.lastInnerY = 0; // Ultima posición del elemento de referencia\n\n    this.delta = 0; // Incremento de pixels del scroll\n\n    this.limitedDelta = 0; // Limita los valores a -20 -> +20\n\n    this.normalizedDelta = 0; // Pasa el delta a -1 -> +1\n\n    this.factordDelta = 1; // Valores absolutos de 0 -> 1\n\n    this.direction = 1; // Direccion del delta. 1 si está parado\n    //--\n\n    this.triggers = {}; //--\n\n    this.progress = {};\n    this.progress.$inner = 0; //--\n\n    this._init_$inner();\n  } //------------\n  // PUBLICAS:\n\n\n  Home1Scroll_m_createClass(Home1Scroll_m, [{\n    key: "kill",\n    value: function kill() {\n      this.triggers.$inner.kill();\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_render);\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_eval_scroll);\n    } //------------\n    // PRIVADAS\n\n  }, {\n    key: "_init_$inner",\n    value: function _init_$inner() {\n      var _this = this;\n\n      var binded_render = function binded_render() {\n        _this.app.render();\n      };\n\n      var binded_eval_scroll = function binded_eval_scroll() {\n        _this._update_$inner(_this.triggers.$inner.progress);\n      };\n\n      this._binded_render = binded_render;\n      this._binded_eval_scroll = binded_eval_scroll; //--\n\n      this.triggers.$inner = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: \'top bottom\',\n        end: \'bottom bottom\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_render);\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_eval_scroll);\n          } else {\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_render);\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_eval_scroll);\n          }\n        }\n      });\n    }\n  }, {\n    key: "_update_$inner",\n    value: function _update_$inner(progress) {\n      this.progress.$inner = progress; //--\n\n      var innerData = this.$inner.getBoundingClientRect();\n      var newInnerY = innerData.y;\n      this.delta = newInnerY - this.lastInnerY;\n      this.lastInnerY = newInnerY;\n      this.limitedDelta = webgl_WebGLUtils.clamp(this.delta, -20, 20); // Limita los valores a -20 -> +20\n\n      this.normalizedDelta = (this.limitedDelta / 20).toFixed(3); // Pasa el delta a -1 -> +1\n\n      this.factordDelta = Math.abs(this.normalizedDelta) + 0; // Valores absolutos de 0 -> 1\n\n      this.direction = 1;\n\n      if (this.normalizedDelta < 0) {\n        this.scroll_direction = -1;\n      }\n    }\n  }]);\n\n  return Home1Scroll_m;\n}();\n\n/* harmony default export */ const home1_m_Home1Scroll_m = (Home1Scroll_m);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1_m/shaders/home1_dots_vertex_m.glsl\n/* harmony default export */ const home1_dots_vertex_m = ("#define GLSLIFY 1\\nattribute vec3 a_randomness;\\nattribute vec3 a_geo1_position;\\nattribute vec3 a_geo1_color;\\nattribute float a_geo1_anguloRad;\\nattribute float a_geo1_orbital;\\nattribute float a_geo1_pos_orbita;\\nattribute float a_geo1_incr_anguloRad;\\nattribute float a_geo1_incr;\\nattribute float a_geo1_dir;\\nattribute float a_geo1_radio;\\n\\nuniform float uCamaraDistance;\\nuniform float uTime;\\nuniform float uOpenProgress;\\nuniform float uResponsiveScale;\\n\\nuniform float uScrollDelta;\\nuniform float uRotation1;\\nuniform float uRotation2;\\nuniform float uRotation3;\\n//uniform float uScale;\\n\\nvarying vec3 v_color;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\n\\n#define PI 3.1415926538\\n//#define PI 3.1415926535897932384626433832795\\n\\nvec3 get_pos1(float anguloRad){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(anguloRad)*a_geo1_radio;\\n    float y = sin(anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_openScale(){\\n    return mix(1., 8., uOpenProgress);\\n}\\n\\nvec3 get_openFx( vec3 pos){\\n    //float openScale = mix(1., 8., uOpenProgress);\\n    vec3 posFx = pos*get_openScale();\\n    return posFx;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\nfloat get_pulseStrengthNorm( float direction){\\n    float dotAguleNorm = a_geo1_anguloRad/(2.*PI); // Pasamos el angulo del punto que está en radianes a un valor de 0 a 1.\\n\\n    float modSpeed = mix(1., 2.5, 13./a_geo1_orbital)*direction;\\n    float radialSpeed = uTime*0.02*modSpeed; // Modificamos uTime para determinar la velocidad radial.\\n\\n    float pulseAngleRad = radialSpeed*(4.*PI);\\n\\n    // El valor de pulseAngleRad debe estar entre 0 y 2PI (inicio y fin de una circunferencia).\\n    // Como depende de uTime el valor saldrá de ese rango pronto por lo que tomaremos el resto (modulo),\\n    // de dividir pulseAngleRad por 2PI.\\n    if(pulseAngleRad > 2.*PI){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n    if(pulseAngleRad < 0.){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n\\n    float pulseAngleNorm = pulseAngleRad/(2.*PI); // Normalizamos el valor (de 0 a 1)\\n\\n    float distAngleNorm = abs(pulseAngleNorm-dotAguleNorm); // Calculamos la distancia radial del pulso al punto\\n\\n    // Apañamos la distancia de tal forma que no le afecte el punto de discontinuidad OPI = 2PI\\n    if(distAngleNorm > 0.5){ \\n        distAngleNorm = 0.5-(distAngleNorm-0.5);\\n    }\\n\\n    // La maxima distancia es de medio circulo y en terminos normalizados es 0.5\\n    // Creamos una variable que normalice ese valor entre 0 y 1.\\n    float pulseStrengthNorm  = distAngleNorm*2.; \\n\\n    float pico = 0.92;\\n    pico = mix(pico*0.99, pico*1.01, a_geo1_orbital/13.);\\n\\n    // Nos interesa solo el pico, la zona que va entre 0.95 y 1.\\n    // Toodo lo que haya por debajo de 0.95 lo pasamos a 0.95\\n    // y le restamos ese mismo 0.95 para quedarnos con el pico de 0.05 eol cual amplificamos x20 para normalizarlo (de 0 a 1).\\n    pulseStrengthNorm = (clamp(pulseStrengthNorm, pico, 1.)-pico)*10.;\\n    //--\\n    return pulseStrengthNorm;\\n}\\n\\nvoid main() {\\n\\n    //float direction = 1.;\\n    //if(abs(a_geo1_orbital - 13.) < 0.5){ // 13 es el orbital del medio\\n    //    direction = -1.;\\n    //}\\n\\n    //float longPeriod = sin(uTime);\\n    // longPeriod = clamp(longPeriod, 0., 1.);\\n    // longPeriod = 1.;\\n\\n    float pulseStrengthNorm1 = get_pulseStrengthNorm(1.5);\\n    float pulseStrengthNorm2 = get_pulseStrengthNorm(-1.);\\n\\n    \\n\\n    // Determinamos el tamaño del punto teniendo un minimo de 5 y amplificando el maximo para que visualmente sea bonito\\n    //float size = 5.+(pulseStrengthNorm*15.*longPeriod);\\n    float size = 3.;\\n    size += (pulseStrengthNorm1*5.);\\n    size += (pulseStrengthNorm2*5.);\\n    size *= uResponsiveScale;\\n    size *= get_openScale();\\n\\n    float anguloRad_time = 0.;\\n    if(abs(a_geo1_orbital-10.) < 0.5){ // Detecta el orbital 6\\n        anguloRad_time = a_geo1_anguloRad+uRotation1;\\n    }else if(abs(a_geo1_orbital-14.) < 0.5){ // Detecta el orbital 11\\n        anguloRad_time = a_geo1_anguloRad+uRotation2;\\n    }else if(abs(a_geo1_orbital-18.) < 0.5){ // Detecta el orbital 13\\n        anguloRad_time = a_geo1_anguloRad+uRotation3;\\n    }\\n    \\n\\n    //float rotationSpeed = (a_geo1_orbital/13.);\\n    //float rotationSpeed = (13./a_geo1_orbital);\\n    //rotationSpeed *= -u_scroll_factordDelta;\\n    //float anguloRad_time = a_geo1_anguloRad+(rotationSpeed*0.5)+(direction*uTime*0.2);\\n    vec3 pos1 = get_pos1(anguloRad_time);\\n    pos1 = get_openFx(pos1);\\n    pos1 = pos1 *uResponsiveScale;\\n    //pos1 = pos1 * (1.+(u_scroll_factordDelta*0.2));\\n    //vec3 pos2 = pos1*1.0;\\n    //pos1= mix(pos1, pos2, pulseStrengthNorm);\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    gl_Position = projectionMatrix * mvPosition; //<--------------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    //--------------------------------------\\n    // VARYINGS:\\n    v_color = a_geo1_color; \\n    v_pulseStrengthNorm1 = pulseStrengthNorm1; \\n    v_pulseStrengthNorm2 = pulseStrengthNorm2; \\n\\n}\\n\\n/*\\nvec3 get_pos1(){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(a_geo1_anguloRad)*a_geo1_radio;\\n    float y = sin(a_geo1_anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\n\\n\\nvoid main() {\\n\\n    vec3 pos1 = get_pos1();\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    float dist = distance(get_x(a_geo1_anguloRad, a_geo1_radio), get_cosTime(uTime*0.005*a_geo1_radio, a_geo1_radio));\\n    float size = 2.+abs(((0.001*a_geo1_radio)-dist)*0.02);\\n\\n    gl_Position = projectionMatrix * mvPosition; //<------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    v_color = a_geo1_color; \\n\\n}\\n\\n*//*\\nvec3 get_pos1(){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(a_geo1_anguloRad)*a_geo1_radio;\\n    float y = sin(a_geo1_anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\n\\n\\nvoid main() {\\n\\n    vec3 pos1 = get_pos1();\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    float dist = distance(get_x(a_geo1_anguloRad, a_geo1_radio), get_cosTime(uTime*0.005*a_geo1_radio, a_geo1_radio));\\n    float size = 2.+abs(((0.001*a_geo1_radio)-dist)*0.02);\\n\\n    gl_Position = projectionMatrix * mvPosition; //<------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    v_color = a_geo1_color; \\n\\n}\\n\\n*//*\\nvec3 get_pos1(){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(a_geo1_anguloRad)*a_geo1_radio;\\n    float y = sin(a_geo1_anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\n\\n\\nvoid main() {\\n\\n    vec3 pos1 = get_pos1();\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    float dist = distance(get_x(a_geo1_anguloRad, a_geo1_radio), get_cosTime(uTime*0.005*a_geo1_radio, a_geo1_radio));\\n    float size = 2.+abs(((0.001*a_geo1_radio)-dist)*0.02);\\n\\n    gl_Position = projectionMatrix * mvPosition; //<------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    v_color = a_geo1_color; \\n\\n}\\n\\n*//*\\nvec3 get_pos1(){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(a_geo1_anguloRad)*a_geo1_radio;\\n    float y = sin(a_geo1_anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\n\\n\\nvoid main() {\\n\\n    vec3 pos1 = get_pos1();\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    float dist = distance(get_x(a_geo1_anguloRad, a_geo1_radio), get_cosTime(uTime*0.005*a_geo1_radio, a_geo1_radio));\\n    float size = 2.+abs(((0.001*a_geo1_radio)-dist)*0.02);\\n\\n    gl_Position = projectionMatrix * mvPosition; //<------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    v_color = a_geo1_color; \\n\\n}\\n\\n*/");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1_m/shaders/home1_dots_fragment_m.glsl\n/* harmony default export */ const home1_dots_fragment_m = ("#define GLSLIFY 1\\nvarying vec3 v_color;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\nfloat circulizar(float radio){\\n    // radio es un valor entre 0 y 1. 0 es 0 de radio y 1 es el maximo del radio dentro de\\n    radio = 1.0-(0.5*radio);\\n    float result = distance(gl_PointCoord, vec2(0.5, 0.5));\\n    result = 1. -result;\\n    result = pow(result, 1.);\\n    result = step(radio, result);\\n    return result;\\n}\\n\\nvoid main() {\\n    vec3 white = vec3(1., 1., 1.);\\n    float pulse = v_pulseStrengthNorm1+v_pulseStrengthNorm2;\\n    pulse = clamp(pulse, 0., 1.);\\n    vec3 finalColor = v_color;\\n    //finalColor = mix(finalColor, white, pulse*5.);\\n    //finalColor = mix(finalColor, white, 0.);\\n    float alpha = circulizar(1.0);\\n\\n    gl_FragColor = vec4(finalColor, alpha*0.8);\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1_m/Home1Geometry_m.js\nfunction Home1Geometry_m_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Home1Geometry_m_typeof = function _typeof(obj) { return typeof obj; }; } else { Home1Geometry_m_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Home1Geometry_m_typeof(obj); }\n\nfunction Home1Geometry_m_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home1Geometry_m_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home1Geometry_m_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home1Geometry_m_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home1Geometry_m_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Home1Geometry_m_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Home1Geometry_m_setPrototypeOf(subClass, superClass); }\n\nfunction Home1Geometry_m_setPrototypeOf(o, p) { Home1Geometry_m_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Home1Geometry_m_setPrototypeOf(o, p); }\n\nfunction Home1Geometry_m_createSuper(Derived) { var hasNativeReflectConstruct = Home1Geometry_m_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Home1Geometry_m_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Home1Geometry_m_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Home1Geometry_m_possibleConstructorReturn(this, result); }; }\n\nfunction Home1Geometry_m_possibleConstructorReturn(self, call) { if (call && (Home1Geometry_m_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Home1Geometry_m_assertThisInitialized(self); }\n\nfunction Home1Geometry_m_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Home1Geometry_m_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Home1Geometry_m_getPrototypeOf(o) { Home1Geometry_m_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Home1Geometry_m_getPrototypeOf(o); }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar Home1Geometry_m_EventEmitter = __webpack_require__(7187);\n\nvar Home1Geometry_m_Home1Geometry = /*#__PURE__*/function (_EventEmitter) {\n  Home1Geometry_m_inherits(Home1Geometry, _EventEmitter);\n\n  var _super = Home1Geometry_m_createSuper(Home1Geometry);\n\n  function Home1Geometry(obj) {\n    var _this;\n\n    Home1Geometry_m_classCallCheck(this, Home1Geometry);\n\n    //console.log("(Home1Geometry.CONSTRUCTORA)!")\n    _this = _super.call(this); //--\n\n    _this.factor = obj.factor; //6\n\n    _this.incr_radio = obj.incr_radio; //25\n\n    _this.numOrbits = obj.numOrbits; //37\n\n    _this.array_triangular = obj.array_triangular;\n    _this.array_dotPos = obj.array_dotPos;\n    _this.numDots = obj.numDots; //--\n\n    _this.arrayColores_RGB = [];\n    _this.arrayColores_RGB_01 = [];\n    _this.colorPos = 0;\n\n    _this._init_colors(); //--\n\n\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_color: new Float32Array(_this.numDots * 3),\n      a_orbital: new Float32Array(_this.numDots * 1),\n      a_pos_orbita: new Float32Array(_this.numDots * 1),\n      a_incr_anguloRad: new Float32Array(_this.numDots * 1),\n      a_anguloRad: new Float32Array(_this.numDots * 1),\n      a_radio: new Float32Array(_this.numDots * 1),\n      a_dir: new Float32Array(_this.numDots * 1),\n      a_incr: new Float32Array(_this.numDots * 1),\n      a_x: new Float32Array(_this.numDots * 1),\n      a_y: new Float32Array(_this.numDots * 1),\n      a_z: new Float32Array(_this.numDots * 1)\n    }; //--\n\n    for (var i = 0; i < _this.array_dotPos.length; i++) {\n      var dotPos = _this.array_dotPos[i];\n\n      var dot = _this._get_dot(dotPos);\n\n      var i3 = i * 3;\n      _this.attributes.a_posiciones[i3] = dot.x;\n      _this.attributes.a_posiciones[i3 + 1] = dot.y;\n      _this.attributes.a_posiciones[i3 + 2] = dot.z; //--\n\n      _this.attributes.a_color[i3] = dot.color[0];\n      _this.attributes.a_color[i3 + 1] = dot.color[1];\n      _this.attributes.a_color[i3 + 2] = dot.color[2]; //--\n\n      _this.attributes.a_orbital[i] = dot.orbital;\n      _this.attributes.a_pos_orbita[i] = dot.pos_orbita;\n      _this.attributes.a_incr_anguloRad[i] = dot.incr_anguloRad;\n      _this.attributes.a_anguloRad[i] = dot.anguloRad;\n      _this.attributes.a_radio[i] = dot.radio;\n      _this.attributes.a_dir[i] = dot.dir;\n      _this.attributes.a_incr[i] = dot.incr;\n      _this.attributes.a_x[i] = dot.y;\n      _this.attributes.a_y[i] = dot.y;\n      _this.attributes.a_z[i] = dot.z;\n    } //--\n\n\n    _this.loaded = false;\n    return _this;\n  } //------------------------------------------\n  // PRIVADAS\n\n\n  Home1Geometry_m_createClass(Home1Geometry, [{\n    key: "_get_dot",\n    value: function _get_dot(num) {\n      // Devuelve un objeto con la información de un punto de la geometria "orbital MIOTI"\n      var obj = {\n        num: num,\n        color: this._get_color(),\n        x: 0,\n        y: 0,\n        z: 0,\n        orbital: 0,\n        co_orbitantes: 0,\n        pos_orbita: 0,\n        incr_anguloRad: 0,\n        anguloRad: 0,\n        radio: 0\n      }; //--\n\n      for (var i = 0; i <= this.array_triangular.length; i++) {\n        var limSup = this.array_triangular[i]; //console.log("limSup: "+limSup)\n\n        if (num > limSup) {\n          // console.log("*")\n          obj.orbital = i + 1;\n          obj.co_orbitantes = (i + 1) * this.factor;\n          obj.pos_orbita = num - limSup - 1;\n          obj.incr_anguloRad = 2 * Math.PI / obj.co_orbitantes;\n\n          if (obj.orbital % 2 == 0) {\n            obj.dir = 1;\n            obj.incr = 0;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad;\n          } else {\n            obj.dir = -1;\n            obj.incr = 1;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad + obj.incr_anguloRad / 2;\n          }\n\n          obj.radio = obj.orbital * this.incr_radio; //--\n\n          obj.x = Math.cos(obj.anguloRad) * obj.radio;\n          obj.y = Math.sin(obj.anguloRad) * obj.radio;\n          obj.z = 0;\n        } //break\n\n      }\n\n      return obj;\n    }\n  }, {\n    key: "_get_color",\n    value: function _get_color() {\n      var color_RGB_01 = this.arrayColores_RGB_01[this.colorPos];\n      this.colorPos++;\n\n      if (this.colorPos > this.arrayColores_RGB_01.length - 1) {\n        this.colorPos = 0;\n      }\n\n      return color_RGB_01;\n    }\n  }, {\n    key: "_init_colors",\n    value: function _init_colors() {\n      this.arrayColores_RGB = [];\n      this.arrayColores_RGB.push([255, 87, 131]); // Rosa\n\n      this.arrayColores_RGB.push([89, 2, 2]);\n      this.arrayColores_RGB.push([1, 3, 49]);\n      this.arrayColores_RGB.push([0, 16, 116]);\n      this.arrayColores_RGB.push([14, 133, 255]);\n      this.arrayColores_RGB_01 = [];\n\n      for (var i = 0; i < this.arrayColores_RGB.length; i++) {\n        var color_RGB = this.arrayColores_RGB[i];\n        var color_RGB_01 = [color_RGB[0] / 255, color_RGB[1] / 255, color_RGB[2] / 255];\n        this.arrayColores_RGB_01.push(color_RGB_01);\n      }\n    }\n  }]);\n\n  return Home1Geometry;\n}(Home1Geometry_m_EventEmitter);\n\n/* harmony default export */ const Home1Geometry_m = (Home1Geometry_m_Home1Geometry);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1_m/Home1Dots_m.js\nfunction Home1Dots_m_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home1Dots_m_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home1Dots_m_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home1Dots_m_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home1Dots_m_defineProperties(Constructor, staticProps); return Constructor; }\n\n //import gsap from "gsap"\n\n\n //import vertex_bg from "./shaders/home1_background_vertex.glsl"\n//import fragment_bg from "./shaders/home1_background_fragment.glsl"\n\n\n\n\nvar Home1Dots_m_Home1Dots = /*#__PURE__*/function () {\n  function Home1Dots(obj) {\n    Home1Dots_m_classCallCheck(this, Home1Dots);\n\n    //console.log("(Home1Dots.CONSTRUCTORA)!")\n    //console.log(obj)\n    this.app = obj.app; //--\n\n    this.scene = this.app.scene;\n    this.cameraDistance = this.app.cameraDistance; //--\n\n    this.material = null;\n    this.geometry = null;\n    this.mesh = null;\n    this.created = false;\n    this.clock = new three_module/* Clock */.SUY(); //--\n    //this.eased_scrollDelta_fast = new EasedOutValue(this.app.scrollData.normalizedDelta*0.5, 0.1)\n    //--\n\n    this._setup_settings(); //--\n\n\n    this.orbital_geometry = new Home1Geometry_m(this.settings); //--\n    //this._create()\n  } //------------------------------------\n  // PUBLICAS: \n\n\n  Home1Dots_m_createClass(Home1Dots, [{\n    key: "init",\n    value: function init() {\n      this.eased_scrollDelta_fast = new webgl_EasedOutValue(this.app.scrollData.normalizedDelta * 0.5, 0.1);\n\n      this._create();\n    } //------------------------------------\n\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.created) {\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uCamaraDistance.value = this.app.cameraDistance;\n        this.material.uniforms.uOpenProgress.value = this.settings.openProgress;\n        this.material.uniforms.uResponsiveScale.value = this.app.responsiveScale; //this.material.uniforms.u_scroll_factordDelta.value = this.app.scrollData.factordDelta\n        //this.material.uniforms.u_scroll_direction.value = this.app.scrollData.direction\n\n        this.material.uniforms.uScrollDelta.value = -this.eased_scrollDelta_fast.get(this.app.scrollData.normalizedDelta * 0.5); //--\n\n        var extraSpeed = 1 + Math.abs(this.eased_scrollDelta_fast.get(this.app.scrollData.normalizedDelta * 0.5) * 10);\n        this.settings.rotation1 += this.settings.speedRotation1 * extraSpeed;\n        this.settings.rotation2 += this.settings.speedRotation2 * extraSpeed;\n        this.settings.rotation3 += this.settings.speedRotation3 * extraSpeed;\n        this.material.uniforms.uRotation1.value = this.settings.rotation1;\n        this.material.uniforms.uRotation2.value = -this.settings.rotation2;\n        this.material.uniforms.uRotation3.value = this.settings.rotation3; //console.log(this.material.uniforms.uRotation1.value)\n      }\n    } //------------------------------------\n    // PUBLICAS:\n\n  }, {\n    key: "resize",\n    value: function resize(newWidth, newHeight) {//console.log("(GradientBackground.resize)!")\n    } //------------------------------------\n    // PRIVADAS: \n\n  }, {\n    key: "_setup_settings",\n    value: function _setup_settings() {\n      //console.log("(Home1Dots._setup_settings)!!")\n      var speedBase = 0.002;\n      this.settings = {\n        factor: 6,\n        //incr_radio: 25,\n        incr_radio: 13.2,\n        numOrbits: 19,\n        //arrayOrbits: [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,  17, 18, 19],\n        arrayOrbits: [10, 14, 18],\n        //arrayOrbits: [1, 3, 4, 5],\n        // Ortbit rotation\n        rotation1: 0,\n        speedRotation1: 3 * speedBase,\n        rotation2: 2,\n        speedRotation2: 2 * speedBase,\n        rotation3: 0,\n        speedRotation3: 1 * speedBase\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.array_triangular_dots_x_orbita = this._get_array_triangular_dots_x_orbita(this.settings.array_triangular, this.settings.arrayOrbits);\n      this.settings.array_dotPos = this._get_array_dotPos(this.settings.arrayOrbits, this.settings.array_triangular, this.settings.array_triangular_dots_x_orbita);\n      this.settings.numDots = this.settings.array_dotPos.length;\n      this.settings.openProgress = 0;\n    }\n  }, {\n    key: "_create",\n    value: function _create() {\n      //console.log("(Home1Dots._create)!")\n      //--\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        depthWrite: false,\n        //blending: THREE.AdditiveBlending,\n        vertexColors: true,\n        vertexShader: home1_dots_vertex_m,\n        fragmentShader: home1_dots_fragment_m,\n        transparent: true,\n        uniforms: {\n          uCamaraDistance: {\n            value: this.app.cameraDistance\n          },\n          uTime: {\n            value: 0\n          },\n          //uScale:{value: 1},\n          uOpenProgress: {\n            value: 0\n          },\n          uResponsiveScale: {\n            value: 0\n          },\n          //u_scroll_factordDelta: {value: 1},\n          //u_scroll_direction: {value: 1},\n          uScrollDelta: {\n            value: 0\n          },\n          uRotation1: {\n            value: 0\n          },\n          uRotation2: {\n            value: 0\n          },\n          uRotation3: {\n            value: 0\n          }\n        }\n      }); //--\n      //console.log(this.orbital_geometry.attributes.a_color)\n      //--\n\n      this.geometry = new three_module/* BufferGeometry */.u9r();\n      this.geometry.setAttribute(\'position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_color\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_color, 3));\n      this.geometry.setAttribute(\'a_geo1_orbital\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_orbital, 1));\n      this.geometry.setAttribute(\'a_geo1_pos_orbita\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_pos_orbita, 1));\n      this.geometry.setAttribute(\'a_geo1_incr_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_radio\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_radio, 1));\n      this.geometry.setAttribute(\'a_geo1_dir\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dir, 1));\n      this.geometry.setAttribute(\'a_geo1_incr\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr, 1));\n      this.geometry.setAttribute(\'a_geo1_x\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_x, 1));\n      this.geometry.setAttribute(\'a_geo1_y\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_y, 1));\n      this.geometry.setAttribute(\'a_geo1_z\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_z, 1));\n      this.mesh = new three_module/* Points */.woe(this.geometry, this.material);\n      this.scene.add(this.mesh);\n      this.created = true;\n    }\n  }, {\n    key: "_get_array_dotPos",\n    value: function _get_array_dotPos(_arrayOrbits, _array_triangular, _array_triangular_dots_x_orbita) {\n      var miArray = [];\n\n      for (var i = 0; i < _arrayOrbits.length; i++) {\n        var orbitNum = _arrayOrbits[i];\n        var dots_x_orbit = _array_triangular_dots_x_orbita[i];\n        var dotNum_base = _array_triangular[_arrayOrbits[i] - 1]; // console.log("orbitNum: "+orbitNum)\n        // console.log("dots_x_orbit: "+dots_x_orbit)\n        // console.log("dotNum_base: "+dotNum_base)\n\n        for (var j = 0; j < dots_x_orbit; j++) {\n          miArray.push(dotNum_base + j + 1);\n        }\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_numDots",\n    value: function _get_numDots(_array_triangular_dots_x_orbita) {\n      var numDots = 0;\n\n      for (var i = 0; i <= _array_triangular_dots_x_orbita.length - 1; i++) {\n        numDots += _array_triangular_dots_x_orbita[i];\n      }\n\n      return numDots;\n    }\n  }, {\n    key: "_get_array_triangular_dots_x_orbita",\n    value: function _get_array_triangular_dots_x_orbita(_array_triangular, _arrayOrbits) {\n      // Genera una array basada en la progresión triangular (* factor).\n      // ... donde se indica el numero de dots por orbital\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _arrayOrbits.length - 1; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        var numDots_orbita_actual = _array_triangular[_arrayOrbits[i]];\n        var numDots_orbita_anterior = _array_triangular[_arrayOrbits[i] - 1];\n        var numDots_orbita = numDots_orbita_actual - numDots_orbita_anterior;\n        miArray.push(numDots_orbita);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_array_triangular",\n    value: function _get_array_triangular(_factor, _numObits) {\n      // Genera una array de progresión triangular (* factor).\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _numObits; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        miArray.push(i * (i + 1) / 2 * _factor);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_setup_gui",\n    value: function _setup_gui() {//console.log("(Home1Dots._setup_gui)!")\n      // this.gui = new dat.GUI();\n      // this.gui.width = 400\n      // const folder0 = this.gui.addFolder("Orbit spinning")\n      // folder0.add(this.settings, "progress5", 0, 10, 0.01).name("Progress")\n      // folder0.open()\n    } //---------------------------------------------------------\n    //---------------------------------------------------------\n\n  }]);\n\n  return Home1Dots;\n}();\n\n/* harmony default export */ const Home1Dots_m = (Home1Dots_m_Home1Dots);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home1_m/Home1App_m.js\nfunction Home1App_m_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home1App_m_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home1App_m_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home1App_m_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home1App_m_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n //--\n\n\n\nvar Home1App_m = /*#__PURE__*/function () {\n  function Home1App_m(obj) {\n    Home1App_m_classCallCheck(this, Home1App_m);\n\n    // console.log("(Home1App_m.CONSTRUCTORA)!!", obj) \n    this.hw_renderer = obj.renderer; // Rederer/pagina de HighWay. No confundir con el render/renderer de Three.js\n\n    this.$container = obj.domElement; //--\n\n    this.$inner = document.querySelector(\'.inner\'); //--\n\n    this.REF_RESOLUTION = {\n      width: 480,\n      height: 480\n    };\n    this.REF_CAMERA_DISTANCE = 500; //--\n\n    this.width;\n    this.height;\n    this.responsiveScale;\n    this.cameraDistance; //--\n    //--\n    //this.scrollData = new Home1Scroll_m({\n    //    app:this,\n    //    $inner: this.$inner\n    //})\n    //--\n\n    this._update_dimensions(); //--\n    // Scene\n\n\n    this.scene = new three_module/* Scene */.xsS(); //this.scene.background = new THREE.Color( 0x00ff00 );\n    //--\n    // console.log("this.width: "+this.width)\n    // console.log("this.height: "+this.height)\n    // console.log("this.cameraDistance: "+this.cameraDistance)\n    //--\n    // Camera\n    //PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\n\n    this.camera = new three_module/* PerspectiveCamera */.cPb(30, this.width / this.height, 0.1, 2000);\n    this.camera.position.z = this.cameraDistance;\n    this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //--\n    // Renderer\n    //--\n\n    this.renderer = new three_module/* WebGL1Renderer */.b5g({\n      antialias: true,\n      alpha: true\n    }); //this.renderer.autoClear = false // Vamos a usar 2 scenas (una para el background y otra para los puntos) que implicarán usar 2 acciones de render. Con autoclear false permitimos que la segunda no borre la primera.\n\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1)); //this.renderer.setClearColorHex( 0xff0000, 1 );\n    //--\n\n    this.$container.appendChild(this.renderer.domElement); //--\n\n    this.dots = new Home1Dots_m({\n      app: this\n    }); //--\n    //this._createcube(this.scene)\n\n    this._resize(); //this._render();\n\n  } //---------------------------\n  // PUBLICAS:\n\n\n  Home1App_m_createClass(Home1App_m, [{\n    key: "init",\n    value: function init() {\n      this.$inner = document.querySelector(\'.inner\');\n      this.scrollData = new home1_m_Home1Scroll_m({\n        app: this,\n        $inner: this.$inner\n      }); //--\n\n      this.dots.init(); //--\n\n      this._render();\n    }\n  }, {\n    key: "kill",\n    value: function kill() {\n      this.scrollData.kill();\n      this.scrollData = null;\n      this.dots = null;\n    } //---------------------------\n\n  }, {\n    key: "render",\n    value: function render() {\n      //console.log("(Home1App_m.render)!")\n      this._render(); // Lo llama scrollData\n\n    }\n  }, {\n    key: "resize",\n    value: function resize() {\n      //console.log("(Home1App_m.resize)!")\n      this._resize();\n    } //---------------------------\n    // PRIVADAS:\n\n  }, {\n    key: "_update_dimensions",\n    value: function _update_dimensions() {\n      // console.log("(Home1App_m._update_dimensions)!", this.renderer)\n      this.width = this.$container.offsetWidth;\n      this.height = this.$container.offsetHeight;\n      this.responsiveScale = this.width / this.REF_RESOLUTION.width;\n      this.cameraDistance = this.REF_CAMERA_DISTANCE * this.responsiveScale; //--\n\n      if (this.renderer) {\n        this.renderer.setSize(this.width, this.height); //--\n\n        this.camera.aspect = this.width / this.height;\n        this.cameraDistance = this.camera.position.z;\n        this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI);\n        this.camera.updateProjectionMatrix();\n      } //--\n\n    }\n  }, {\n    key: "_resize",\n    value: function _resize() {\n      //console.log("(Home1App_m._resize)!!")\n      this._update_dimensions(); //--\n\n\n      if (this.dots) {//this.dots.resize(this.width, this.height);\n      }\n    }\n  }, {\n    key: "_render",\n    value: function _render() {\n      //console.log("(Home1App_m._render)!")\n      if (this.height != this.$container.offsetHeight || this.width != this.$container.offsetWidth) {\n        this._resize();\n      }\n\n      if (this.dots) {\n        this.dots.render();\n      }\n\n      this.renderer.render(this.scene, this.camera);\n    }\n  }, {\n    key: "_createcube",\n    value: function _createcube(_scene) {\n      var geometry = new three_module/* BoxGeometry */.DvJ(100, 100, 100);\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        color: 0xff0000\n      });\n      var cube = new three_module/* Mesh */.Kj0(geometry, material); //cube.position.set(100, 100, 100)\n\n      _scene.add(cube);\n    }\n  }]);\n\n  return Home1App_m;\n}();\n\n/* harmony default export */ const home1_m_Home1App_m = (Home1App_m);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2_m/Home2Scroll_m.js\nfunction Home2Scroll_m_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home2Scroll_m_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home2Scroll_m_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home2Scroll_m_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home2Scroll_m_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar Home2Scroll_m = /*#__PURE__*/function () {\n  function Home2Scroll_m(obj) {\n    Home2Scroll_m_classCallCheck(this, Home2Scroll_m);\n\n    // console.log("(Home2Scroll_m.CONSTRUCTORA): ", obj)\n    this.app = obj.app;\n    this.$inner = obj.$inner; //--\n\n    this.lastInnerY = 0; // Ultima posición del elemento de referencia\n\n    this.delta = 0; // Incremento de pixels del scroll\n\n    this.limitedDelta = 0; // Limita los valores a -20 -> +20\n\n    this.normalizedDelta = 0; // Pasa el delta a -1 -> +1\n\n    this.factordDelta = 1; // Valores absolutos de 0 -> 1\n\n    this.direction = 1; // Direccion del delta. 1 si está parado\n    //--\n\n    this.triggers = {}; //--\n\n    this.progress = {};\n    this.progress.$inner = 0; //--\n\n    this._init_$inner();\n  } //------------\n  // PUBLICAS:\n\n\n  Home2Scroll_m_createClass(Home2Scroll_m, [{\n    key: "kill",\n    value: function kill() {\n      this.triggers.$inner.kill();\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_render);\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_eval_scroll);\n    } //------------\n    // PRIVADAS\n\n  }, {\n    key: "_init_$inner",\n    value: function _init_$inner() {\n      var _this = this;\n\n      var binded_render = function binded_render() {\n        _this.app.render();\n      };\n\n      var binded_eval_scroll = function binded_eval_scroll() {\n        _this._update_$inner(_this.triggers.$inner.progress);\n      };\n\n      this._binded_render = binded_render;\n      this._binded_eval_scroll = binded_eval_scroll; //--\n\n      this.triggers.$inner = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: \'top bottom\',\n        end: \'bottom bottom\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_render);\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_eval_scroll);\n          } else {\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_render);\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_eval_scroll);\n          }\n        }\n      });\n    }\n  }, {\n    key: "_update_$inner",\n    value: function _update_$inner(progress) {\n      this.progress.$inner = progress; //--\n\n      var innerData = this.$inner.getBoundingClientRect();\n      var newInnerY = innerData.y;\n      this.delta = newInnerY - this.lastInnerY;\n      this.lastInnerY = newInnerY;\n      this.limitedDelta = webgl_WebGLUtils.clamp(this.delta, -20, 20); // Limita los valores a -20 -> +20\n\n      this.normalizedDelta = (this.limitedDelta / 20).toFixed(3); // Pasa el delta a -1 -> +1\n\n      this.factordDelta = Math.abs(this.normalizedDelta) + 0; // Valores absolutos de 0 -> 1\n\n      this.direction = 1;\n\n      if (this.normalizedDelta < 0) {\n        this.scroll_direction = -1;\n      }\n    }\n  }]);\n\n  return Home2Scroll_m;\n}();\n\n/* harmony default export */ const home2_m_Home2Scroll_m = (Home2Scroll_m);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2_m/shaders/home2_dots_vertex_m.glsl\n/* harmony default export */ const home2_dots_vertex_m = ("#define GLSLIFY 1\\nattribute vec3 a_randomness;\\nattribute vec3 a_geo1_position;\\nattribute vec3 a_geo1_color;\\nattribute float a_geo1_anguloRad;\\nattribute float a_geo1_orbital;\\nattribute float a_geo1_pos_orbita;\\nattribute float a_geo1_incr_anguloRad;\\nattribute float a_geo1_incr;\\nattribute float a_geo1_dir;\\nattribute float a_geo1_radio;\\n\\nuniform float uCamaraDistance;\\nuniform float uTime;\\nuniform float uOpenProgress;\\nuniform float uResponsiveScale;\\n\\nuniform float uScrollDelta;\\nuniform float uRotation1;\\nuniform float uRotation2;\\nuniform float uRotation3;\\nuniform vec3 uDotColor;\\n//uniform float uScale;\\n\\nvarying vec3 v_color;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\n\\n#define PI 3.1415926538\\n//#define PI 3.1415926535897932384626433832795\\n\\nvec3 get_pos1(float anguloRad){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(anguloRad)*a_geo1_radio;\\n    float y = sin(anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_openScale(){\\n    return mix(1., 8., uOpenProgress);\\n}\\n\\nvec3 get_openFx( vec3 pos){\\n    //float openScale = mix(1., 8., uOpenProgress);\\n    vec3 posFx = pos*get_openScale();\\n    return posFx;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\nfloat get_pulseStrengthNorm( float direction){\\n    float dotAguleNorm = a_geo1_anguloRad/(2.*PI); // Pasamos el angulo del punto que está en radianes a un valor de 0 a 1.\\n\\n    float modSpeed = mix(1., 2.5, 13./a_geo1_orbital)*direction;\\n    float radialSpeed = uTime*0.02*modSpeed; // Modificamos uTime para determinar la velocidad radial.\\n\\n    float pulseAngleRad = radialSpeed*(4.*PI);\\n\\n    // El valor de pulseAngleRad debe estar entre 0 y 2PI (inicio y fin de una circunferencia).\\n    // Como depende de uTime el valor saldrá de ese rango pronto por lo que tomaremos el resto (modulo),\\n    // de dividir pulseAngleRad por 2PI.\\n    if(pulseAngleRad > 2.*PI){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n    if(pulseAngleRad < 0.){\\n        pulseAngleRad = mod(pulseAngleRad, (2.*PI));\\n    }\\n\\n    float pulseAngleNorm = pulseAngleRad/(2.*PI); // Normalizamos el valor (de 0 a 1)\\n\\n    float distAngleNorm = abs(pulseAngleNorm-dotAguleNorm); // Calculamos la distancia radial del pulso al punto\\n\\n    // Apañamos la distancia de tal forma que no le afecte el punto de discontinuidad OPI = 2PI\\n    if(distAngleNorm > 0.5){ \\n        distAngleNorm = 0.5-(distAngleNorm-0.5);\\n    }\\n\\n    // La maxima distancia es de medio circulo y en terminos normalizados es 0.5\\n    // Creamos una variable que normalice ese valor entre 0 y 1.\\n    float pulseStrengthNorm  = distAngleNorm*2.; \\n\\n    float pico = 0.92;\\n    pico = mix(pico*0.99, pico*1.01, a_geo1_orbital/13.);\\n\\n    // Nos interesa solo el pico, la zona que va entre 0.95 y 1.\\n    // Toodo lo que haya por debajo de 0.95 lo pasamos a 0.95\\n    // y le restamos ese mismo 0.95 para quedarnos con el pico de 0.05 eol cual amplificamos x20 para normalizarlo (de 0 a 1).\\n    pulseStrengthNorm = (clamp(pulseStrengthNorm, pico, 1.)-pico)*10.;\\n    //--\\n    return pulseStrengthNorm;\\n}\\n\\nvoid main() {\\n\\n    //float direction = 1.;\\n    //if(abs(a_geo1_orbital - 13.) < 0.5){ // 13 es el orbital del medio\\n    //    direction = -1.;\\n    //}\\n\\n    //float longPeriod = sin(uTime);\\n    // longPeriod = clamp(longPeriod, 0., 1.);\\n    // longPeriod = 1.;\\n\\n    float pulseStrengthNorm1 = get_pulseStrengthNorm(1.5);\\n    float pulseStrengthNorm2 = get_pulseStrengthNorm(-1.);\\n\\n    \\n\\n    // Determinamos el tamaño del punto teniendo un minimo de 5 y amplificando el maximo para que visualmente sea bonito\\n    //float size = 5.+(pulseStrengthNorm*15.*longPeriod);\\n    float size = 3.;\\n    //size += (pulseStrengthNorm1*5.);\\n    //size += (pulseStrengthNorm2*5.);\\n    size *= uResponsiveScale;\\n    size *= get_openScale();\\n\\n    float anguloRad_time = 0.;\\n    if(abs(a_geo1_orbital-8.) < 0.5){ // Detecta el orbital 6\\n        anguloRad_time = a_geo1_anguloRad+uRotation1;\\n    }else if(abs(a_geo1_orbital-13.) < 0.5){ // Detecta el orbital 11\\n        anguloRad_time = a_geo1_anguloRad+uRotation2;\\n    }else if(abs(a_geo1_orbital-18.) < 0.5){ // Detecta el orbital 13\\n        anguloRad_time = a_geo1_anguloRad+uRotation3;\\n    }\\n    \\n\\n    //float rotationSpeed = (a_geo1_orbital/13.);\\n    //float rotationSpeed = (13./a_geo1_orbital);\\n    //rotationSpeed *= -u_scroll_factordDelta;\\n    //float anguloRad_time = a_geo1_anguloRad+(rotationSpeed*0.5)+(direction*uTime*0.2);\\n    vec3 pos1 = get_pos1(anguloRad_time);\\n    pos1 = get_openFx(pos1);\\n    pos1 = pos1 *uResponsiveScale;\\n    //pos1 = pos1 * (1.+(u_scroll_factordDelta*0.2));\\n    //vec3 pos2 = pos1*1.0;\\n    //pos1= mix(pos1, pos2, pulseStrengthNorm);\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    gl_Position = projectionMatrix * mvPosition; //<--------------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    //--------------------------------------\\n    // VARYINGS:\\n    v_color = a_geo1_color; \\n   //v_pulseStrengthNorm1 = pulseStrengthNorm1; \\n    //v_pulseStrengthNorm2 = pulseStrengthNorm2; \\n\\n}\\n\\n/*\\nvec3 get_pos1(){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(a_geo1_anguloRad)*a_geo1_radio;\\n    float y = sin(a_geo1_anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\n\\n\\nvoid main() {\\n\\n    vec3 pos1 = get_pos1();\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    float dist = distance(get_x(a_geo1_anguloRad, a_geo1_radio), get_cosTime(uTime*0.005*a_geo1_radio, a_geo1_radio));\\n    float size = 2.+abs(((0.001*a_geo1_radio)-dist)*0.02);\\n\\n    gl_Position = projectionMatrix * mvPosition; //<------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    v_color = a_geo1_color; \\n\\n}\\n\\n*//*\\nvec3 get_pos1(){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(a_geo1_anguloRad)*a_geo1_radio;\\n    float y = sin(a_geo1_anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\n\\n\\nvoid main() {\\n\\n    vec3 pos1 = get_pos1();\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    float dist = distance(get_x(a_geo1_anguloRad, a_geo1_radio), get_cosTime(uTime*0.005*a_geo1_radio, a_geo1_radio));\\n    float size = 2.+abs(((0.001*a_geo1_radio)-dist)*0.02);\\n\\n    gl_Position = projectionMatrix * mvPosition; //<------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    v_color = a_geo1_color; \\n\\n}\\n\\n*//*\\nvec3 get_pos1(){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(a_geo1_anguloRad)*a_geo1_radio;\\n    float y = sin(a_geo1_anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\n\\n\\nvoid main() {\\n\\n    vec3 pos1 = get_pos1();\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    float dist = distance(get_x(a_geo1_anguloRad, a_geo1_radio), get_cosTime(uTime*0.005*a_geo1_radio, a_geo1_radio));\\n    float size = 2.+abs(((0.001*a_geo1_radio)-dist)*0.02);\\n\\n    gl_Position = projectionMatrix * mvPosition; //<------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    v_color = a_geo1_color; \\n\\n}\\n\\n*//*\\nvec3 get_pos1(){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(a_geo1_anguloRad)*a_geo1_radio;\\n    float y = sin(a_geo1_anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nfloat get_cosTime(float time, float radius){\\n    //\\n    //float value = sin(uTime)*2.*PI;\\n    float value = sin(time)*radius;\\n    return value;\\n}\\n\\nfloat get_x(float angleRad, float radius){\\n    return cos(angleRad)*a_geo1_radio;\\n}\\n\\n\\n\\nvoid main() {\\n\\n    vec3 pos1 = get_pos1();\\n    vec4 mvPosition = modelViewMatrix * vec4( pos1, 1.0 ); \\n\\n    float dist = distance(get_x(a_geo1_anguloRad, a_geo1_radio), get_cosTime(uTime*0.005*a_geo1_radio, a_geo1_radio));\\n    float size = 2.+abs(((0.001*a_geo1_radio)-dist)*0.02);\\n\\n    gl_Position = projectionMatrix * mvPosition; //<------------------------------------------\\n    gl_PointSize = size*(uCamaraDistance/-mvPosition.z); //<------------------------------------------\\n\\n    v_color = a_geo1_color; \\n\\n}\\n\\n*/");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2_m/shaders/home2_dots_fragment_m.glsl\n/* harmony default export */ const home2_dots_fragment_m = ("#define GLSLIFY 1\\nuniform vec3 uDotColor;\\n\\nvarying vec3 v_color;\\nvarying float v_pulseStrengthNorm1;\\nvarying float v_pulseStrengthNorm2;\\n\\nfloat circulizar(float radio){\\n    // radio es un valor entre 0 y 1. 0 es 0 de radio y 1 es el maximo del radio dentro de\\n    radio = 1.0-(0.5*radio);\\n    float result = distance(gl_PointCoord, vec2(0.5, 0.5));\\n    result = 1. -result;\\n    result = pow(result, 1.);\\n    result = step(radio, result);\\n    return result;\\n}\\n\\nvoid main() {\\n    float alpha = circulizar(1.0);\\n    gl_FragColor = vec4(uDotColor, alpha);\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2_m/Home2Geometry_m.js\nfunction Home2Geometry_m_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Home2Geometry_m_typeof = function _typeof(obj) { return typeof obj; }; } else { Home2Geometry_m_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Home2Geometry_m_typeof(obj); }\n\nfunction Home2Geometry_m_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home2Geometry_m_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home2Geometry_m_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home2Geometry_m_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home2Geometry_m_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Home2Geometry_m_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Home2Geometry_m_setPrototypeOf(subClass, superClass); }\n\nfunction Home2Geometry_m_setPrototypeOf(o, p) { Home2Geometry_m_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Home2Geometry_m_setPrototypeOf(o, p); }\n\nfunction Home2Geometry_m_createSuper(Derived) { var hasNativeReflectConstruct = Home2Geometry_m_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Home2Geometry_m_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Home2Geometry_m_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Home2Geometry_m_possibleConstructorReturn(this, result); }; }\n\nfunction Home2Geometry_m_possibleConstructorReturn(self, call) { if (call && (Home2Geometry_m_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Home2Geometry_m_assertThisInitialized(self); }\n\nfunction Home2Geometry_m_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Home2Geometry_m_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Home2Geometry_m_getPrototypeOf(o) { Home2Geometry_m_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Home2Geometry_m_getPrototypeOf(o); }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar Home2Geometry_m_EventEmitter = __webpack_require__(7187);\n\nvar Home2Geometry_m = /*#__PURE__*/function (_EventEmitter) {\n  Home2Geometry_m_inherits(Home2Geometry_m, _EventEmitter);\n\n  var _super = Home2Geometry_m_createSuper(Home2Geometry_m);\n\n  function Home2Geometry_m(obj) {\n    var _this;\n\n    Home2Geometry_m_classCallCheck(this, Home2Geometry_m);\n\n    //console.log("(Home2Geometry_m.CONSTRUCTORA)!")\n    _this = _super.call(this); //--\n\n    _this.factor = obj.factor; //6\n\n    _this.incr_radio = obj.incr_radio; //25\n\n    _this.numOrbits = obj.numOrbits; //37\n\n    _this.array_triangular = obj.array_triangular;\n    _this.array_dotPos = obj.array_dotPos;\n    _this.numDots = obj.numDots; //--\n\n    _this.arrayColores_RGB = [];\n    _this.arrayColores_RGB_01 = [];\n    _this.colorPos = 0;\n\n    _this._init_colors(); //--\n\n\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_color: new Float32Array(_this.numDots * 3),\n      a_orbital: new Float32Array(_this.numDots * 1),\n      a_pos_orbita: new Float32Array(_this.numDots * 1),\n      a_incr_anguloRad: new Float32Array(_this.numDots * 1),\n      a_anguloRad: new Float32Array(_this.numDots * 1),\n      a_radio: new Float32Array(_this.numDots * 1),\n      a_dir: new Float32Array(_this.numDots * 1),\n      a_incr: new Float32Array(_this.numDots * 1),\n      a_x: new Float32Array(_this.numDots * 1),\n      a_y: new Float32Array(_this.numDots * 1),\n      a_z: new Float32Array(_this.numDots * 1)\n    }; //--\n\n    for (var i = 0; i < _this.array_dotPos.length; i++) {\n      var dotPos = _this.array_dotPos[i];\n\n      var dot = _this._get_dot(dotPos);\n\n      var i3 = i * 3;\n      _this.attributes.a_posiciones[i3] = dot.x;\n      _this.attributes.a_posiciones[i3 + 1] = dot.y;\n      _this.attributes.a_posiciones[i3 + 2] = dot.z; //--\n\n      _this.attributes.a_color[i3] = dot.color[0];\n      _this.attributes.a_color[i3 + 1] = dot.color[1];\n      _this.attributes.a_color[i3 + 2] = dot.color[2]; //--\n\n      _this.attributes.a_orbital[i] = dot.orbital;\n      _this.attributes.a_pos_orbita[i] = dot.pos_orbita;\n      _this.attributes.a_incr_anguloRad[i] = dot.incr_anguloRad;\n      _this.attributes.a_anguloRad[i] = dot.anguloRad;\n      _this.attributes.a_radio[i] = dot.radio;\n      _this.attributes.a_dir[i] = dot.dir;\n      _this.attributes.a_incr[i] = dot.incr;\n      _this.attributes.a_x[i] = dot.y;\n      _this.attributes.a_y[i] = dot.y;\n      _this.attributes.a_z[i] = dot.z;\n    } //--\n\n\n    _this.loaded = false;\n    return _this;\n  } //------------------------------------------\n  // PRIVADAS\n\n\n  Home2Geometry_m_createClass(Home2Geometry_m, [{\n    key: "_get_dot",\n    value: function _get_dot(num) {\n      // Devuelve un objeto con la información de un punto de la geometria "orbital MIOTI"\n      var obj = {\n        num: num,\n        color: this._get_color(),\n        x: 0,\n        y: 0,\n        z: 0,\n        orbital: 0,\n        co_orbitantes: 0,\n        pos_orbita: 0,\n        incr_anguloRad: 0,\n        anguloRad: 0,\n        radio: 0\n      }; //--\n\n      for (var i = 0; i <= this.array_triangular.length; i++) {\n        var limSup = this.array_triangular[i]; //console.log("limSup: "+limSup)\n\n        if (num > limSup) {\n          // console.log("*")\n          obj.orbital = i + 1;\n          obj.co_orbitantes = (i + 1) * this.factor;\n          obj.pos_orbita = num - limSup - 1;\n          obj.incr_anguloRad = 2 * Math.PI / obj.co_orbitantes;\n\n          if (obj.orbital % 2 == 0) {\n            obj.dir = 1;\n            obj.incr = 0;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad;\n          } else {\n            obj.dir = -1;\n            obj.incr = 1;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad + obj.incr_anguloRad / 2;\n          }\n\n          obj.radio = obj.orbital * this.incr_radio; //--\n\n          obj.x = Math.cos(obj.anguloRad) * obj.radio;\n          obj.y = Math.sin(obj.anguloRad) * obj.radio;\n          obj.z = 0;\n        } //break\n\n      }\n\n      return obj;\n    }\n  }, {\n    key: "_get_color",\n    value: function _get_color() {\n      var color_RGB_01 = this.arrayColores_RGB_01[this.colorPos];\n      this.colorPos++;\n\n      if (this.colorPos > this.arrayColores_RGB_01.length - 1) {\n        this.colorPos = 0;\n      }\n\n      return color_RGB_01;\n    }\n  }, {\n    key: "_init_colors",\n    value: function _init_colors() {\n      this.arrayColores_RGB = [];\n      this.arrayColores_RGB.push([255, 87, 131]); // Rosa\n\n      this.arrayColores_RGB.push([89, 2, 2]);\n      this.arrayColores_RGB.push([1, 3, 49]);\n      this.arrayColores_RGB.push([0, 16, 116]);\n      this.arrayColores_RGB.push([14, 133, 255]);\n      this.arrayColores_RGB_01 = [];\n\n      for (var i = 0; i < this.arrayColores_RGB.length; i++) {\n        var color_RGB = this.arrayColores_RGB[i];\n        var color_RGB_01 = [color_RGB[0] / 255, color_RGB[1] / 255, color_RGB[2] / 255];\n        this.arrayColores_RGB_01.push(color_RGB_01);\n      }\n    }\n  }]);\n\n  return Home2Geometry_m;\n}(Home2Geometry_m_EventEmitter);\n\n/* harmony default export */ const home2_m_Home2Geometry_m = (Home2Geometry_m);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2_m/Home2Dots_m.js\nfunction Home2Dots_m_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home2Dots_m_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home2Dots_m_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home2Dots_m_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home2Dots_m_defineProperties(Constructor, staticProps); return Constructor; }\n\n //import gsap from "gsap"\n\n\n\n\n\n\nvar Home2Dots_m_Home1Dots = /*#__PURE__*/function () {\n  function Home1Dots(obj) {\n    Home2Dots_m_classCallCheck(this, Home1Dots);\n\n    //console.log("(Home1Dots.CONSTRUCTORA)!")\n    //console.log(obj)\n    this.app = obj.app; //--\n\n    this.scene = this.app.scene;\n    this.cameraDistance = this.app.cameraDistance; //--\n\n    this.material = null;\n    this.geometry = null;\n    this.mesh = null;\n    this.created = false;\n    this.clock = new three_module/* Clock */.SUY(); //--\n    //this.eased_scrollDelta_fast = new EasedOutValue(this.app.scrollData.normalizedDelta*0.5, 0.1)\n    //--\n\n    this._setup_settings(); //--\n\n\n    this.orbital_geometry = new home2_m_Home2Geometry_m(this.settings); //--\n    //this._create()\n  } //------------------------------------\n  // PUBLICAS: \n\n\n  Home2Dots_m_createClass(Home1Dots, [{\n    key: "init",\n    value: function init() {\n      this.eased_scrollDelta_fast = new webgl_EasedOutValue(this.app.scrollData.normalizedDelta * 0.5, 0.1);\n\n      this._create();\n    } //------------------------------------\n\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.created) {\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uCamaraDistance.value = this.app.cameraDistance;\n        this.material.uniforms.uOpenProgress.value = this.settings.openProgress;\n        this.material.uniforms.uResponsiveScale.value = this.app.responsiveScale; //this.material.uniforms.u_scroll_factordDelta.value = this.app.scrollData.factordDelta\n        //this.material.uniforms.u_scroll_direction.value = this.app.scrollData.direction\n\n        this.material.uniforms.uScrollDelta.value = -this.eased_scrollDelta_fast.get(this.app.scrollData.normalizedDelta * 0.5); //--\n\n        var extraSpeed = 1 + Math.abs(this.eased_scrollDelta_fast.get(this.app.scrollData.normalizedDelta * 0.5) * 10);\n        this.settings.rotation1 += this.settings.speedRotation1 * extraSpeed;\n        this.settings.rotation2 += this.settings.speedRotation2 * extraSpeed;\n        this.settings.rotation3 += this.settings.speedRotation3 * extraSpeed;\n        this.material.uniforms.uRotation1.value = this.settings.rotation1;\n        this.material.uniforms.uRotation2.value = -this.settings.rotation2;\n        this.material.uniforms.uRotation3.value = this.settings.rotation3; //console.log(this.material.uniforms.uRotation1.value)\n      }\n    } //------------------------------------\n    // PUBLICAS:\n\n  }, {\n    key: "resize",\n    value: function resize(newWidth, newHeight) {//console.log("(GradientBackground.resize)!")\n    } //------------------------------------\n    // PRIVADAS: \n\n  }, {\n    key: "_setup_settings",\n    value: function _setup_settings() {\n      //console.log("(Home1Dots._setup_settings)!!")\n      var speedBase = 0.002;\n      this.settings = {\n        factor: 6,\n        //incr_radio: 25,\n        //incr_radio: 13.2,\n        incr_radio: this.app.incr_radio,\n        numOrbits: 19,\n        //arrayOrbits: [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,  17, 18, 19],\n        arrayOrbits: [8, 13, 18],\n        //arrayOrbits: [1, 3, 4, 5],\n        // Ortbit rotation\n        rotation1: 0,\n        speedRotation1: 3 * speedBase,\n        rotation2: 2,\n        speedRotation2: 2 * speedBase,\n        rotation3: 0,\n        speedRotation3: 1 * speedBase\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.array_triangular_dots_x_orbita = this._get_array_triangular_dots_x_orbita(this.settings.array_triangular, this.settings.arrayOrbits);\n      this.settings.array_dotPos = this._get_array_dotPos(this.settings.arrayOrbits, this.settings.array_triangular, this.settings.array_triangular_dots_x_orbita);\n      this.settings.numDots = this.settings.array_dotPos.length;\n      this.settings.openProgress = 0;\n    }\n  }, {\n    key: "_create",\n    value: function _create() {\n      //console.log("(Home1Dots._create)!")\n      //--\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        depthWrite: false,\n        //blending: THREE.AdditiveBlending,\n        vertexColors: true,\n        vertexShader: home2_dots_vertex_m,\n        fragmentShader: home2_dots_fragment_m,\n        transparent: true,\n        uniforms: {\n          uCamaraDistance: {\n            value: this.app.cameraDistance\n          },\n          uDotColor: {\n            value: this.app.dotColor\n          },\n          uTime: {\n            value: 0\n          },\n          //uScale:{value: 1},\n          uOpenProgress: {\n            value: 0\n          },\n          uResponsiveScale: {\n            value: 0\n          },\n          //u_scroll_factordDelta: {value: 1},\n          //u_scroll_direction: {value: 1},\n          uScrollDelta: {\n            value: 0\n          },\n          uRotation1: {\n            value: 0\n          },\n          uRotation2: {\n            value: 0\n          },\n          uRotation3: {\n            value: 0\n          }\n        }\n      }); //--\n      //console.log(this.orbital_geometry.attributes.a_color)\n      //--\n\n      this.geometry = new three_module/* BufferGeometry */.u9r();\n      this.geometry.setAttribute(\'position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_color\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_color, 3));\n      this.geometry.setAttribute(\'a_geo1_orbital\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_orbital, 1));\n      this.geometry.setAttribute(\'a_geo1_pos_orbita\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_pos_orbita, 1));\n      this.geometry.setAttribute(\'a_geo1_incr_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_radio\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_radio, 1));\n      this.geometry.setAttribute(\'a_geo1_dir\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dir, 1));\n      this.geometry.setAttribute(\'a_geo1_incr\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr, 1));\n      this.geometry.setAttribute(\'a_geo1_x\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_x, 1));\n      this.geometry.setAttribute(\'a_geo1_y\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_y, 1));\n      this.geometry.setAttribute(\'a_geo1_z\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_z, 1));\n      this.mesh = new three_module/* Points */.woe(this.geometry, this.material);\n      this.scene.add(this.mesh);\n      this.created = true;\n    }\n  }, {\n    key: "_get_array_dotPos",\n    value: function _get_array_dotPos(_arrayOrbits, _array_triangular, _array_triangular_dots_x_orbita) {\n      var miArray = [];\n\n      for (var i = 0; i < _arrayOrbits.length; i++) {\n        var orbitNum = _arrayOrbits[i];\n        var dots_x_orbit = _array_triangular_dots_x_orbita[i];\n        var dotNum_base = _array_triangular[_arrayOrbits[i] - 1]; // console.log("orbitNum: "+orbitNum)\n        // console.log("dots_x_orbit: "+dots_x_orbit)\n        // console.log("dotNum_base: "+dotNum_base)\n\n        for (var j = 0; j < dots_x_orbit; j++) {\n          miArray.push(dotNum_base + j + 1);\n        }\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_numDots",\n    value: function _get_numDots(_array_triangular_dots_x_orbita) {\n      var numDots = 0;\n\n      for (var i = 0; i <= _array_triangular_dots_x_orbita.length - 1; i++) {\n        numDots += _array_triangular_dots_x_orbita[i];\n      }\n\n      return numDots;\n    }\n  }, {\n    key: "_get_array_triangular_dots_x_orbita",\n    value: function _get_array_triangular_dots_x_orbita(_array_triangular, _arrayOrbits) {\n      // Genera una array basada en la progresión triangular (* factor).\n      // ... donde se indica el numero de dots por orbital\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _arrayOrbits.length - 1; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        var numDots_orbita_actual = _array_triangular[_arrayOrbits[i]];\n        var numDots_orbita_anterior = _array_triangular[_arrayOrbits[i] - 1];\n        var numDots_orbita = numDots_orbita_actual - numDots_orbita_anterior;\n        miArray.push(numDots_orbita);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_array_triangular",\n    value: function _get_array_triangular(_factor, _numObits) {\n      // Genera una array de progresión triangular (* factor).\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _numObits; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        miArray.push(i * (i + 1) / 2 * _factor);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_setup_gui",\n    value: function _setup_gui() {//console.log("(Home1Dots._setup_gui)!")\n      // this.gui = new dat.GUI();\n      // this.gui.width = 400\n      // const folder0 = this.gui.addFolder("Orbit spinning")\n      // folder0.add(this.settings, "progress5", 0, 10, 0.01).name("Progress")\n      // folder0.open()\n    } //---------------------------------------------------------\n    //---------------------------------------------------------\n\n  }]);\n\n  return Home1Dots;\n}();\n\n/* harmony default export */ const Home2Dots_m = (Home2Dots_m_Home1Dots);\n;// CONCATENATED MODULE: ./app/src/js/webgl/home2_m/Home2App_m.js\nfunction Home2App_m_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Home2App_m_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Home2App_m_createClass(Constructor, protoProps, staticProps) { if (protoProps) Home2App_m_defineProperties(Constructor.prototype, protoProps); if (staticProps) Home2App_m_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n //--\n\n\n\nvar Home2App_m = /*#__PURE__*/function () {\n  function Home2App_m(obj) {\n    Home2App_m_classCallCheck(this, Home2App_m);\n\n    //console.log("(Home2App_m.CONSTRUCTORA)!!", obj) \n    this.hw_renderer = obj.renderer; // Rederer/pagina de HighWay. No confundir con el render/renderer de Three.js\n\n    this.$container = obj.domElement;\n    this.dotColor = new three_module/* Color */.Ilk(obj.dotColor);\n    this.incr_radio = obj.incr_radio; //--\n\n    this.$inner = document.querySelector(\'.inner\'); //--\n\n    this.REF_RESOLUTION = {\n      width: 480,\n      height: 480\n    };\n    this.REF_CAMERA_DISTANCE = 500; //--\n\n    this.width;\n    this.height;\n    this.responsiveScale;\n    this.cameraDistance; //--\n    //--\n    //this.scrollData = new Home2Scroll_m({\n    //    app:this,\n    //    $inner: this.$inner\n    //})\n    //--\n\n    this._update_dimensions(); //--\n    // Scene\n\n\n    this.scene = new three_module/* Scene */.xsS(); //this.scene.background = new THREE.Color( 0x00ff00 );\n    //--\n    // console.log("this.width: "+this.width)\n    // console.log("this.height: "+this.height)\n    // console.log("this.cameraDistance: "+this.cameraDistance)\n    //--\n    // Camera\n    //PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\n\n    this.camera = new three_module/* PerspectiveCamera */.cPb(30, this.width / this.height, 0.1, 2000);\n    this.camera.position.z = this.cameraDistance;\n    this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //--\n    // Renderer\n    //--\n\n    this.renderer = new three_module/* WebGL1Renderer */.b5g({\n      antialias: true,\n      alpha: true\n    }); //this.renderer.autoClear = false // Vamos a usar 2 scenas (una para el background y otra para los puntos) que implicarán usar 2 acciones de render. Con autoclear false permitimos que la segunda no borre la primera.\n\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1)); //this.renderer.setClearColorHex( 0xff0000, 1 );\n    //--\n\n    this.$container.appendChild(this.renderer.domElement); //--\n\n    this.dots = new Home2Dots_m({\n      app: this\n    }); //--\n    //this._createcube(this.scene)\n\n    this._resize(); //this._render();\n\n  } //---------------------------\n  // PUBLICAS:\n\n\n  Home2App_m_createClass(Home2App_m, [{\n    key: "init",\n    value: function init() {\n      this.$inner = document.querySelector(\'.inner\');\n      this.scrollData = new home2_m_Home2Scroll_m({\n        app: this,\n        $inner: this.$inner\n      }); //--\n\n      this.dots.init(); //--\n\n      this._render();\n    }\n  }, {\n    key: "kill",\n    value: function kill() {\n      this.scrollData.kill();\n      this.scrollData = null;\n      this.dots = null;\n    } //---------------------------\n\n  }, {\n    key: "render",\n    value: function render() {\n      //console.log("(Home2App_m.render)!")\n      this._render(); // Lo llama scrollData\n\n    }\n  }, {\n    key: "resize",\n    value: function resize() {\n      //console.log("(Home2App_m.resize)!")\n      this._resize();\n    } //---------------------------\n    // PRIVADAS:\n\n  }, {\n    key: "_update_dimensions",\n    value: function _update_dimensions() {\n      // console.log("(Home2App_m._update_dimensions)!", this.renderer)\n      this.width = this.$container.offsetWidth;\n      this.height = this.$container.offsetHeight;\n      this.responsiveScale = this.width / this.REF_RESOLUTION.width;\n      this.cameraDistance = this.REF_CAMERA_DISTANCE * this.responsiveScale; //--\n\n      if (this.renderer) {\n        this.renderer.setSize(this.width, this.height); //--\n\n        this.camera.aspect = this.width / this.height;\n        this.cameraDistance = this.camera.position.z;\n        this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI);\n        this.camera.updateProjectionMatrix();\n      } //--\n\n    }\n  }, {\n    key: "_resize",\n    value: function _resize() {\n      //console.log("(Home2App_m._resize)!!")\n      this._update_dimensions(); //--\n\n\n      if (this.dots) {//this.dots.resize(this.width, this.height);\n      }\n    }\n  }, {\n    key: "_render",\n    value: function _render() {\n      //console.log("(Home2App_m._render)!")\n      if (this.height != this.$container.offsetHeight || this.width != this.$container.offsetWidth) {\n        this._resize();\n      }\n\n      if (this.dots) {\n        this.dots.render();\n      }\n\n      this.renderer.render(this.scene, this.camera);\n    }\n  }, {\n    key: "_createcube",\n    value: function _createcube(_scene) {\n      var geometry = new three_module/* BoxGeometry */.DvJ(100, 100, 100);\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        color: 0xff0000\n      });\n      var cube = new three_module/* Mesh */.Kj0(geometry, material); //cube.position.set(100, 100, 100)\n\n      _scene.add(cube);\n    }\n  }]);\n\n  return Home2App_m;\n}();\n\n/* harmony default export */ const home2_m_Home2App_m = (Home2App_m);\n// EXTERNAL MODULE: ./node_modules/gsap/Draggable.js + 1 modules\nvar Draggable = __webpack_require__(2354);\n;// CONCATENATED MODULE: ./app/src/js/utils/VelocityTracker.js\nfunction VelocityTracker_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction VelocityTracker_createClass(Constructor, protoProps, staticProps) { if (protoProps) VelocityTracker_defineProperties(Constructor.prototype, protoProps); if (staticProps) VelocityTracker_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction VelocityTracker_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n/*!\n * VelocityTracker: 3.6.1\n * https://greensock.com\n *\n * Copyright 2008-2021, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar VelocityTracker_gsap,\n    VelocityTracker_coreInitted,\n    VelocityTracker_toArray,\n    _getUnit,\n    _first,\n    _ticker,\n    _time1,\n    _time2,\n    _getCache,\n    _getGSAP = function _getGSAP() {\n  return VelocityTracker_gsap || typeof window !== "undefined" && (VelocityTracker_gsap = window.gsap);\n},\n    _lookup = {},\n    _round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _getID = function _getID(target) {\n  return _getCache(target).id;\n},\n    _getByTarget = function _getByTarget(target) {\n  return _lookup[_getID(typeof target === "string" ? VelocityTracker_toArray(target)[0] : target)];\n},\n    _onTick = function _onTick(time) {\n  var pt = _first,\n      val; //if the frame rate is too high, we won\'t be able to track the velocity as well, so only update the values about 20 times per second\n\n  if (time - _time1 >= 0.05) {\n    _time2 = _time1;\n    _time1 = time;\n\n    while (pt) {\n      val = pt.g(pt.t, pt.p);\n\n      if (val !== pt.v1 || time - pt.t1 > 0.2) {\n        //use a threshold of 0.2 seconds for zeroing-out velocity. If we only use 0.05 and things update slightly slower, like some Android devices dispatch "touchmove" events sluggishly so 2 or 3 ticks of the gsap.ticker may elapse inbetween, thus it may appear like the object is not moving but it actually is but it\'s not updating as frequently. A threshold of 0.2 seconds seems to be a good balance. We want to update things frequently (0.05 seconds) when they\'re moving so that we can respond to fast motions accurately, but we want to be more resistant to go back to a zero velocity.\n        pt.v2 = pt.v1;\n        pt.v1 = val;\n        pt.t2 = pt.t1;\n        pt.t1 = time;\n      }\n\n      pt = pt._next;\n    }\n  }\n},\n    _types = {\n  deg: 360,\n  rad: Math.PI * 2\n},\n    VelocityTracker_initCore = function _initCore() {\n  VelocityTracker_gsap = _getGSAP();\n\n  if (VelocityTracker_gsap) {\n    VelocityTracker_toArray = VelocityTracker_gsap.utils.toArray;\n    _getUnit = VelocityTracker_gsap.utils.getUnit;\n    _getCache = VelocityTracker_gsap.core.getCache;\n    _ticker = VelocityTracker_gsap.ticker;\n    VelocityTracker_coreInitted = 1;\n  }\n};\n\nvar PropTracker = function PropTracker(target, property, type, next) {\n  VelocityTracker_classCallCheck(this, PropTracker);\n\n  this.t = target;\n  this.p = property;\n  this.g = target._gsap.get;\n  this.rCap = _types[type || _getUnit(this.g(target, property))]; //rotational cap (for degrees, "deg", it\'s 360 and for radians, "rad", it\'s Math.PI * 2)\n\n  this.v1 = this.v2 = 0;\n  this.t1 = this.t2 = _ticker.time;\n\n  if (next) {\n    this._next = next;\n    next._prev = this;\n  }\n};\n\nvar VelocityTracker = /*#__PURE__*/function () {\n  function VelocityTracker(target, property) {\n    VelocityTracker_classCallCheck(this, VelocityTracker);\n\n    if (!VelocityTracker_coreInitted) {\n      VelocityTracker_initCore();\n    }\n\n    this.target = VelocityTracker_toArray(target)[0];\n    _lookup[_getID(this.target)] = this;\n    this._props = {};\n    property && this.add(property);\n  }\n\n  VelocityTracker_createClass(VelocityTracker, [{\n    key: "get",\n    value: function get(property, skipRecentTick) {\n      var pt = this._props[property] || console.warn("Not tracking " + property + " velocity."),\n          val,\n          dif,\n          rotationCap;\n      val = parseFloat(skipRecentTick ? pt.v1 : pt.g(pt.t, pt.p));\n      dif = val - parseFloat(pt.v2);\n      rotationCap = pt.rCap;\n\n      if (rotationCap) {\n        //rotational values need special interpretation so that if, for example, they go from 179 to -178 degrees it is interpreted as a change of 3 instead of -357.\n        dif = dif % rotationCap;\n\n        if (dif !== dif % (rotationCap / 2)) {\n          dif = dif < 0 ? dif + rotationCap : dif - rotationCap;\n        }\n      }\n\n      return _round(dif / ((skipRecentTick ? pt.t1 : _ticker.time) - pt.t2));\n    }\n  }, {\n    key: "getAll",\n    value: function getAll() {\n      var result = {},\n          props = this._props,\n          p;\n\n      for (p in props) {\n        result[p] = this.get(p);\n      }\n\n      return result;\n    }\n  }, {\n    key: "isTracking",\n    value: function isTracking(property) {\n      return property in this._props;\n    }\n  }, {\n    key: "add",\n    value: function add(property, type) {\n      if (!(property in this._props)) {\n        if (!_first) {\n          _ticker.add(_onTick);\n\n          _time1 = _time2 = _ticker.time;\n        }\n\n        _first = this._props[property] = new PropTracker(this.target, property, type, _first);\n      }\n    }\n  }, {\n    key: "remove",\n    value: function remove(property) {\n      var pt = this._props[property],\n          prev,\n          next;\n\n      if (pt) {\n        prev = pt._prev;\n        next = pt._next;\n\n        if (prev) {\n          prev._next = next;\n        }\n\n        if (next) {\n          next._prev = prev;\n        } else if (_first === pt) {\n          _ticker.remove(_onTick);\n\n          _first = 0;\n        }\n\n        delete this._props[property];\n      }\n    }\n  }, {\n    key: "kill",\n    value: function kill(shallow) {\n      for (var p in this._props) {\n        this.remove(p);\n      }\n\n      if (!shallow) {\n        delete _lookup[_getID(this.target)];\n      }\n    }\n  }], [{\n    key: "register",\n    value: function register(core) {\n      VelocityTracker_gsap = core;\n\n      VelocityTracker_initCore();\n    }\n  }, {\n    key: "track",\n    value: function track(targets, properties, types) {\n      if (!VelocityTracker_coreInitted) {\n        VelocityTracker_initCore();\n      }\n\n      var result = [],\n          targs = VelocityTracker_toArray(targets),\n          a = properties.split(","),\n          t = (types || "").split(","),\n          i = targs.length,\n          tracker,\n          j;\n\n      while (i--) {\n        tracker = _getByTarget(targs[i]) || new VelocityTracker(targs[i]);\n        j = a.length;\n\n        while (j--) {\n          tracker.add(a[j], t[j] || t[0]);\n        }\n\n        result.push(tracker);\n      }\n\n      return result;\n    }\n  }, {\n    key: "untrack",\n    value: function untrack(targets, properties) {\n      var props = (properties || "").split(",");\n\n      VelocityTracker_toArray(targets).forEach(function (target) {\n        var tracker = _getByTarget(target);\n\n        if (tracker) {\n          if (!props.length) {\n            tracker.kill(1);\n          } else {\n            props.forEach(function (p) {\n              return tracker.remove(p);\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: "isTracking",\n    value: function isTracking(target, property) {\n      var tracker = _getByTarget(target);\n\n      return tracker && tracker.isTracking(property);\n    }\n  }, {\n    key: "getVelocity",\n    value: function getVelocity(target, property) {\n      var tracker = _getByTarget(target);\n\n      return !tracker || !tracker.isTracking(property) ? console.warn("Not tracking velocity of " + property) : tracker.get(property);\n    }\n  }]);\n\n  return VelocityTracker;\n}();\nVelocityTracker.getByTarget = _getByTarget;\n_getGSAP() && VelocityTracker_gsap.registerPlugin(VelocityTracker);\n\n;// CONCATENATED MODULE: ./app/src/js/classes/InertiaPlugin.js\nfunction InertiaPlugin_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { InertiaPlugin_typeof = function _typeof(obj) { return typeof obj; }; } else { InertiaPlugin_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return InertiaPlugin_typeof(obj); }\n\n/*!\n * InertiaPlugin 3.6.1\n * https://greensock.com\n *\n * @license Copyright 2008-2021, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\n\n\nvar InertiaPlugin_gsap,\n    InertiaPlugin_coreInitted,\n    _parseEase,\n    InertiaPlugin_toArray,\n    _power3,\n    _config,\n    InertiaPlugin_getUnit,\n    PropTween,\n    InertiaPlugin_getCache,\n    _checkPointRatio,\n    _clamp,\n    _processingVars,\n    _getTracker = VelocityTracker.getByTarget,\n    InertiaPlugin_getGSAP = function _getGSAP() {\n  return InertiaPlugin_gsap || typeof window !== "undefined" && (InertiaPlugin_gsap = window.gsap) && InertiaPlugin_gsap.registerPlugin && InertiaPlugin_gsap;\n},\n    _isString = function _isString(value) {\n  return typeof value === "string";\n},\n    _isNumber = function _isNumber(value) {\n  return typeof value === "number";\n},\n    _isObject = function _isObject(value) {\n  return InertiaPlugin_typeof(value) === "object";\n},\n    _isFunction = function _isFunction(value) {\n  return typeof value === "function";\n},\n    InertiaPlugin_bonusValidated = 1,\n    //<name>InertiaPlugin</name>\nInertiaPlugin_isArray = Array.isArray,\n    _emptyFunc = function _emptyFunc(p) {\n  return p;\n},\n    _bigNum = 1e10,\n    _tinyNum = 1 / _bigNum,\n    _checkPoint = 0.05,\n    InertiaPlugin_round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _extend = function _extend(obj, defaults, exclude) {\n  for (var p in defaults) {\n    if (!(p in obj) && p !== exclude) {\n      obj[p] = defaults[p];\n    }\n  }\n\n  return obj;\n},\n    _deepClone = function _deepClone(obj) {\n  var copy = {},\n      p,\n      v;\n\n  for (p in obj) {\n    copy[p] = _isObject(v = obj[p]) ? _deepClone(v) : v;\n  }\n\n  return copy;\n},\n    _getClosest = function _getClosest(n, values, max, min, radius) {\n  var i = values.length,\n      closest = 0,\n      absDif = _bigNum,\n      val,\n      dif,\n      p,\n      dist;\n\n  if (_isObject(n)) {\n    while (i--) {\n      val = values[i];\n      dif = 0;\n\n      for (p in n) {\n        dist = val[p] - n[p];\n        dif += dist * dist;\n      }\n\n      if (dif < absDif) {\n        closest = i;\n        absDif = dif;\n      }\n    }\n\n    if ((radius || _bigNum) < _bigNum && radius < Math.sqrt(absDif)) {\n      return n;\n    }\n  } else {\n    while (i--) {\n      val = values[i];\n      dif = val - n;\n\n      if (dif < 0) {\n        dif = -dif;\n      }\n\n      if (dif < absDif && val >= min && val <= max) {\n        closest = i;\n        absDif = dif;\n      }\n    }\n  }\n\n  return values[closest];\n},\n    _parseEnd = function _parseEnd(curProp, end, max, min, name, radius) {\n  if (curProp.end === "auto") {\n    return curProp;\n  }\n\n  var endVar = curProp.end,\n      adjustedEnd,\n      p;\n  max = isNaN(max) ? _bigNum : max;\n  min = isNaN(min) ? -_bigNum : min;\n\n  if (_isObject(end)) {\n    //for objects, like {x, y} where they\'re linked and we must pass an object to the function or find the closest value in an array.\n    adjustedEnd = end.calculated ? end : (_isFunction(endVar) ? endVar(end) : _getClosest(end, endVar, max, min, radius)) || end;\n\n    if (!end.calculated) {\n      for (p in adjustedEnd) {\n        end[p] = adjustedEnd[p];\n      }\n\n      end.calculated = true;\n    }\n\n    adjustedEnd = adjustedEnd[name];\n  } else {\n    adjustedEnd = _isFunction(endVar) ? endVar(end) : InertiaPlugin_isArray(endVar) ? _getClosest(end, endVar, max, min, radius) : parseFloat(endVar);\n  }\n\n  if (adjustedEnd > max) {\n    adjustedEnd = max;\n  } else if (adjustedEnd < min) {\n    adjustedEnd = min;\n  }\n\n  return {\n    max: adjustedEnd,\n    min: adjustedEnd,\n    unitFactor: curProp.unitFactor\n  };\n},\n    _getNumOrDefault = function _getNumOrDefault(vars, property, defaultValue) {\n  return isNaN(vars[property]) ? defaultValue : +vars[property];\n},\n    _calculateChange = function _calculateChange(velocity, duration) {\n  return duration * _checkPoint * velocity / _checkPointRatio;\n},\n    _calculateDuration = function _calculateDuration(start, end, velocity) {\n  return Math.abs((end - start) * _checkPointRatio / velocity / _checkPoint);\n},\n    _reservedProps = {\n  resistance: 1,\n  checkpoint: 1,\n  preventOvershoot: 1,\n  linkedProps: 1,\n  radius: 1,\n  duration: 1\n},\n    _processLinkedProps = function _processLinkedProps(target, vars, getVal, resistance) {\n  if (vars.linkedProps) {\n    //when there are linkedProps (typically "x,y" where snapping has to factor in multiple properties, we must first populate an object with all of those end values, then feed it to the function that make any necessary alterations. So the point of this first loop is to simply build an object (like {x:100, y:204.5}) for feeding into that function which we\'ll do later in the "real" loop.\n    var linkedPropNames = vars.linkedProps.split(","),\n        linkedProps = {},\n        i,\n        p,\n        curProp,\n        curVelocity,\n        tracker,\n        curDuration;\n\n    for (i = 0; i < linkedPropNames.length; i++) {\n      p = linkedPropNames[i];\n      curProp = vars[p];\n\n      if (curProp) {\n        if (_isNumber(curProp.velocity)) {\n          curVelocity = curProp.velocity;\n        } else {\n          tracker = tracker || _getTracker(target);\n          curVelocity = tracker && tracker.isTracking(p) ? tracker.get(p) : 0;\n        }\n\n        curDuration = Math.abs(curVelocity / _getNumOrDefault(curProp, "resistance", resistance));\n        linkedProps[p] = parseFloat(getVal(target, p)) + _calculateChange(curVelocity, curDuration);\n      }\n    }\n\n    return linkedProps;\n  }\n},\n    _calculateTweenDuration = function _calculateTweenDuration(target, vars) {\n  var maxDuration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  var minDuration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.2;\n  var overshootTolerance = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var recordEnd = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  _isString(target) && (target = InertiaPlugin_toArray(target)[0]);\n\n  if (!target) {\n    return 0;\n  }\n\n  var duration = 0,\n      clippedDuration = _bigNum,\n      inertiaVars = vars.inertia || vars,\n      getVal = InertiaPlugin_getCache(target).get,\n      resistance = _getNumOrDefault(inertiaVars, "resistance", _config.resistance),\n      p,\n      curProp,\n      curDuration,\n      curVelocity,\n      curVal,\n      end,\n      curClippedDuration,\n      tracker,\n      unitFactor,\n      linkedProps; //when there are linkedProps (typically "x,y" where snapping has to factor in multiple properties, we must first populate an object with all of those end values, then feed it to the function that make any necessary alterations. So the point of this first loop is to simply build an object (like {x:100, y:204.5}) for feeding into that function which we\'ll do later in the "real" loop.\n\n\n  linkedProps = _processLinkedProps(target, inertiaVars, getVal, resistance);\n\n  for (p in inertiaVars) {\n    if (!_reservedProps[p]) {\n      curProp = inertiaVars[p];\n\n      if (!_isObject(curProp)) {\n        tracker = tracker || _getTracker(target);\n\n        if (tracker && tracker.isTracking(p)) {\n          curProp = _isNumber(curProp) ? {\n            velocity: curProp\n          } : {\n            velocity: tracker.get(p)\n          }; //if we\'re tracking this property, we should use the tracking velocity and then use the numeric value that was passed in as the min and max so that it tweens exactly there.\n        } else {\n          curVelocity = +curProp || 0;\n          curDuration = Math.abs(curVelocity / resistance);\n        }\n      }\n\n      if (_isObject(curProp)) {\n        if (_isNumber(curProp.velocity)) {\n          curVelocity = curProp.velocity;\n        } else {\n          tracker = tracker || _getTracker(target);\n          curVelocity = tracker && tracker.isTracking(p) ? tracker.get(p) : 0;\n        }\n\n        curDuration = _clamp(minDuration, maxDuration, Math.abs(curVelocity / _getNumOrDefault(curProp, "resistance", resistance)));\n        curVal = parseFloat(getVal(target, p)) || 0;\n        end = curVal + _calculateChange(curVelocity, curDuration);\n\n        if ("end" in curProp) {\n          curProp = _parseEnd(curProp, linkedProps && p in linkedProps ? linkedProps : end, curProp.max, curProp.min, p, inertiaVars.radius);\n\n          if (recordEnd) {\n            _processingVars === vars && (_processingVars = inertiaVars = _deepClone(vars));\n            inertiaVars[p] = _extend(curProp, inertiaVars[p], "end");\n          }\n        }\n\n        if ("max" in curProp && end > +curProp.max + _tinyNum) {\n          unitFactor = curProp.unitFactor || _config.unitFactors[p] || 1; //some values are measured in special units like radians in which case our thresholds need to be adjusted accordingly.\n          //if the value is already exceeding the max or the velocity is too low, the duration can end up being uncomfortably long but in most situations, users want the snapping to occur relatively quickly (0.75 seconds), so we implement a cap here to make things more intuitive. If the max and min match, it means we\'re animating to a particular value and we don\'t want to shorten the time unless the velocity is really slow. Example: a rotation where the start and natural end value are less than the snapping spot, but the natural end is pretty close to the snap.\n\n          curClippedDuration = curVal > curProp.max && curProp.min !== curProp.max || curVelocity * unitFactor > -15 && curVelocity * unitFactor < 45 ? minDuration + (maxDuration - minDuration) * 0.1 : _calculateDuration(curVal, curProp.max, curVelocity);\n\n          if (curClippedDuration + overshootTolerance < clippedDuration) {\n            clippedDuration = curClippedDuration + overshootTolerance;\n          }\n        } else if ("min" in curProp && end < +curProp.min - _tinyNum) {\n          unitFactor = curProp.unitFactor || _config.unitFactors[p] || 1; //some values are measured in special units like radians in which case our thresholds need to be adjusted accordingly.\n          //if the value is already exceeding the min or if the velocity is too low, the duration can end up being uncomfortably long but in most situations, users want the snapping to occur relatively quickly (0.75 seconds), so we implement a cap here to make things more intuitive.\n\n          curClippedDuration = curVal < curProp.min && curProp.min !== curProp.max || curVelocity * unitFactor > -45 && curVelocity * unitFactor < 15 ? minDuration + (maxDuration - minDuration) * 0.1 : _calculateDuration(curVal, curProp.min, curVelocity);\n\n          if (curClippedDuration + overshootTolerance < clippedDuration) {\n            clippedDuration = curClippedDuration + overshootTolerance;\n          }\n        }\n\n        curClippedDuration > duration && (duration = curClippedDuration);\n      }\n\n      curDuration > duration && (duration = curDuration);\n    }\n  }\n\n  duration > clippedDuration && (duration = clippedDuration);\n  return duration > maxDuration ? maxDuration : duration < minDuration ? minDuration : duration;\n},\n    InertiaPlugin_initCore = function _initCore() {\n  InertiaPlugin_gsap = InertiaPlugin_getGSAP();\n\n  if (InertiaPlugin_gsap) {\n    _parseEase = InertiaPlugin_gsap.parseEase;\n    InertiaPlugin_toArray = InertiaPlugin_gsap.utils.toArray;\n    InertiaPlugin_getUnit = InertiaPlugin_gsap.utils.getUnit;\n    InertiaPlugin_getCache = InertiaPlugin_gsap.core.getCache;\n    _clamp = InertiaPlugin_gsap.utils.clamp;\n    _power3 = _parseEase("power3");\n    _checkPointRatio = _power3(0.05);\n    PropTween = InertiaPlugin_gsap.core.PropTween;\n    InertiaPlugin_gsap.config({\n      resistance: 100,\n      unitFactors: {\n        time: 1000,\n        totalTime: 1000,\n        progress: 1000,\n        totalProgress: 1000\n      }\n    });\n    _config = InertiaPlugin_gsap.config();\n    InertiaPlugin_gsap.registerPlugin(VelocityTracker);\n    InertiaPlugin_coreInitted = 1;\n  }\n};\n\nvar InertiaPlugin = {\n  version: "3.6.1",\n  name: "inertia",\n  register: function register(core) {\n    InertiaPlugin_gsap = core;\n\n    InertiaPlugin_initCore();\n  },\n  init: function init(target, vars, tween, index, targets) {\n    InertiaPlugin_coreInitted || InertiaPlugin_initCore();\n\n    var tracker = _getTracker(target);\n\n    if (vars === "auto") {\n      if (!tracker) {\n        console.warn("No inertia tracking on " + target + ". InertiaPlugin.track(target) first.");\n        return;\n      }\n\n      vars = tracker.getAll();\n    }\n\n    this.target = target;\n    this.tween = tween;\n    _processingVars = vars; // gets swapped inside _calculateTweenDuration() if there\'s a function-based value encountered (to avoid double-calling it)\n\n    var cache = target._gsap,\n        getVal = cache.get,\n        dur = vars.duration,\n        durIsObj = _isObject(dur),\n        preventOvershoot = vars.preventOvershoot || durIsObj && dur.overshoot === 0,\n        resistance = _getNumOrDefault(vars, "resistance", _config.resistance),\n        duration = _isNumber(dur) ? dur : _calculateTweenDuration(target, vars, durIsObj && dur.max || 10, durIsObj && dur.min || 0.2, durIsObj && "overshoot" in dur ? +dur.overshoot : preventOvershoot ? 0 : 1, true),\n        p,\n        curProp,\n        curVal,\n        unit,\n        velocity,\n        change1,\n        end,\n        change2,\n        linkedProps;\n\n    vars = _processingVars;\n    _processingVars = 0; //when there are linkedProps (typically "x,y" where snapping has to factor in multiple properties, we must first populate an object with all of those end values, then feed it to the function that make any necessary alterations. So the point of this first loop is to simply build an object (like {x:100, y:204.5}) for feeding into that function which we\'ll do later in the "real" loop.\n\n    linkedProps = _processLinkedProps(target, vars, getVal, resistance);\n\n    for (p in vars) {\n      if (!_reservedProps[p]) {\n        curProp = vars[p];\n        _isFunction(curProp) && (curProp = curProp(index, target, targets));\n\n        if (_isNumber(curProp)) {\n          velocity = curProp;\n        } else if (_isObject(curProp) && !isNaN(curProp.velocity)) {\n          velocity = +curProp.velocity;\n        } else {\n          if (tracker && tracker.isTracking(p)) {\n            velocity = tracker.get(p);\n          } else {\n            console.warn("ERROR: No velocity was defined for " + target + " property: " + p);\n          }\n        }\n\n        change1 = _calculateChange(velocity, duration);\n        change2 = 0;\n        curVal = getVal(target, p);\n        unit = InertiaPlugin_getUnit(curVal);\n        curVal = parseFloat(curVal);\n\n        if (_isObject(curProp)) {\n          end = curVal + change1;\n\n          if ("end" in curProp) {\n            curProp = _parseEnd(curProp, linkedProps && p in linkedProps ? linkedProps : end, curProp.max, curProp.min, p, vars.radius);\n          }\n\n          if ("max" in curProp && +curProp.max < end) {\n            if (preventOvershoot || curProp.preventOvershoot) {\n              change1 = curProp.max - curVal;\n            } else {\n              change2 = curProp.max - curVal - change1;\n            }\n          } else if ("min" in curProp && +curProp.min > end) {\n            if (preventOvershoot || curProp.preventOvershoot) {\n              change1 = curProp.min - curVal;\n            } else {\n              change2 = curProp.min - curVal - change1;\n            }\n          }\n        }\n\n        this._props.push(p);\n\n        this._pt = new PropTween(this._pt, target, p, curVal, 0, _emptyFunc, 0, cache.set(target, p, this));\n        this._pt.u = unit || 0;\n        this._pt.c1 = change1;\n        this._pt.c2 = change2;\n      }\n    }\n\n    tween.duration(duration);\n    return InertiaPlugin_bonusValidated;\n  },\n  render: function render(ratio, data) {\n    var pt = data._pt;\n    ratio = _power3(data.tween._time / data.tween._dur);\n\n    while (pt) {\n      pt.set(pt.t, pt.p, InertiaPlugin_round(pt.s + pt.c1 * ratio + pt.c2 * ratio * ratio) + pt.u, pt.d, ratio);\n      pt = pt._next;\n    }\n  }\n};\n"track,untrack,isTracking,getVelocity,getByTarget".split(",").forEach(function (name) {\n  return InertiaPlugin[name] = VelocityTracker[name];\n});\nInertiaPlugin_getGSAP() && InertiaPlugin_gsap.registerPlugin(InertiaPlugin);\n\n;// CONCATENATED MODULE: ./app/src/js/classes/superDraggable.js\nfunction superDraggable_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction superDraggable_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction superDraggable_createClass(Constructor, protoProps, staticProps) { if (protoProps) superDraggable_defineProperties(Constructor.prototype, protoProps); if (staticProps) superDraggable_defineProperties(Constructor, staticProps); return Constructor; }\n\n// GSAP Library\n\n\n\nnode_modules_gsap/* gsap.registerPlugin */.p8.registerPlugin(Draggable/* Draggable */._, InertiaPlugin); // App\n\n\n\n // Utilities\n\n\n\nvar superDraggable_noop = function noop() {}; //eslint-disable-line\n\n\nvar superDraggable_default = /*#__PURE__*/function () {\n  function _default(options) {\n    superDraggable_classCallCheck(this, _default);\n\n    // Store\n    this.appStore = appStore; // App references\n    // this.appCore = new appCore();\n    // this.appUi = new appUi();\n    // Hook functions\n\n    this._onStart = options.onStart || superDraggable_noop;\n    this._onRaf = options.onRaf || superDraggable_noop;\n    this._onClick = options.onClick || superDraggable_noop;\n    this._onPress = options.onPress || superDraggable_noop;\n    this._onRelease = options.onRelease || superDraggable_noop;\n    this._onReleaseComplete = options.onReleaseComplete || superDraggable_noop;\n    this._onItemEnter = options.onItemEnter || superDraggable_noop;\n    this._onItemLeave = options.onItemLeave || superDraggable_noop;\n    this._onItemClick = options.onItemClick || superDraggable_noop;\n    this.domEvents = new domEvents_default();\n    this.$el = options.el;\n    this.$slider = this.$el.querySelector(\'.slider\');\n    this.$sliderInner = this.$slider.querySelector(\'.slider__inner\');\n    this.$sliderItems = this.$slider.querySelectorAll(\'.slider__item\');\n    this.$proxy = document.createElement(\'div\');\n    this.options = {\n      init: false,\n      bounds: null,\n      innerBounds: null,\n      snap: typeof options.snap !== \'undefined\' ? options.snap : false,\n      snapTo: typeof options.snapTo !== \'undefined\' ? options.snapTo : \'center\',\n      snapPoints: [],\n      snapping: false,\n      livePosition: {\n        x: 0,\n        y: 0\n      },\n      position: {\n        x: 0,\n        y: 0\n      },\n      dots: options.dots,\n      percent: 0,\n      progress: 0,\n      progressOrigin: 0\n    };\n    this.isDesktop = window.innerWidth >= 1024;\n    this.init();\n  }\n\n  superDraggable_createClass(_default, [{\n    key: "init",\n    value: function init() {\n      var _this = this;\n\n      var isTouchDevice = function isTouchDevice() {\n        return \'ontouchstart\' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n      };\n\n      var _isTouchDevice = isTouchDevice();\n\n      var lerp = function lerp(value1, value2, amount) {\n        amount = amount < 0 ? 0 : amount;\n        amount = amount > 1 ? 1 : amount;\n        return value1 + (value2 - value1) * amount;\n      };\n\n      var rAF = function rAF() {\n        _this.options.percent = _this.draggable[0].x / _this.draggable[0].minX;\n        _this.options.progress = _this.draggable[0].x / (_this.draggable[0].minX - _this.$slider.offsetWidth || 1);\n\n        if (!_isTouchDevice) {\n          _this.options.livePosition.x = lerp(_this.options.livePosition.x, _this.options.position.x, 0.1);\n          node_modules_gsap/* gsap.set */.p8.set(_this.$sliderInner, {\n            x: _this.options.livePosition.x\n          });\n        }\n\n        _this._onRaf(_this.options.percent, _this.options.progress, _this.options.progressOrigin);\n      };\n\n      var rAFTouched = function rAFTouched() {\n        _this.options.percent = _this.draggable[0].x / _this.draggable[0].minX;\n        _this.options.progress = _this.draggable[0].x / (_this.draggable[0].minX - _this.$slider.offsetWidth || 1);\n\n        _this._onRaf(_this.options.percent, _this.options.progress, _this.options.progressOrigin);\n      };\n\n      this.options.bounds = this.$slider.getBoundingClientRect();\n      this.options.innerBounds = this.$sliderInner.getBoundingClientRect();\n      if (Math.round(this.options.innerBounds.width) <= Math.round(this.options.bounds.width)) this.$slider.classList.remove(\'slider--initialized\');else this.$slider.classList.add(\'slider--initialized\');\n\n      if (!_isTouchDevice) {\n        this.draggable = Draggable/* Draggable.create */._.create(this.$proxy, {\n          type: \'x\',\n          trigger: this.$sliderInner,\n          bounds: {\n            maxX: 0,\n            minX: -(this.options.innerBounds.width - this.options.bounds.width)\n          },\n          throwProps: true,\n          edgeResistance: 0.95,\n          dragResistance: 0,\n          snap: this.options.snap ? {\n            x: this.options.snapPoints\n          } : false,\n          onClick: function onClick() {\n            _this._onClick();\n          },\n          onPress: function onPress() {\n            _this._onPress();\n          },\n          onRelease: function onRelease() {\n            _this._onRelease();\n          },\n          onDragStart: function onDragStart() {\n            clearTimeout(_this.killRaf);\n            node_modules_gsap/* gsap.ticker.add */.p8.ticker.add(rAF);\n          },\n          onDrag: function onDrag() {\n            _this.options.position.x = _this.draggable[0].x;\n          },\n          onThrowUpdate: function onThrowUpdate() {\n            _this.options.position.x = _this.draggable[0].x;\n\n            _this.updateDots();\n          },\n          onThrowComplete: function onThrowComplete() {\n            _this._onReleaseComplete();\n\n            _this.killRaf = setTimeout(function () {\n              node_modules_gsap/* gsap.ticker.remove */.p8.ticker.remove(rAF);\n            }, 1000);\n          }\n        });\n      } else {\n        this.draggable = Draggable/* Draggable.create */._.create(this.$sliderInner, {\n          type: \'x\',\n          bounds: {\n            maxX: 0,\n            minX: -(this.options.innerBounds.width - this.options.bounds.width)\n          },\n          throwProps: true,\n          edgeResistance: 0.8,\n          dragResistance: 0,\n          snap: this.options.snap ? {\n            x: this.options.snapPoints\n          } : false,\n          onClick: function onClick() {\n            _this._onClick();\n          },\n          onPress: function onPress() {\n            _this._onPress();\n          },\n          onRelease: function onRelease() {\n            _this._onRelease();\n          },\n          onDrag: function onDrag() {\n            rAFTouched();\n          },\n          onThrowUpdate: function onThrowUpdate() {\n            rAFTouched(); // this.updateDots();\n          },\n          onThrowComplete: function onThrowComplete() {\n            _this._onReleaseComplete();\n          }\n        });\n      }\n\n      this.options.percent = this.draggable[0].x / this.draggable[0].minX;\n      this.options.progressOrigin = -(this.options.bounds.width / (this.draggable[0].minX - this.options.bounds.width));\n\n      for (var i = 0; i < this.$sliderItems.length; i++) {\n        this.domEvents.add(this.$sliderItems[i], \'mouseenter\', function (e, a, el) {\n          _this._onItemEnter(e, a, el);\n        });\n        this.domEvents.add(this.$sliderItems[i], \'mouseleave\', function (e, a, el) {\n          _this._onItemLeave(e, a, el);\n        });\n        this.domEvents.add(this.$sliderItems[i], \'click\', function (e, a, el) {\n          _this._onItemClick(e, a, el);\n        });\n      }\n\n      if (!_isTouchDevice) rAF();else rAFTouched();\n      if (this.options.dots) this.createDots();\n    }\n  }, {\n    key: "createDots",\n    value: function createDots() {\n      this.$sliderDots = this.$el.querySelector(\'.slider__dots\');\n\n      if (this.$sliderDots) {\n        for (var i = 0; i < this.$sliderItems.length; i++) {\n          this.$dot = document.createElement(\'div\');\n          this.$dot.className = \'dots__item\';\n          this.$sliderDots.appendChild(this.$dot);\n        }\n\n        this.$dots = this.$el.querySelectorAll(\'.dots__item\');\n        this.$dots[0].classList.add(\'active\');\n      }\n    }\n  }, {\n    key: "updateDots",\n    value: function updateDots() {\n      if (this.options.snap && this.options.dots && !this.isDesktop) {\n        this.$sliderDots.childNodes.forEach(function (e) {\n          return e.classList.remove(\'active\');\n        });\n        var goal = this.draggable[0].x;\n        var closest = this.options.snapPoints.reduce(function (prev, curr) {\n          return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\n        });\n        var index = this.options.snapPoints.indexOf(closest);\n        this.$dots[index].classList.add(\'active\');\n      }\n    }\n  }, {\n    key: "setBounds",\n    value: function setBounds() {\n      this.options.bounds = this.$slider.getBoundingClientRect();\n      this.options.innerBounds = this.$sliderInner.getBoundingClientRect();\n      this.options.percent = this.draggable[0].x / this.draggable[0].minX;\n      this.options.progressOrigin = -(this.options.bounds.width / (this.draggable[0].minX - this.options.bounds.width));\n      var minX = -(this.options.innerBounds.width - this.options.bounds.width);\n      this.options.position.x = minX * this.options.percent;\n      this.options.livePosition.x = minX * this.options.percent;\n      node_modules_gsap/* gsap.set */.p8.set(this.$proxy, {\n        x: minX * this.options.percent\n      });\n      node_modules_gsap/* gsap.set */.p8.set(this.$sliderInner, {\n        x: minX * this.options.percent\n      });\n    }\n  }, {\n    key: "refresh",\n    value: function refresh() {\n      this.draggable[0].applyBounds({\n        x: 0,\n        minX: -(this.options.innerBounds.width - this.options.bounds.width),\n        maxX: 0\n      });\n      this.draggable[0].update();\n    }\n  }, {\n    key: "setSnapPoints",\n    value: function setSnapPoints() {\n      if (Math.round(this.options.innerBounds.width) <= Math.round(this.options.bounds.width)) this.$slider.classList.remove(\'slider--initialized\');else this.$slider.classList.add(\'slider--initialized\');\n\n      if (this.options.snap) {\n        this.options.snapPoints = [];\n        this.options.snapPoints.push(this.draggable[0].maxX);\n\n        for (var i = 1; i < this.$sliderItems.length - 1; i++) {\n          if (this.options.snapTo === \'center\') this.options.snapPoints.push(-this.$sliderItems[i].offsetLeft + this.options.bounds.width / 2 - this.$sliderItems[i].offsetWidth / 2);else if (this.options.snapTo === \'left\') this.options.snapPoints.push(-this.$sliderItems[i].offsetLeft);else if (this.options.snapTo === \'right\') this.options.snapPoints.push(-this.$sliderItems[i].offsetLeft + this.options.bounds.width - this.$sliderItems[i].offsetWidth);\n        }\n\n        this.options.snapPoints.push(this.draggable[0].minX);\n        this.draggable[0].vars.snap.x = this.options.snapPoints;\n        this.draggable[0].update(true);\n      }\n    }\n  }, {\n    key: "checkStatus",\n    value: function checkStatus() {\n      if (Math.round(this.options.innerBounds.width) <= Math.round(this.options.bounds.width)) {\n        this.draggable[0].disable();\n        node_modules_gsap/* gsap.set */.p8.set(this.$sliderInner, {\n          x: 0\n        });\n      } else {\n        this.draggable[0].enable();\n      }\n    }\n  }, {\n    key: "updateDirections",\n    value: function updateDirections() {// if (this.getDirection(\'velocity\') === \'left\')\n      // {\n      // }\n      // else {\n      // }\n    }\n  }, {\n    key: "resize",\n    value: function resize() {\n      this.setBounds();\n      this.setSnapPoints();\n      this.updateDots();\n      this.checkStatus();\n      this.refresh();\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      this.draggable[0].kill();\n    }\n  }]);\n\n  return _default;\n}();\n\n\n;// CONCATENATED MODULE: ./app/src/js/components/sliderSolutions.js\nfunction sliderSolutions_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction sliderSolutions_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction sliderSolutions_createClass(Constructor, protoProps, staticProps) { if (protoProps) sliderSolutions_defineProperties(Constructor.prototype, protoProps); if (staticProps) sliderSolutions_defineProperties(Constructor, staticProps); return Constructor; }\n\n// GSAP Library\n\n // App\n\n\n\n // Utilities\n\n\n\n\nvar sliderSolutions_EventEmitter = __webpack_require__(7187);\n\nvar sliderSolutions_default = /*#__PURE__*/function () {\n  function _default(options) {\n    sliderSolutions_classCallCheck(this, _default);\n\n    // Store\n    this.appStore = appStore; // App references\n\n    this.appUi = new app_appUi();\n    this.appCore = new app_appCore();\n    this.domEvents = new domEvents_default();\n    this.emitter = new sliderSolutions_EventEmitter();\n    this._slider = {\n      target: options.target,\n      current: 0,\n      total: 0,\n      direction: \'next\',\n      progress: 0,\n      prev: 0,\n      next: 0,\n      dir: 1,\n      navigationProgress1: 0,\n      navigationProgress2: 0,\n      duration: 1.2,\n      delay: typeof options.delay !== \'undefined\' ? options.delay : 4,\n      ease: \'expo.inOut\',\n      animating: true,\n      tlAnimation: null,\n      autoplay: typeof options.autoplay !== \'undefined\' ? options.autoplay : true,\n      autoplaySpeed: typeof options.autoplaySpeed !== \'undefined\' ? options.autoplaySpeed : 4,\n      autoplayProgress: 0,\n      autoplayController: null\n    };\n    this.selectors();\n    this.init();\n    this.events();\n  }\n\n  sliderSolutions_createClass(_default, [{\n    key: "selectors",\n    value: function selectors() {\n      // Selectors\n      this.$slider = this._slider.target;\n      this.$sliderInner = this.$slider.querySelector(\'.slider__inner\');\n      this.$sliderItems = this.$sliderInner.querySelectorAll(\'.slider__item\');\n      this.$sliderNavigation = this.$slider.querySelectorAll(\'.slider__navigation\');\n      this.$sliderNavigationPrev = this.$slider.querySelector(\'.slider__navigation--prev\');\n      this.$sliderNavigationNext = this.$slider.querySelector(\'.slider__navigation--next\');\n    }\n  }, {\n    key: "events",\n    value: function events() {\n      var _this = this;\n\n      this.domEvents.add(this.$sliderNavigationPrev, \'click\', function () {\n        if (_this.appStore.isDesktop) {\n          node_modules_gsap/* gsap.to */.p8.to(_this.$sliderNavigationPrev.children[0], {\n            clipPath: \'circle(10% at 50% 50%)\',\n            webkitClipPath: \'circle(10% at 50% 50%)\',\n            duration: 2,\n            ease: \'expo.out\'\n          });\n        } else {\n          node_modules_gsap/* gsap.set */.p8.set(_this.$sliderNavigationPrev, {\n            pointerEvents: \'none\',\n            onComplete: function onComplete() {\n              node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(1, function () {\n                node_modules_gsap/* gsap.set */.p8.set(_this.$sliderNavigationPrev, {\n                  pointerEvents: \'initial\'\n                });\n              });\n            }\n          });\n        }\n\n        _this.updateNavigation(\'prev\');\n\n        _this.controllAutoplay();\n      });\n      this.domEvents.add(this.$sliderNavigationNext, \'click\', function () {\n        if (_this.appStore.isDesktop) {\n          node_modules_gsap/* gsap.to */.p8.to(_this.$sliderNavigationNext.children[0], {\n            clipPath: \'circle(10% at 50% 50%)\',\n            webkitClipPath: \'circle(10% at 50% 50%)\',\n            duration: 2,\n            ease: \'expo.out\'\n          });\n        } else {\n          node_modules_gsap/* gsap.set */.p8.set(_this.$sliderNavigationNext, {\n            pointerEvents: \'none\',\n            onComplete: function onComplete() {\n              node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(1, function () {\n                node_modules_gsap/* gsap.set */.p8.set(_this.$sliderNavigationNext, {\n                  pointerEvents: \'initial\'\n                });\n              });\n            }\n          });\n        }\n\n        _this.updateNavigation(\'next\');\n\n        _this.controllAutoplay();\n      });\n\n      if (this.appStore.isDesktop) {\n        for (var i = 0; i < this.$sliderNavigation.length; i++) {\n          this.domEvents.add(this.$sliderNavigation[i], \'mouseenter\', function (a, e, el) {\n            _this.enterNavigation(a, e, el);\n          });\n          this.domEvents.add(this.$sliderNavigation[i], \'mouseleave\', function (a, e, el) {\n            _this.leaveNavigation(a, e, el);\n          });\n        }\n\n        this.$sliderLinks = this.$slider.querySelectorAll(\'.link\');\n\n        for (var _i = 0; _i < this.$sliderLinks.length; _i++) {\n          this.domEvents.add(this.$sliderLinks[_i], \'mouseenter\', function (a, e, el) {\n            node_modules_gsap/* gsap.to */.p8.to(el.querySelector(\'.underline\'), {\n              scaleX: 0,\n              duration: 0.6,\n              ease: \'expo.inOut\'\n            });\n          });\n          this.domEvents.add(this.$sliderLinks[_i], \'mouseleave\', function (a, e, el) {\n            node_modules_gsap/* gsap.to */.p8.to(el.querySelector(\'.underline\'), {\n              scaleX: 1,\n              duration: 0.6,\n              ease: \'expo.inOut\'\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      var _this2 = this;\n\n      // Set total count\n      this._slider.total = this.$sliderItems.length; // Set all slides\n\n      for (var i = 0; i < this.$sliderItems.length; i++) {\n        /* Items */\n        if (this.appStore.isDesktop) node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[i], {\n          display: \'none\',\n          opacity: 1\n        });\n        /* Texts */\n        // eslint-disable-next-line no-new\n\n        new SplitText(this.$sliderItems[i].querySelector(\'.title\'), {\n          type: \'lines words\',\n          linesClass: \'line line--++\',\n          wordsClass: \'word word--++\'\n        });\n\n        for (var j = 0; j < this.$sliderItems[i].querySelectorAll(\'.title .word\').length; j++) {\n          node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[i].querySelectorAll(\'.title .word\')[j], {\n            opacity: 0.0001,\n            y: \'100%\',\n            rotation: \'3deg\'\n          });\n        }\n\n        node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[i].querySelector(\'.link\'), {\n          opacity: 0.0001\n        });\n        /* Backgrounds */\n\n        if (!this.appStore.isDesktop) node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[i].querySelector(\'.background\'), {\n          display: \'none\'\n        });\n      } // Set current slide\n\n      /* Items */\n\n\n      if (this.appStore.isDesktop) node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[0], {\n        display: \'block\'\n      });\n      /* Texts */\n\n      for (var _i2 = 0; _i2 < this.$sliderItems[0].querySelectorAll(\'.title .word\').length; _i2++) {\n        node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[0].querySelectorAll(\'.title .word\')[_i2], {\n          opacity: 1,\n          y: \'0%\',\n          rotation: \'0deg\',\n          ease: this._slider.ease,\n          duration: this._slider.duration,\n          delay: 0.3 + _i2 * 0.01\n        });\n      }\n\n      node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[0].querySelector(\'.link\'), {\n        opacity: 1\n      });\n      /* Backgrounds */\n\n      if (!this.appStore.isDesktop) node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[0].querySelector(\'.background\'), {\n        display: \'block\'\n      });\n\n      if (this.appStore.isDesktop) {\n        // Get backgrounds url\n        var prevUrl = this.$sliderItems[this.$sliderItems.length - 1].querySelector(\'.background\').children[0].style.backgroundImage.substring(5, this.$sliderItems[this.$sliderItems.length - 1].querySelector(\'.background\').children[0].style.backgroundImage.length - 2);\n        var nextUrl = this.$sliderItems[1].querySelector(\'.background\').children[0].style.backgroundImage.substring(5, this.$sliderItems[1].querySelector(\'.background\').children[0].style.backgroundImage.length - 2); // Set navigation backgrounds url\n\n        node_modules_gsap/* gsap.set */.p8.set(this.$sliderNavigationPrev.querySelector(\'.background\').children[0], {\n          backgroundImage: \'url(\' + prevUrl + \')\'\n        });\n        node_modules_gsap/* gsap.set */.p8.set(this.$sliderNavigationNext.querySelector(\'.background\').children[0], {\n          backgroundImage: \'url(\' + nextUrl + \')\'\n        });\n      }\n\n      node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(this._slider.autoplaySpeed, function () {\n        _this2.autoplay();\n\n        _this2._slider.animating = false;\n      });\n    }\n  }, {\n    key: "controllAutoplay",\n    value: function controllAutoplay() {\n      if (this._slider.autoplay) return;\n      this._slider.autoplay = true;\n      this.autoplay();\n    }\n  }, {\n    key: "autoplay",\n    value: function autoplay() {\n      var _this3 = this;\n\n      // Timeline Slider scroll\n      if (this._slider.autoplay) {\n        this._slider.autoplayController = node_modules_gsap/* gsap.timeline */.p8.timeline({\n          paused: false,\n          defaults: {\n            duration: this._slider.autoplaySpeed,\n            ease: \'none\'\n          },\n          onComplete: function onComplete() {\n            _this3.change(\'next\');\n          }\n        });\n\n        this._slider.autoplayController.fromTo(this._slider, {\n          autoplayProgress: 0\n        }, {\n          autoplayProgress: 1\n        });\n      }\n    }\n  }, {\n    key: "autoplayPause",\n    value: function autoplayPause() {\n      if (this._slider.autoplayController) this._slider.autoplayController.pause();\n    }\n  }, {\n    key: "autoplayPlay",\n    value: function autoplayPlay() {\n      if (this._slider.autoplayController) this._slider.autoplayController.play();\n    }\n  }, {\n    key: "updateNavigation",\n    value: function updateNavigation(direction) {\n      var _this4 = this;\n\n      this._slider.animating = false;\n      if (this._slider.animating) return;\n      this.navigation(direction);\n\n      if (this._slider.autoplay) {\n        this._slider.autoplayController.pause();\n\n        node_modules_gsap/* gsap.fromTo */.p8.fromTo(this._slider, {\n          navigationProgress1: this._slider.navigationProgress1,\n          navigationProgress2: 0\n        }, {\n          navigationProgress1: 1,\n          navigationProgress2: 1,\n          duration: 1,\n          ease: this._slider.ease,\n          delay: 0,\n          onComplete: function onComplete() {\n            _this4._slider.autoplayController.restart();\n          }\n        });\n      }\n    }\n  }, {\n    key: "enterNavigation",\n    value: function enterNavigation(a, e, el) {\n      node_modules_gsap/* gsap.to */.p8.to(el.children[0], {\n        clipPath: \'circle(45% at 50% 50%)\',\n        webkitClipPath: \'circle(45% at 50% 50%)\',\n        duration: 2,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* gsap.to */.p8.to(el.children[1], {\n        scale: 0.9,\n        duration: 2,\n        ease: \'expo.out\'\n      });\n    }\n  }, {\n    key: "leaveNavigation",\n    value: function leaveNavigation(a, e, el) {\n      node_modules_gsap/* gsap.to */.p8.to(el.children[0], {\n        clipPath: \'circle(10% at 50% 50%)\',\n        webkitClipPath: \'circle(10% at 50% 50%)\',\n        duration: 2,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* gsap.to */.p8.to(el.children[1], {\n        scale: 1,\n        duration: 2,\n        ease: \'expo.out\'\n      });\n    }\n  }, {\n    key: "change",\n    value: function change(direction) {\n      var _this5 = this;\n\n      this._slider.direction = direction;\n      this._slider.next = (this._slider.current + 1) % this._slider.total;\n      this._slider.prev = this._slider.current === -1 ? this._slider.total - 1 : this._slider.current;\n      this._slider.current = this._slider.next;\n\n      if (this._slider.autoplay) {\n        this._slider.autoplayController.pause();\n\n        node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(this._slider.autoplaySpeed, function () {\n          _this5._slider.autoplayController.restart();\n        });\n      } // Slider animation\n\n\n      if (this.appStore.isDesktop) this.animation(this._slider.direction);else this.animationMobile(this._slider.direction); // WebGL\n\n      this.emitter.emit(\'onSliderChange\', {\n        direction: this._slider.direction,\n        duration: this._slider.duration,\n        action: \'change\',\n        color: this.$sliderItems[this._slider.next].dataset.color\n      }); // Reset animation vars\n\n      node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(this._slider.autoplaySpeed, function () {\n        _this5._slider.current = _this5._slider.next;\n        _this5._slider.animating = false;\n      });\n    }\n  }, {\n    key: "navigation",\n    value: function navigation(direction) {\n      var _this6 = this;\n\n      this._slider.direction = direction;\n\n      if (this._slider.direction === \'next\') {\n        this._slider.next = (this._slider.current + 1) % this._slider.total;\n        this._slider.prev = this._slider.current === -1 ? this._slider.total - 1 : this._slider.current;\n        this._slider.dir = 1;\n      } else {\n        this._slider.next = this._slider.current === 0 ? this._slider.total - 1 : this._slider.current - 1;\n        this._slider.prev = this._slider.current === -1 ? this._slider.total - 1 : this._slider.current;\n        this._slider.dir = -1;\n      }\n\n      this._slider.current = this._slider.next;\n\n      if (this._slider.autoplay) {\n        this._slider.autoplayController.pause();\n\n        node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(this._slider.duration, function () {\n          _this6._slider.autoplayController.restart();\n        });\n      } // Slider animation\n\n\n      if (this.appStore.isDesktop) this.animation(this._slider.direction);else this.animationMobile(this._slider.direction); // WebGL\n\n      this.emitter.emit(\'onSliderChange\', {\n        direction: this._slider.direction,\n        duration: this._slider.duration,\n        action: \'navigation\',\n        color: this.$sliderItems[this._slider.next].dataset.color\n      }); // Reset animation vars\n\n      node_modules_gsap/* gsap.delayedCall */.p8.delayedCall(this._slider.duration, function () {\n        _this6._slider.current = _this6._slider.next;\n        _this6._slider.animating = false;\n      });\n    }\n  }, {\n    key: "animation",\n    value: function animation(direction) {\n      var _this7 = this;\n\n      // Set next slide\n\n      /* Items */\n      node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[this._slider.next], {\n        display: \'block\',\n        clipPath: \'circle(50% at 50% 50%)\',\n        webkitClipPath: \'circle(50% at 50% 50%)\',\n        opacity: 0.0001\n      });\n      /* Texts */\n\n      for (var i = 0; i < this.$sliderItems[this._slider.next].querySelectorAll(\'.title .word\').length; i++) {\n        node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[this._slider.next].querySelectorAll(\'.title .word\')[i], {\n          opacity: 0.0001,\n          y: \'100%\',\n          rotation: \'3deg\'\n        });\n      }\n      /* Backgrounds */\n\n\n      node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[this._slider.next].querySelector(\'.background\').children[0], {\n        scale: 1.2\n      }); // Get backgrounds url\n\n      this.prevUrl = this.$sliderItems[this._slider.prev].querySelector(\'.background\').children[0].style.backgroundImage.substring(5, this.$sliderItems[this._slider.prev].querySelector(\'.background\').children[0].style.backgroundImage.length - 2);\n      this.nextUrl = this.$sliderItems[this._slider.next === this._slider.total - 1 ? 0 : this._slider.next + 1].querySelector(\'.background\').children[0].style.backgroundImage.substring(5, this.$sliderItems[this._slider.next === this._slider.total - 1 ? 0 : this._slider.next + 1].querySelector(\'.background\').children[0].style.backgroundImage.length - 2); // console.log(direction === \'prev\' && this._slider.prev !== 0, this._slider.prev === 0);\n      // console.log(\'Prev: \' + this._slider.prev, \'Next: \' + this._slider.next);\n      // Animate out current slide\n\n      /* Items */\n\n      node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.prev], {\n        clipPath: \'circle(10% at 50% 50%)\',\n        opacity: 0.0001,\n        webkitClipPath: \'circle(10% at 50% 50%)\',\n        duration: this._slider.duration,\n        ease: this._slider.ease\n      });\n      node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.next], {\n        clipPath: \'circle(10% at 50% 50%)\',\n        opacity: 1,\n        webkitClipPath: \'circle(10% at 50% 50%)\',\n        duration: this._slider.duration,\n        ease: this._slider.ease\n      });\n      /* Texts */\n\n      for (var _i3 = 0; _i3 < this.$sliderItems[this._slider.prev].querySelectorAll(\'.title .word\').length; _i3++) {\n        node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.prev].querySelectorAll(\'.title .word\')[_i3], {\n          opacity: 0.0001,\n          y: \'-100%\',\n          rotation: \'-3deg\',\n          duration: this._slider.duration,\n          ease: this._slider.ease,\n          delay: _i3 * 0.01,\n          onComplete: function onComplete() {\n            node_modules_gsap/* gsap.set */.p8.set(_this7.$sliderItems[_this7._slider.prev], {\n              display: \'none\'\n            });\n          }\n        });\n      }\n\n      node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.prev].querySelector(\'.link\'), {\n        opacity: 0.0001,\n        duration: this._slider.duration,\n        ease: this._slider.ease\n      });\n      /* Arrows */\n\n      node_modules_gsap/* gsap.set */.p8.set(this.$sliderNavigationPrev.querySelector(\'.background\').children[0], {\n        backgroundImage: \'url(\' + this.prevUrl + \')\'\n      });\n      node_modules_gsap/* gsap.set */.p8.set(this.$sliderNavigationNext.querySelector(\'.background\').children[0], {\n        backgroundImage: \'url(\' + this.nextUrl + \')\'\n      }); // Animate in next slide\n\n      /* Items */\n\n      node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.next], {\n        clipPath: \'circle(50% at 50% 50%)\',\n        webkitClipPath: \'circle(50% at 50% 50%)\',\n        duration: this._slider.duration,\n        ease: this._slider.ease,\n        delay: this._slider.duration\n      });\n      /* Texts */\n\n      for (var _i4 = 0; _i4 < this.$sliderItems[this._slider.next].querySelectorAll(\'.title .word\').length; _i4++) {\n        node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.next].querySelectorAll(\'.title .word\')[_i4], {\n          opacity: 1,\n          y: \'0%\',\n          rotation: \'0deg\',\n          duration: this._slider.duration,\n          ease: this._slider.ease,\n          delay: this._slider.duration + _i4 * 0.01\n        });\n      }\n\n      node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.next].querySelector(\'.link\'), {\n        opacity: 1,\n        duration: this._slider.duration,\n        ease: this._slider.ease,\n        delay: this._slider.duration\n      });\n      /* Backgrounds */\n\n      node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.next].querySelector(\'.background\').children[0], {\n        scale: 1,\n        duration: this._slider.duration * 6,\n        ease: \'expo.out\',\n        delay: this._slider.duration\n      });\n    }\n  }, {\n    key: "animationMobile",\n    value: function animationMobile(direction) {\n      // Set next slide\n\n      /* Texts */\n      for (var i = 0; i < this.$sliderItems[this._slider.next].querySelectorAll(\'.title .word\').length; i++) {\n        node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[this._slider.next].querySelectorAll(\'.title .word\')[i], {\n          opacity: 0.0001,\n          y: \'100%\',\n          rotation: \'3deg\'\n        });\n      }\n      /* Backgrounds */\n\n\n      node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[this._slider.next].querySelector(\'.background\'), {\n        display: \'block\',\n        x: \'100%\'\n      });\n      node_modules_gsap/* gsap.set */.p8.set(this.$sliderItems[this._slider.next].querySelector(\'.background\').children[0], {\n        x: \'0%\'\n      }); // Animate out current slide\n\n      /* Texts */\n\n      for (var _i5 = 0; _i5 < this.$sliderItems[this._slider.prev].querySelectorAll(\'.title .word\').length; _i5++) {\n        node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.prev].querySelectorAll(\'.title .word\')[_i5], {\n          opacity: 0.0001,\n          y: \'-100%\',\n          rotation: \'-3deg\',\n          duration: this._slider.duration,\n          ease: this._slider.ease,\n          delay: _i5 * 0.01\n        });\n      }\n\n      node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.prev].querySelector(\'.link\'), {\n        opacity: 0.0001,\n        duration: this._slider.duration,\n        ease: this._slider.ease\n      });\n      /* Backgrounds */\n\n      node_modules_gsap/* gsap.fromTo */.p8.fromTo(this.$sliderItems[this._slider.prev].querySelector(\'.background\'), {\n        x: \'0%\'\n      }, {\n        x: \'-100%\',\n        ease: this._slider.ease,\n        duration: this._slider.duration,\n        delay: this._slider.duration\n      });\n      node_modules_gsap/* gsap.fromTo */.p8.fromTo(this.$sliderItems[this._slider.prev].querySelector(\'.background\').children[0], {\n        x: \'0%\'\n      }, {\n        x: \'100%\',\n        ease: this._slider.ease,\n        duration: this._slider.duration,\n        delay: this._slider.duration\n      }); // Animate in next slide\n\n      /* Texts */\n\n      for (var _i6 = 0; _i6 < this.$sliderItems[this._slider.next].querySelectorAll(\'.title .word\').length; _i6++) {\n        node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.next].querySelectorAll(\'.title .word\')[_i6], {\n          opacity: 1,\n          y: \'0%\',\n          rotation: \'0deg\',\n          duration: this._slider.duration,\n          ease: this._slider.ease,\n          delay: this._slider.duration + _i6 * 0.01\n        });\n      }\n\n      node_modules_gsap/* gsap.to */.p8.to(this.$sliderItems[this._slider.next].querySelector(\'.link\'), {\n        opacity: 1,\n        duration: this._slider.duration,\n        ease: this._slider.ease,\n        delay: this._slider.duration\n      });\n      /* Backgrounds */\n\n      node_modules_gsap/* gsap.fromTo */.p8.fromTo(this.$sliderItems[this._slider.next].querySelector(\'.background\'), {\n        x: \'100%\'\n      }, {\n        x: \'0%\',\n        ease: this._slider.ease,\n        duration: this._slider.duration,\n        delay: this._slider.duration / 2\n      });\n      node_modules_gsap/* gsap.fromTo */.p8.fromTo(this.$sliderItems[this._slider.next].querySelector(\'.background\').children[0], {\n        x: \'-100%\'\n      }, {\n        x: \'0%\',\n        ease: this._slider.ease,\n        duration: this._slider.duration,\n        delay: this._slider.duration / 2\n      });\n      node_modules_gsap/* gsap.fromTo */.p8.fromTo(this.$sliderItems[this._slider.next].querySelector(\'.background\').children[0], {\n        scale: 1.1\n      }, {\n        scale: 1,\n        duration: 4,\n        ease: \'expo.out\',\n        delay: this._slider.duration / 2\n      });\n    }\n  }, {\n    key: "destroy",\n    value: function destroy() {\n      if (this._slider.autoplayController) this._slider.autoplayController.pause();\n      if (this.domEvents) this.domEvents.destroy();\n    }\n  }]);\n\n  return _default;\n}();\n\n\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererHome.js\nfunction rendererHome_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rendererHome_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererHome_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rendererHome_typeof(obj); }\n\nfunction rendererHome_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rendererHome_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererHome_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererHome_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererHome_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererHome_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererHome_setPrototypeOf(subClass, superClass); }\n\nfunction rendererHome_setPrototypeOf(o, p) { rendererHome_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererHome_setPrototypeOf(o, p); }\n\nfunction rendererHome_createSuper(Derived) { var hasNativeReflectConstruct = rendererHome_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererHome_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererHome_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererHome_possibleConstructorReturn(this, result); }; }\n\nfunction rendererHome_possibleConstructorReturn(self, call) { if (call && (rendererHome_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return rendererHome_assertThisInitialized(self); }\n\nfunction rendererHome_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rendererHome_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererHome_getPrototypeOf(o) { rendererHome_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererHome_getPrototypeOf(o); }\n\n// GSAP Library\n\n\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z);\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin((DrawSVGPlugin_min_default())); // Import Renderer\n\n // Webgl\n\n\n\n\n\n\n // Utilities\n\n\n\n\n\n\nvar RendererHome = /*#__PURE__*/function (_Renderer) {\n  rendererHome_inherits(RendererHome, _Renderer);\n\n  var _super = rendererHome_createSuper(RendererHome);\n\n  function RendererHome() {\n    rendererHome_classCallCheck(this, RendererHome);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererHome_createClass(RendererHome, [{\n    key: "selectors",\n    value: function selectors() {\n      // Sections\n      this.$hero = this.$el.querySelector(\'.home__hero\');\n      this.$data = this.$el.querySelector(\'.home__data\');\n      this.$services = this.$el.querySelector(\'.home__services\');\n      this.$solutions = this.$el.querySelector(\'.home__solutions\');\n      this.$technology = this.$el.querySelector(\'.home__technology\');\n      this.$platforms = this.$el.querySelector(\'.home__platforms\');\n      this.$clients = this.$el.querySelector(\'.home__clients\'); // Video\n\n      this.$video = this.$hero.querySelector(\'.hero__video\');\n      if (this.$video) this.$videoEl = this.$video.querySelector(\'.video\'); // Canvas\n\n      this.$canvasHome1 = this.$el.querySelector(\'#webgl_home1\');\n      this.$canvasHome2 = this.$el.querySelector(\'#webgl_home2\');\n      this.$canvasHome3 = this.$el.querySelector(\'#webgl_home3\');\n      this.$canvasHome4 = this.$el.querySelector(\'#webgl_home4\');\n      this.$canvasHome1_m = this.$el.querySelector(\'#webgl_home1_m\');\n      this.$canvasHome2a_m = this.$el.querySelector(\'#webgl_home2a_m\');\n      this.$canvasHome2b_m = this.$el.querySelector(\'#webgl_home2b_m\');\n    }\n  }, {\n    key: "events",\n    value: function events() {\n      var _this = this;\n\n      if (!this.appStore.isDesktop) {\n        if (this.$services) {\n          this.$servicesButtons = this.$services.querySelectorAll(\'.icon--plus\');\n\n          var _loop = function _loop(i) {\n            _this.domEvents.add(_this.$servicesButtons[i], \'click\', function (a, e, el) {\n              if (_this.appUi.isAnimating) _this.closeServicesMobile(a, e, el, i);else _this.openServicesMobile(a, e, el, i);\n            });\n          };\n\n          for (var i = 0; i < this.$servicesButtons.length; i++) {\n            _loop(i);\n          }\n        }\n\n        if (this.$hero) {\n          this.$heroCircle = this.$hero.querySelector(\'.circle\');\n          this.domEvents.add(this.$heroCircle, \'click\', function (a, e, el) {\n            _this.openForm();\n          });\n        }\n      }\n    }\n  }, {\n    key: "preload",\n    value: function preload() {\n      var _main = [];\n      var _secondary = []; // if(this.appStore.isDesktop && this.$videoEl)\n      // {\n      //     const videoUrl = this.$videoEl.querySelector(\'video source\').getAttribute(\'src\');\n      //     _main.push(videoUrl);\n      // }\n\n      this.preloadItems = {\n        main: _main,\n        secondary: _secondary\n      };\n    }\n  }, {\n    key: "beforeEnter",\n    value: function beforeEnter() {\n      this.setEnterAnimation();\n\n      if (this.$platforms) {\n        this.$platformsTitle = this.$platforms.querySelector(\'.title--small\');\n\n        if (this.$platformsTitle) {\n          // eslint-disable-next-line no-new\n          new SplitText(this.$platformsTitle, {\n            type: \'lines words\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\'\n          });\n          var words = this.$platformsTitle.querySelectorAll(\'.word\');\n\n          for (var i = 0; i < words.length; i++) {\n            node_modules_gsap/* default.set */.ZP.set(words[i], {\n              opacity: 0.0001,\n              y: \'100%\',\n              rotationX: \'3deg\'\n            });\n          }\n\n          if (this.appStore.isDesktop) this.$platformsTitle.querySelector(\'strong\').insertAdjacentHTML(\'beforeend\', \'<span class="stroke"></span>\');\n        }\n      }\n\n      if (this.$services && !this.appStore.isDesktop) {\n        this.$servicesItem = this.$services.querySelectorAll(\'.services__item--mobile\');\n\n        for (var _i = 0; _i < this.$servicesItem.length; _i++) {\n          this.$servicesInfo = this.$servicesItem[_i].querySelector(\'.info\');\n          var _height = this.$servicesInfo.querySelector(\'.columns\').getBoundingClientRect().height;\n\n          var _movement = _height - window.innerWidth * 0.1;\n\n          node_modules_gsap/* default.set */.ZP.set(this.$servicesInfo, {\n            y: _movement + \'px\'\n          });\n        }\n      } // WebGL\n\n\n      if (this.appStore.isDesktop) {\n        this.home1 = new home1_Home1App({\n          renderer: this,\n          domElement: this.$canvasHome1\n        });\n        this.home2 = new home2_Home2App({\n          renderer: this,\n          domElement: this.$canvasHome2\n        });\n        this.home3 = new home3_Home3App({\n          renderer: this,\n          domElement: this.$canvasHome3 // sliderRef: this._solutionsSlider\n\n        });\n        this.home4 = new home4_Home4App({\n          renderer: this,\n          domElement: this.$canvasHome4\n        });\n      } else {\n        this.home1_m = new home1_m_Home1App_m({\n          renderer: this,\n          domElement: this.$canvasHome1_m\n        });\n        this.home2a_m = new home2_m_Home2App_m({\n          renderer: this,\n          domElement: this.$canvasHome2a_m,\n          dotColor: \'#e84371\',\n          incr_radio: 13.2\n        });\n        this.home2b_m = new home2_m_Home2App_m({\n          renderer: this,\n          domElement: this.$canvasHome2b_m,\n          dotColor: \'#007EFF\',\n          incr_radio: 13.2\n        });\n      }\n    }\n  }, {\n    key: "setEnterAnimation",\n    value: function setEnterAnimation() {\n      // Set Enter Animation\n      if (this.$hero) {\n        if (this.appStore.isDesktop) {\n          // Selectors\n          this.$titleHero = this.$hero.querySelector(\'h1\');\n          this.$subTitleHero = this.$hero.querySelector(\'h2\'); // eslint-disable-next-line no-new\n\n          new SplitText(this.$titleHero, {\n            type: \'lines words\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\'\n          });\n          var titleWords = this.$titleHero.querySelectorAll(\'.word\');\n\n          for (var j = 0; j < titleWords.length; j++) {\n            node_modules_gsap/* default.set */.ZP.set(titleWords[j], {\n              opacity: 0.0001,\n              y: \'100%\',\n              rotationX: \'3deg\'\n            });\n          } // eslint-disable-next-line no-new\n\n\n          new SplitText(this.$subTitleHero, {\n            type: \'lines words\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\'\n          });\n          var subtitleWords = this.$subTitleHero.querySelectorAll(\'.word\');\n\n          for (var _j = 0; _j < subtitleWords.length; _j++) {\n            node_modules_gsap/* default.set */.ZP.set(subtitleWords[_j], {\n              opacity: 0.0001,\n              y: \'100%\',\n              rotationX: \'3deg\'\n            });\n          }\n\n          node_modules_gsap/* default.set */.ZP.set(this.$video, {\n            y: \'-50vh\'\n          });\n          node_modules_gsap/* default.set */.ZP.set(this.$videoEl, {\n            clipPath: \'circle(0% at 50% 50%)\',\n            webkitClipPath: \'circle(0% at 50% 50%)\'\n          }); // eslint-disable-next-line no-new\n\n          new SplitText(this.$videoEl.querySelector(\'.megatitle\'), {\n            type: \'lines words chars\',\n            linesClass: \'line line--++\',\n            wordsClass: \'word word--++\',\n            charsClass: \'char char--++\'\n          });\n          var chars = this.$videoEl.querySelector(\'.megatitle\').querySelectorAll(\'.char\');\n\n          for (var i = 0; i < chars.length; i++) {\n            node_modules_gsap/* default.set */.ZP.set(chars[i], {\n              opacity: 0.0001\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: "enter",\n    value: function enter() {\n      // Show header\n      if (!this.appStore.isDesktop) this.appUi.showHeader(); // Start functions\n\n      this.init(); // Disable scroll\n\n      if (this.appStore.isDesktop) this.appStore.currentSection.superScroller._scroll.enable = false;\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      this.initHomeTitles();\n      this.initSolutionsSlider();\n      this.initTechnologyCards();\n      this.initPlatformsDraggable();\n\n      if (this.appStore.isDesktop) {\n        this.initData();\n        this.initSolutionsFeautures();\n        this.initParallaxCards(); // WebGL\n\n        this.home1.init();\n        this.home2.init();\n        this.home3.init({\n          sliderRef: this._solutionsSlider\n        });\n        this.home4.init();\n      } else {\n        this.initDataDraggableMobile();\n        this.initSolutionsDraggableMobile(); // WebGL\n\n        this.home1_m.init();\n        this.home2a_m.init();\n        this.home2b_m.init();\n      }\n    }\n  }, {\n    key: "initEnterAnimation",\n    value: function initEnterAnimation() {\n      var _this2 = this;\n\n      // Fall\n      node_modules_gsap/* default.to */.ZP.to(this.$video, {\n        y: \'0vh\',\n        duration: 1.6,\n        ease: \'expo.inOut\',\n        onComplete: function onComplete() {\n          _this2.initVideoPin();\n\n          _this2.initTechnologyPin();\n\n          _this2.appUi.showHeader();\n\n          _this2.appStore.currentSection.superScroller._scroll.enable = true; // Show cookies\n\n          if (_this2.appUi.$cookies && _this2.appStore.isDesktop) node_modules_gsap/* default.to */.ZP.to(_this2.appUi.$cookies, {\n            opacity: 1,\n            duration: 1,\n            ease: \'power2.out\'\n          });\n        }\n      }); // Circle\n\n      node_modules_gsap/* default.to */.ZP.to(this.$videoEl, {\n        clipPath: \'circle(10% at 50% 50%)\',\n        webkitClipPath: \'circle(10% at 50% 50%)\',\n        duration: 1.6,\n        ease: \'expo.inOut\'\n      }); // Text\n\n      var titleWords = this.$titleHero.querySelectorAll(\'.word\');\n\n      for (var j = 0; j < titleWords.length; j++) {\n        node_modules_gsap/* default.to */.ZP.to(titleWords[j], {\n          opacity: 1,\n          y: \'0%\',\n          rotationX: \'0deg\',\n          ease: \'expo.out\',\n          duration: 1.4,\n          delay: 0.9 + j * 0.02\n        });\n      }\n\n      var subtitleWords = this.$subTitleHero.querySelectorAll(\'.word\');\n\n      for (var _j2 = 0; _j2 < subtitleWords.length; _j2++) {\n        node_modules_gsap/* default.to */.ZP.to(subtitleWords[_j2], {\n          opacity: 1,\n          y: \'0%\',\n          rotationX: \'0deg\',\n          ease: \'expo.out\',\n          duration: 1.4,\n          delay: 0.9 + _j2 * 0.02\n        });\n      }\n    }\n  }, {\n    key: "initVideoPin",\n    value: function initVideoPin() {\n      var _this3 = this;\n\n      if (this.$videoEl) {\n        // Set animation\n        node_modules_gsap/* default.set */.ZP.set(this.$videoEl, {\n          y: \'0vh\'\n        });\n        if (this.appStore.client.browser === \'chrome\') node_modules_gsap/* default.set */.ZP.set(this.$videoEl.querySelector(\'video\'), {\n          width: \'120%\'\n        });else node_modules_gsap/* default.set */.ZP.set(this.$videoEl.querySelector(\'video\'), {\n          scale: 1.1\n        });\n        node_modules_gsap/* default.set */.ZP.set(this.$videoEl.querySelector(\'.video__overlay\'), {\n          opacity: 0.8\n        }); // eslint-disable-next-line no-new\n\n        new SplitText(this.$videoEl.querySelector(\'.title\'), {\n          type: \'lines words\',\n          linesClass: \'line line--++\',\n          wordsClass: \'word word--++\'\n        });\n        var words = this.$videoEl.querySelector(\'.title\').querySelectorAll(\'.word\');\n\n        for (var i = 0; i < words.length; i++) {\n          node_modules_gsap/* default.set */.ZP.set(words[i], {\n            opacity: 0.0001,\n            y: \'100%\',\n            rotation: \'3deg\'\n          });\n        } // Start video timeline\n\n\n        this._videoTimeline = node_modules_gsap/* default.timeline */.ZP.timeline({\n          defaults: {\n            ease: \'none\',\n            duration: 1\n          },\n          scrollTrigger: {\n            trigger: this.$video,\n            start: \'top top\',\n            end: \'bottom bottom\',\n            scrub: true,\n            onUpdate: function onUpdate(self) {\n              if (_this3.home1) _this3.home1.onUpdateOpenProgress(self.progress);\n            }\n          }\n        }); // Animate in/out\n\n        this._videoTimeline.to(this.$videoEl, {\n          y: \'200vh\',\n          duration: 1\n        }, 0);\n\n        this._videoTimeline.to(this.$videoEl, {\n          clipPath: \'circle(75% at 50% 50%)\',\n          webkitClipPath: \'circle(75% at 50% 50%)\',\n          duration: 0.5\n        }, 0); // Scale video\n\n\n        if (this.appStore.client.browser === \'chrome\') this._videoTimeline.to(this.$videoEl.querySelector(\'video\'), {\n          width: \'100%\',\n          duration: 0.35\n        }, 0.15);else this._videoTimeline.to(this.$videoEl.querySelector(\'video\'), {\n          scale: 1,\n          duration: 0.35\n        }, 0.15);\n        if (this.appStore.client.browser === \'safari\') this._videoTimeline.to(this.$videoEl.querySelector(\'.video__overlay\'), {\n          opacity: 0.2,\n          duration: 0.35\n        }, 0.15);else this._videoTimeline.to(this.$videoEl.querySelector(\'.video__overlay\'), {\n          opacity: 0.4,\n          duration: 0.35\n        }, 0.15);\n        var chars = this.$videoEl.querySelector(\'.megatitle\').querySelectorAll(\'.char\');\n\n        this._videoTimeline.to(chars, {\n          opacity: 0.1,\n          stagger: 0.35 / chars.length,\n          duration: 0.35 / chars.length\n        }, 0.15);\n\n        this._videoTimeline.to(chars, {\n          opacity: 1,\n          stagger: 0.65 / chars.length,\n          duration: 0.65 / chars.length\n        }, 0.35);\n\n        var titleWords = this.$videoEl.querySelector(\'.title\').querySelectorAll(\'.word\');\n\n        for (var j = 0; j < titleWords.length; j++) {\n          this._videoTimeline.to(titleWords[j], {\n            opacity: 1,\n            y: \'0%\',\n            rotation: \'0deg\',\n            duration: 0.75 / titleWords.length\n          }, 0.75 + j * 0.01);\n        } // WebGL\n\n\n        this._canvasPin = ScrollTrigger/* default.create */.Z.create({\n          trigger: this.$hero,\n          start: \'top top\',\n          end: \'bottom bottom\',\n          scrub: true,\n          onUpdate: function onUpdate(self) {\n            // Metemos el calculo dentro de onUpdate porque sino falla al hacer resize\n            var _offset2 = _this3.$hero.offsetHeight - _this3.$canvasHome1.offsetHeight;\n\n            node_modules_gsap/* default.set */.ZP.set(_this3.$canvasHome1, {\n              y: _offset2 * self.progress + \'px\'\n            });\n          }\n        });\n        this._footerCanvasPin = ScrollTrigger/* default.create */.Z.create({\n          trigger: this.$footer,\n          start: \'top bottom\',\n          end: \'bottom bottom\',\n          scrub: true,\n          onUpdate: function onUpdate(self) {\n            var posY = -_this3.$canvasHome4.offsetHeight + _this3.$canvasHome4.offsetHeight * 2 * self.progress;\n            node_modules_gsap/* default.set */.ZP.set(_this3.$canvasHome4, {\n              y: posY + \'px\'\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: "initHomeTitles",\n    value: function initHomeTitles() {\n      var _this4 = this;\n\n      if (this.$platformsTitle) {\n        ScrollTrigger/* default.create */.Z.create({\n          start: \'top bottom\',\n          trigger: this.$platformsTitle,\n          once: true,\n          onEnter: function onEnter() {\n            var words = _this4.$platformsTitle.querySelectorAll(\'.word\');\n\n            for (var i = 0; i < words.length; i++) {\n              node_modules_gsap/* default.to */.ZP.to(words[i], {\n                opacity: 1,\n                y: \'0%\',\n                rotationX: \'0deg\',\n                ease: \'expo.inOut\',\n                duration: 1.2,\n                delay: 0.2 + i * 0.01\n              });\n            }\n\n            if (_this4.appStore.isDesktop) {\n              var $stroke = _this4.$platformsTitle.querySelector(\'.stroke\');\n\n              node_modules_gsap/* default.to */.ZP.to($stroke, {\n                scaleX: 1,\n                duration: 1.2,\n                ease: \'expo.inOut\',\n                delay: 0.5\n              });\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: "initData",\n    value: function initData() {\n      var _this5 = this;\n\n      // Selectors\n      this.$dataLines = this.$data.querySelectorAll(\'.dataline\');\n      this.$dataItems = this.$data.querySelectorAll(\'.columns__item\'); // const _padding = window.innerWidth * 0.3;\n      // Set animation\n\n      node_modules_gsap/* default.set */.ZP.set(this.$dataLines, {\n        drawSVG: 0\n      });\n      node_modules_gsap/* default.set */.ZP.set(this.$dataItems, {\n        opacity: 0.0001\n      }); // Create lines trigger\n\n      this._dataTimeline = node_modules_gsap/* default.timeline */.ZP.timeline({\n        defaults: {\n          ease: \'none\',\n          duration: 1\n        },\n        scrollTrigger: {\n          trigger: this.$data,\n          start: \'top 70%\',\n          end: \'80% bottom\',\n          scrub: true\n        }\n      }); // Lines in/out animation\n\n      this._dataTimeline.to(this.$dataLines[0], {\n        drawSVG: \'100%\',\n        duration: 0.5\n      }, 0);\n\n      this._dataTimeline.to(this.$dataLines[1], {\n        drawSVG: \'100%\',\n        duration: 0.5\n      }, 0.5);\n\n      this._dataTimeline.to(this.$dataLines[2], {\n        drawSVG: \'100%\',\n        duration: 0.35\n      }, 1); // First image trigger and animation\n\n\n      ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$dataLines[0],\n        start: \'top 70%\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onEnter: function onEnter() {\n          node_modules_gsap/* default.to */.ZP.to(_this5.$dataItems[0], {\n            opacity: 1,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          node_modules_gsap/* default.to */.ZP.to(_this5.$dataItems[0], {\n            opacity: 0.0001,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        }\n      }); // Second image trigger and animation\n\n      ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$dataLines[1],\n        start: \'top 55%\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onEnter: function onEnter() {\n          node_modules_gsap/* default.to */.ZP.to(_this5.$dataItems[1], {\n            opacity: 1,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          node_modules_gsap/* default.to */.ZP.to(_this5.$dataItems[1], {\n            opacity: 0.0001,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        }\n      }); // Third image trigger and animation\n\n      ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$dataLines[2],\n        start: \'top 48%\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onEnter: function onEnter() {\n          node_modules_gsap/* default.to */.ZP.to(_this5.$dataItems[2], {\n            opacity: 1,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          node_modules_gsap/* default.to */.ZP.to(_this5.$dataItems[2], {\n            opacity: 0.0001,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        }\n      });\n    }\n  }, {\n    key: "initDataDraggableMobile",\n    value: function initDataDraggableMobile() {\n      var _this6 = this;\n\n      // Selectors\n      this.$dataSlider = this.$data.querySelector(\'.slider\');\n      this.$dataSliderItems = this.$dataSlider.querySelectorAll(\'.slider__item\');\n      this.$dataSliderProgress = this.$dataSlider.querySelector(\'.slider__progress\'); // Compare items height\n\n      this._maxHeight = 0;\n      this._arrayItems = Array.from(this.$dataSliderItems);\n\n      for (var i = 0; i < this._arrayItems.length; i++) {\n        var _elementHeight = this._arrayItems[i].getBoundingClientRect().height;\n\n        if (_elementHeight > this._maxHeight) this._maxHeight = _elementHeight;\n      } // Auto height\n\n\n      this.$dataSlider.style.height = this._maxHeight + 40 + \'px\'; // Create draggable\n\n      this._dataDraggable = new superDraggable_default({\n        el: this.$data,\n        snap: false,\n        snapTo: \'center\',\n        dots: false,\n        onRaf: function onRaf(percent, progress, progressOrigin) {\n          node_modules_gsap/* default.to */.ZP.to(_this6.$dataSliderProgress.children[0], {\n            scaleX: progressOrigin + progress\n          });\n        }\n      });\n    }\n  }, {\n    key: "openServicesMobile",\n    value: function openServicesMobile(a, e, el, index) {\n      if (this.appUi.isAnimating) return;\n      this.appUi.isAnimating = true; // Selectors\n\n      this.$servicesInfo = this.$servicesItem[index].querySelector(\'.info\');\n      this.$servicesText = this.$servicesItem[index].querySelector(\'.columns\'); // Animate in\n\n      node_modules_gsap/* default.to */.ZP.to(this.$servicesInfo, {\n        y: \'0px\',\n        duration: 0.6,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$servicesText, {\n        opacity: 1,\n        duration: 0.6,\n        ease: \'power2.out\'\n      });\n    }\n  }, {\n    key: "closeServicesMobile",\n    value: function closeServicesMobile(a, e, el, index) {\n      var _this7 = this;\n\n      // Selectors\n      this.$servicesInfo = this.$servicesItem[index].querySelector(\'.info\');\n      this.$servicesText = this.$servicesItem[index].querySelector(\'.columns\');\n      var _height = this.$servicesInfo.querySelector(\'.columns\').getBoundingClientRect().height;\n\n      var _movement = _height - window.innerWidth * 0.1;\n\n      node_modules_gsap/* default.to */.ZP.to(this.$servicesInfo, {\n        y: _movement + \'px\',\n        duration: 0.6,\n        ease: \'expo.out\'\n      });\n      node_modules_gsap/* default.to */.ZP.to(this.$servicesText, {\n        opacity: 0.0001,\n        duration: 0.6,\n        ease: \'power2.out\',\n        onComplete: function onComplete() {\n          _this7.appUi.isAnimating = false;\n        }\n      });\n    }\n  }, {\n    key: "initSolutionsFeautures",\n    value: function initSolutionsFeautures() {\n      this.$solutionsFeatures = this.$solutions.querySelector(\'.features\');\n      this.$solutionsFeaturesItems = this.$solutionsFeatures.querySelectorAll(\'.features__item\');\n\n      for (var i = 0; i < this.$solutionsFeaturesItems.length; i++) {\n        node_modules_gsap/* default.set */.ZP.set(this.$solutionsFeaturesItems[i], {\n          opacity: 0.0001\n        });\n      }\n\n      this._featuresTrigger = node_modules_gsap/* default.timeline */.ZP.timeline({\n        defaults: {\n          duration: 2,\n          ease: \'power2.out\'\n        },\n        scrollTrigger: {\n          trigger: this.$solutionsFeatures,\n          start: \'top 80%\',\n          end: \'bottom 70%\',\n          scrub: true\n        }\n      });\n\n      this._featuresTrigger.to(this.$solutionsFeaturesItems[0], {\n        opacity: 1\n      }, 0.25);\n\n      this._featuresTrigger.to(this.$solutionsFeaturesItems[1], {\n        opacity: 1\n      }, 0.5);\n\n      this._featuresTrigger.to(this.$solutionsFeaturesItems[2], {\n        opacity: 1\n      }, 0.75);\n\n      this._featuresTrigger.to(this.$solutionsFeaturesItems[3], {\n        opacity: 1\n      }, 1);\n\n      this._featuresTrigger.to(this.$solutionsFeaturesItems[4], {\n        opacity: 1\n      }, 1.25);\n\n      this._featuresTrigger.to(this.$solutionsFeaturesItems[5], {\n        opacity: 1\n      }, 1.5);\n\n      this._featuresTrigger.to(this.$solutionsFeaturesItems[6], {\n        opacity: 1\n      }, 1.75);\n\n      this._featuresTrigger.to(this.$solutionsFeaturesItems[7], {\n        opacity: 1\n      }, 2);\n    }\n  }, {\n    key: "initSolutionsSlider",\n    value: function initSolutionsSlider() {\n      this._solutionsSlider = new sliderSolutions_default({\n        el: this.$solutions,\n        target: this.$solutions.querySelector(\'.slider--solutions\'),\n        autoplay: true,\n        autoplaySpeed: 3,\n        duration: 1.2\n      });\n    }\n  }, {\n    key: "initSolutionsDraggableMobile",\n    value: function initSolutionsDraggableMobile() {\n      var _this8 = this;\n\n      this.$solutionsDraggable = this.$solutions.querySelector(\'.slider--draggable\');\n      this.$solutionsDraggableProgress = this.$solutionsDraggable.querySelector(\'.slider__progress\');\n      this._solutionsDraggable = new superDraggable_default({\n        el: this.$solutions,\n        snap: false,\n        snapTo: \'center\',\n        dots: false,\n        onRaf: function onRaf(percent, progress, progressOrigin) {\n          node_modules_gsap/* default.to */.ZP.to(_this8.$solutionsDraggableProgress.children[0], {\n            scaleX: progressOrigin + progress\n          });\n        }\n      });\n    }\n  }, {\n    key: "initParallaxCards",\n    value: function initParallaxCards() {\n      this.$technologyCards = this.$technology.querySelectorAll(\'.card\');\n      var parallaxCards = node_modules_gsap/* default.timeline */.ZP.timeline({\n        defaults: {\n          duration: 1,\n          ease: \'none\'\n        },\n        scrollTrigger: {\n          trigger: this.$technology.querySelector(\'.container--large\'),\n          start: \'top bottom\',\n          end: this.$technology.querySelector(\'.container--large\').offsetHeight + window.innerWidth * 0.1 + \' top\',\n          scrub: true,\n          markers: false\n        }\n      }); // Set\n\n      parallaxCards.set([this.$technologyCards[0]], {\n        y: \'0vw\'\n      }, 0);\n      parallaxCards.set([this.$technologyCards[1]], {\n        y: \'2.5vw\'\n      }, 0);\n      parallaxCards.set([this.$technologyCards[2]], {\n        y: \'0vw\'\n      }, 0);\n      parallaxCards.set([this.$technologyCards[3]], {\n        y: \'2.5vw\'\n      }, 0); // Animation\n\n      parallaxCards.to([this.$technologyCards[0]], {\n        y: \'2.5vw\'\n      }, 0);\n      parallaxCards.to([this.$technologyCards[1]], {\n        y: \'0vw\'\n      }, 0);\n      parallaxCards.to([this.$technologyCards[2]], {\n        y: \'2.5vw\'\n      }, 0);\n      parallaxCards.to([this.$technologyCards[3]], {\n        y: \'0vw\'\n      }, 0);\n    }\n  }, {\n    key: "initTechnologyCards",\n    value: function initTechnologyCards() {\n      var _this9 = this;\n\n      // Selectors\n      this.$technologyCards = this.$technology.querySelectorAll(\'.card\');\n\n      var _loop2 = function _loop2(i) {\n        if (_this9.appStore.isDesktop) {\n          _this9.domEvents.add(_this9.$technologyCards[i], \'mouseenter\', function (a, e, el) {\n            if (el.querySelector(\'.info\')) {\n              node_modules_gsap/* default.killTweensOf */.ZP.killTweensOf(el.querySelector(\'.info\'));\n              node_modules_gsap/* default.set */.ZP.set(el.querySelector(\'.info\'), {\n                display: \'flex\'\n              });\n              node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.info\'), {\n                opacity: 1,\n                duration: 0.6,\n                ease: \'expo.out\'\n              });\n            } else {\n              el.style.pointerEvents = \'none\';\n            }\n          });\n\n          _this9.domEvents.add(_this9.$technologyCards[i], \'mouseleave\', function (a, e, el) {\n            if (el.querySelector(\'.info\')) {\n              node_modules_gsap/* default.killTweensOf */.ZP.killTweensOf(el.querySelector(\'.info\'));\n              node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.info\'), {\n                opacity: 0.0001,\n                duration: 0.6,\n                ease: \'expo.out\',\n                onComplete: function onComplete() {\n                  node_modules_gsap/* default.set */.ZP.set(el.querySelector(\'.info\'), {\n                    display: \'none\'\n                  });\n                }\n              });\n            } else {\n              el.style.pointerEvents = \'none\';\n            }\n          });\n        } else {\n          // Open and close info\n          if (_this9.$technologyCards[i].querySelector(\'.icon\')) {\n            _this9.domEvents.add(_this9.$technologyCards[i].querySelector(\'.icon\'), \'click\', function (e) {\n              node_modules_gsap/* default.set */.ZP.set(_this9.$technologyCards[i].querySelector(\'.info\'), {\n                display: \'flex\'\n              });\n              node_modules_gsap/* default.to */.ZP.to(_this9.$technologyCards[i].querySelector(\'.info\'), {\n                opacity: 1,\n                duration: 0.8,\n                ease: \'expo.out\'\n              });\n            });\n\n            if (_this9.$technologyCards[i].querySelector(\'.closer\')) {\n              _this9.domEvents.add(_this9.$technologyCards[i].querySelector(\'.closer\'), \'click\', function (e) {\n                node_modules_gsap/* default.to */.ZP.to(_this9.$technologyCards[i].querySelector(\'.info\'), {\n                  opacity: 0.0001,\n                  duration: 0.8,\n                  ease: \'expo.out\',\n                  onComplete: function onComplete() {\n                    node_modules_gsap/* default.set */.ZP.set(_this9.$technologyCards[i].querySelector(\'.info\'), {\n                      display: \'none\'\n                    });\n                  }\n                });\n              });\n            }\n          } // Selectors\n\n\n          _this9.$technologySlider = _this9.$technology.querySelector(\'.slider\');\n          _this9._technologyDraggable = new superDraggable_default({\n            el: _this9.$technology,\n            snap: false,\n            snapTo: \'center\',\n            dots: false\n          });\n        }\n      };\n\n      for (var i = 0; i < this.$technologyCards.length; i++) {\n        _loop2(i);\n      }\n    }\n  }, {\n    key: "initTechnologyPin",\n    value: function initTechnologyPin() {\n      var _this10 = this;\n\n      this.$technologyWords = this.$technology.querySelector(\'.words\');\n      this.$technologyWordsInner = this.$technologyWords.querySelector(\'.words__inner\');\n      this.$technologyWordsGradient = this.$technologyWords.querySelector(\'.words__gradient\');\n      this.$technologyLabel = this.$technology.querySelector(\'.label--1\');\n\n      var _offset = this.$technologyWordsInner.offsetHeight - this.$technologyWordsGradient.offsetHeight;\n\n      this._technologyPin = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$technologyWords,\n        start: \'top top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        markers: false,\n        onUpdate: function onUpdate(self) {\n          node_modules_gsap/* default.set */.ZP.set(_this10.$technologyLabel, {\n            y: _offset * self.progress + \'px\'\n          });\n          node_modules_gsap/* default.set */.ZP.set(_this10.$technologyWordsGradient, {\n            y: _offset * self.progress + \'px\'\n          });\n        },\n        onEnter: function onEnter() {\n          node_modules_gsap/* default.to */.ZP.to(_this10.$technologyWordsGradient, {\n            opacity: 1,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          node_modules_gsap/* default.to */.ZP.to(_this10.$technologyWordsGradient, {\n            opacity: 1,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        }\n      });\n    }\n  }, {\n    key: "initPlatformsDraggable",\n    value: function initPlatformsDraggable() {\n      // Selectors\n      this.$platformsSlider = this.$platforms.querySelector(\'.slider\');\n      this.$platformsSliderItems = this.$platformsSlider.querySelectorAll(\'.slider__item\');\n\n      if (this.appStore.isDesktop) {\n        if (this.$platformsSliderItems.length > 4) {\n          this._platformsDraggable = new superDraggable_default({\n            el: this.$platforms,\n            snap: false,\n            snapTo: \'center\',\n            dots: false\n          });\n        }\n      } else {\n        this._platformsDraggable = new superDraggable_default({\n          el: this.$platforms,\n          snap: false,\n          snapTo: \'center\',\n          dots: true\n        });\n      }\n    }\n  }, {\n    key: "raf",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: "resize",\n    value: function resize(width, height) {\n      if (this._platformsDraggable) this._platformsDraggable.resize();\n\n      if (this.appStore.isDesktop) {\n        if (this.home1) this.home1.onResize();\n        if (this.home2) this.home2.onResize();\n        if (this.home3) this.home3.onResize();\n        if (this.home4) this.home4.onResize();\n      } else {\n        if (this._dataDraggable) this._dataDraggable.resize();\n        if (this._solutionsDraggable) this._solutionsDraggable.resize();\n        if (this._technologyDraggable) this._technologyDraggable.resize();\n      }\n    }\n  }, {\n    key: "leave",\n    value: function leave() {\n      if (this.appStore.isDesktop) {\n        this.home1.kill();\n        this.home1 = null;\n        this.home2.kill();\n        this.home2 = null;\n        this.home3.kill();\n        this.home3 = null;\n        this.home4.kill();\n        this.home4 = null;\n      } else {\n        this.home1_m.kill();\n        this.home1_m = null;\n        this.home2a_m.kill();\n        this.home2a_m = null;\n        this.home2b_m.kill();\n        this.home2b_m = null;\n      }\n    }\n  }]);\n\n  return RendererHome;\n}(renderer); // Don\'t forget to export your renderer\n\n\n/* harmony default export */ const rendererHome = (RendererHome);\n;// CONCATENATED MODULE: ./app/src/js/webgl/EventProcess.js\nfunction EventProcess_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction EventProcess_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction EventProcess_createClass(Constructor, protoProps, staticProps) { if (protoProps) EventProcess_defineProperties(Constructor.prototype, protoProps); if (staticProps) EventProcess_defineProperties(Constructor, staticProps); return Constructor; }\n\n//import * as THREE from "three"\n\n\n\nvar EventProcess_events = __webpack_require__(7187);\n\nvar EventProcess = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  function EventProcess(obj) {\n    EventProcess_classCallCheck(this, EventProcess);\n\n    //console.log("(EventProcess.CONSTRUCTORA): ", obj)\n    this.timeSec = obj.timeSec || 1; //--\n\n    this.processTimeSec = null;\n    this.refTimeSec = null;\n    this.process = 0;\n    this.t = 0;\n    this.ticker = null; //--\n\n    this.emitter = new EventProcess_events.EventEmitter();\n  }\n\n  EventProcess_createClass(EventProcess, [{\n    key: "start",\n    value: function start(easingFunc, pauseSecs) {\n      var _this = this;\n\n      //console.log("(EventProcess.start): ", pauseSecs)\n      if (pauseSecs == 0) {\n        this.easingFunc = easingFunc || Easing.Linear.None; //--\n\n        gsap.ticker.remove(this.onTick); //console.log(this.easingFunc)\n\n        this.onTick = this._update.bind(this);\n        this.refTimeSec = this._get_tickerTime();\n        gsap.ticker.add(this.onTick);\n      } else {\n        //this.binded_start = this.start.bind(this)\n        gsap.delayedCall(pauseSecs, function () {\n          return _this.start(easingFunc, 0);\n        });\n      }\n    }\n  }, {\n    key: "get_process",\n    value: function get_process() {\n      return this.process;\n    } //-----------------------------------------\n\n  }, {\n    key: "_get_tickerTime",\n    value: function _get_tickerTime() {\n      return gsap.ticker.time;\n    }\n  }, {\n    key: "_update",\n    value: function _update() {\n      var tickerTime = this._get_tickerTime();\n\n      this.processTimeSec = tickerTime - this.refTimeSec;\n\n      if (this.processTimeSec >= this.timeSec) {\n        this.processTimeSec = this.timeSec;\n        gsap.ticker.remove(this.onTick); //--\n\n        this.emitter.emit("onProcessEnd");\n      }\n\n      this.t = this.processTimeSec / this.timeSec;\n      this.process = this.easingFunc(this.t); //console.log("t: "+this.t+" - process: "+this.process)\n    }\n  }]);\n\n  return EventProcess;\n}()));\n\n/* harmony default export */ const webgl_EventProcess = ((/* unused pure expression or super */ null && (EventProcess)));\n;// CONCATENATED MODULE: ./app/src/js/webgl/solutions1/Solutions1Geometry.js\nfunction Solutions1Geometry_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Solutions1Geometry_typeof = function _typeof(obj) { return typeof obj; }; } else { Solutions1Geometry_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Solutions1Geometry_typeof(obj); }\n\nfunction Solutions1Geometry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Solutions1Geometry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Solutions1Geometry_createClass(Constructor, protoProps, staticProps) { if (protoProps) Solutions1Geometry_defineProperties(Constructor.prototype, protoProps); if (staticProps) Solutions1Geometry_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Solutions1Geometry_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Solutions1Geometry_setPrototypeOf(subClass, superClass); }\n\nfunction Solutions1Geometry_setPrototypeOf(o, p) { Solutions1Geometry_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Solutions1Geometry_setPrototypeOf(o, p); }\n\nfunction Solutions1Geometry_createSuper(Derived) { var hasNativeReflectConstruct = Solutions1Geometry_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Solutions1Geometry_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Solutions1Geometry_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Solutions1Geometry_possibleConstructorReturn(this, result); }; }\n\nfunction Solutions1Geometry_possibleConstructorReturn(self, call) { if (call && (Solutions1Geometry_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Solutions1Geometry_assertThisInitialized(self); }\n\nfunction Solutions1Geometry_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Solutions1Geometry_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Solutions1Geometry_getPrototypeOf(o) { Solutions1Geometry_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Solutions1Geometry_getPrototypeOf(o); }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar Solutions1Geometry_EventEmitter = __webpack_require__(7187);\n\nvar Solutions1Geometry = /*#__PURE__*/function (_EventEmitter) {\n  Solutions1Geometry_inherits(Solutions1Geometry, _EventEmitter);\n\n  var _super = Solutions1Geometry_createSuper(Solutions1Geometry);\n\n  function Solutions1Geometry(obj) {\n    var _this;\n\n    Solutions1Geometry_classCallCheck(this, Solutions1Geometry);\n\n    //console.log("(Solutions1Geometry.CONSTRUCTORA): ", obj)\n    _this = _super.call(this); //--\n\n    _this.factor = obj.factor; //6\n\n    _this.incr_radio = obj.incr_radio; //25\n\n    _this.numOrbits = obj.numOrbits; //37\n\n    _this.array_triangular = obj.array_triangular;\n    _this.numDots = obj.numDots; //--\n\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_dot_num: new Float32Array(_this.numDots * 1),\n      a_orbital: new Float32Array(_this.numDots * 1),\n      a_pos_orbita: new Float32Array(_this.numDots * 1),\n      a_incr_anguloRad: new Float32Array(_this.numDots * 1),\n      a_anguloRad: new Float32Array(_this.numDots * 1),\n      a_radio: new Float32Array(_this.numDots * 1),\n      a_dir: new Float32Array(_this.numDots * 1),\n      a_incr: new Float32Array(_this.numDots * 1),\n      a_x: new Float32Array(_this.numDots * 1),\n      a_y: new Float32Array(_this.numDots * 1),\n      a_z: new Float32Array(_this.numDots * 1),\n      a_dotFactor: new Float32Array(_this.numDots * 1)\n    }; //--\n\n    for (var i = 0; i < _this.numDots; i++) {\n      var dot = _this._get_dot(i);\n\n      var i3 = i * 3;\n      _this.attributes.a_posiciones[i3] = dot.x;\n      _this.attributes.a_posiciones[i3 + 1] = dot.y;\n      _this.attributes.a_posiciones[i3 + 2] = dot.z; //--\n\n      _this.attributes.a_dot_num[i] = i;\n      _this.attributes.a_orbital[i] = dot.orbital;\n      _this.attributes.a_pos_orbita[i] = dot.pos_orbita;\n      _this.attributes.a_incr_anguloRad[i] = dot.incr_anguloRad;\n      _this.attributes.a_anguloRad[i] = dot.anguloRad;\n      _this.attributes.a_radio[i] = dot.radio;\n      _this.attributes.a_dir[i] = dot.dir;\n      _this.attributes.a_incr[i] = dot.incr;\n      _this.attributes.a_x[i] = dot.y;\n      _this.attributes.a_y[i] = dot.y;\n      _this.attributes.a_z[i] = dot.z;\n      _this.attributes.a_dotFactor[i] = i / _this.numDots; // El punto mas interior tiene 1 y el mas exterior tiene 0\n    } //--\n\n\n    _this.loaded = false; //console.log(this.attributes.a_dot_num)\n\n    return _this;\n  }\n\n  Solutions1Geometry_createClass(Solutions1Geometry, [{\n    key: "init",\n    value: function init() {\n      //console.log("(Solutions1Geometry.init)!")\n      //--\n      //--\n      this.emit("onMeshLoaded", {\n        ref: this\n      });\n    } //------------------------------------------\n    // PRIVADAS\n\n  }, {\n    key: "_get_dot",\n    value: function _get_dot(num) {\n      // Devuelve un objeto con la informaciín de un punto de la geometria "orbital MIOTI"\n      var obj = {\n        num: num,\n        x: 0,\n        y: 0,\n        z: 0,\n        orbital: 0,\n        co_orbitantes: 0,\n        pos_orbita: 0,\n        incr_anguloRad: 0,\n        anguloRad: 0,\n        radio: 0\n      }; //--\n\n      for (var i = 0; i <= this.array_triangular.length; i++) {\n        var limSup = this.array_triangular[i]; //console.log("limSup: "+limSup)\n\n        if (num > limSup) {\n          // console.log("*")\n          obj.orbital = i + 1;\n          obj.co_orbitantes = (i + 1) * this.factor;\n          obj.pos_orbita = num - limSup - 1;\n          obj.incr_anguloRad = 2 * Math.PI / obj.co_orbitantes;\n\n          if (obj.orbital % 2 == 0) {\n            obj.dir = 1;\n            obj.incr = 0;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad;\n          } else {\n            obj.dir = -1;\n            obj.incr = 1;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad + obj.incr_anguloRad / 2;\n          }\n\n          obj.radio = obj.orbital * this.incr_radio; //--\n\n          obj.x = Math.cos(obj.anguloRad) * obj.radio;\n          obj.y = Math.sin(obj.anguloRad) * obj.radio;\n          obj.z = 0;\n        } //break\n\n      }\n\n      return obj;\n    }\n  }]);\n\n  return Solutions1Geometry;\n}(Solutions1Geometry_EventEmitter);\n\n/* harmony default export */ const solutions1_Solutions1Geometry = (Solutions1Geometry);\n;// CONCATENATED MODULE: ./app/src/js/webgl/solutions1/shaders/solutions1_dots_vertex.glsl\n/* harmony default export */ const solutions1_dots_vertex = ("#define GLSLIFY 1\\nattribute vec3 a_randomness;\\nattribute vec3 a_geo1_position;\\nattribute float a_geo1_dot_num;\\nattribute float a_geo1_orbital;\\nattribute float a_geo1_pos_orbita;\\nattribute float a_geo1_incr_anguloRad;\\nattribute float a_geo1_anguloRad;\\nattribute float a_geo1_incr;\\nattribute float a_geo1_dir;\\nattribute float a_geo1_radio;\\nattribute float a_geo1_dotFactor;\\n\\nattribute vec3 a_geo2_position;\\nattribute vec3 a_geo3_position;\\n\\nuniform float uTime;\\nuniform float uCamaraDistance;\\nuniform float uScrollSpeed;\\nuniform float uScale;\\nuniform float uResponsiveScale;\\nuniform float uScrollDelta;\\nuniform float uScrollProgress;\\nuniform float uMorphingProgress;\\nuniform float uIntroProgress;\\nuniform float uTransitionProgress;\\nuniform float uWidth;\\nuniform float uHeight;\\n\\nuniform float uRotation1;\\nuniform float uRotation2;\\nuniform float uRotation3;\\nuniform float uRotationInner;\\nuniform float uRotationOutter;\\n\\n// varying vec3 vPosition;\\n//varying vec2 vUv;\\nvarying vec3 v_randomness;\\nvarying float v_colorStrength;\\n\\nvarying float v_alpha; // Es el alpha de los puntos determinado sobre si estan en orbitales ocultos o visibles\\nvarying float v_activePulse;\\nvarying float v_activePulseProgress;\\nvarying float v_test;\\n\\n#define PI 3.1415926538\\n//#define PI 3.1415926535897932384626433832795\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat cnoise(vec3 P){\\n  vec3 Pi0 = floor(P); // Integer part for indexing\\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 / 7.0;\\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 / 7.0;\\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n  return 2.2 * n_xyz;\\n}\\n\\nvec3 get_pos1(float anguloRad){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(anguloRad)*a_geo1_radio;\\n    float y = sin(anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nvec3 get_posScrollSpeed(vec3 pos){\\n    float factor = mix(1.0, 2.0, uScrollSpeed);\\n    pos = pos*factor;\\n    return pos;\\n}\\n\\nfloat get_escalaNoise(float x, float y, float amplitudMapa, float progress){\\n    float valor = cnoise(vec3(x/amplitudMapa, y/amplitudMapa, progress));\\n    valor = 0.5+(valor/2.);\\n    valor *=2.;\\n    return valor;\\n}\\n\\nfloat get_escalaOndaRadial(float orbital, float progress){\\n    float frecuencia = 0.5; // Valores bajos ondas mas largas, valores altos ondas mas cortas\\n    float seno = (sin((progress+orbital)*frecuencia)+1.)/2.;\\n\\n    float valor = 0.5+(seno*0.5);\\n\\n    return valor;\\n}\\n\\nfloat get_escalaEdge(float orbital){\\n    float value = 1.;\\n    float orbitalMax = 37.;\\n    float fadeLimit = 22.;\\n    float fadeScale = 1.;\\n    float rango = orbitalMax -fadeLimit;\\n    if(orbital >= fadeLimit){\\n        float orbitalRel = orbital -fadeLimit;\\n        float ratio = orbitalRel/rango;\\n        fadeScale = fadeScale-ratio;\\n    }\\n    return fadeScale;\\n}\\n\\nvec3 randomizePosition(vec3 oldPos, vec3 randomness, float time, float amplitude, float amount, float speed){\\n    time = time*speed;\\n    vec3 newPos = oldPos;\\n    newPos.x += sin(time * randomness.x) * (amplitude*amount);\\n    newPos.y += cos(time * randomness.y) * (amplitude*amount);\\n    newPos.z += cos(time * randomness.z) * (amplitude*amount);\\n    return newPos;\\n}\\n\\nfloat quinticOut(float t) {\\n  return (pow(t - 1.0, 5.0));\\n}\\n\\nfloat quadraticOut(float t) {\\n  return -t * (t - 2.0);\\n}\\n\\nfloat quarticOut(float t) {\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\n}\\n\\nfloat cubicIn(float t) {\\n  return t * t * t;\\n}\\nfloat cubicOut(float t) {\\n  float f = t - 1.0;\\n  return f * f * f + 1.0;\\n}\\n\\nmat4 rotationMatrix(vec3 axis, float angle) {\\n    axis = normalize(axis);\\n    float s = sin(angle);\\n    float c = cos(angle);\\n    float oc = 1.0 - c;\\n    \\n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\\n                0.0,                                0.0,                                0.0,                                1.0);\\n}\\n\\nvec3 rotate(vec3 v, vec3 axis, float angle) {\\n\\tmat4 m = rotationMatrix(axis, angle);\\n\\treturn (m * vec4(v, 1.0)).xyz;\\n}\\n\\nvoid main() {\\n\\n    //----------------------------------------------------------\\n    // DECLARATIONS:\\n    //float twentiethX = (uWidth/20.);\\n    float twentiethX = (1920./20.); //1920. es el this.REF_RESOLUTION.width\\n    float anguloRad_time = a_geo1_anguloRad;\\n\\n    vec3 POSITION_ORIGINAL;\\n    vec3 POSITION_1;\\n    vec3 POSITION_1B;\\n    vec3 POSITION_2;\\n\\n    float SIZE_1 = 0.0;\\n    float SIZE_2 = 5.0;\\n\\n    v_alpha = 0.05;\\n\\n    //----------------------------------------------------------\\n    // SORTING\\n    //float rotation1_5 = mix(uRotation1, uRotation3, 0.5);\\n    float hardDotSpeedFactor = 200.;\\n    float softDotSpeedFactor = 36.;\\n    float rotation5 = mix(uRotationInner, uRotationOutter, ((a_geo1_orbital)*0.5)/softDotSpeedFactor);\\n    float rotation10 = mix(uRotationInner, uRotationOutter, ((a_geo1_orbital)*0.5)/softDotSpeedFactor);\\n    float rotation15 = mix(uRotationInner, uRotationOutter, ((a_geo1_orbital)*0.5)/softDotSpeedFactor);\\n\\n    vec3 rand = vec3(a_randomness.x*1., -a_randomness.y*1., a_randomness.z*1.);\\n\\n    if(abs(a_geo1_orbital-5.) < 0.5){ // Detecta el orbital 5\\n        anguloRad_time = (a_geo1_anguloRad+rotation5);\\n        SIZE_1 = 3.0;\\n        v_alpha = 1.0;\\n        rand = vec3(0., -1., 0.);\\n\\n    }else if(abs(a_geo1_orbital-10.) < 0.5){ // Detecta el orbital 10\\n        anguloRad_time = -(a_geo1_anguloRad+rotation10);\\n        SIZE_1 = 3.0;\\n        v_alpha = 1.0;\\n        rand = vec3(0., -1., 0.);\\n\\n    }else if(abs(a_geo1_orbital-15.) < 0.5){ // Detecta el orbital 15\\n        anguloRad_time = a_geo1_anguloRad+rotation15;\\n        SIZE_1 = 3.0;\\n        v_alpha = 1.0;\\n        rand = vec3(0., -1., 0.);\\n    }else{\\n        float filteredOrbital = clamp(a_geo1_orbital, 0., 20.);\\n        anguloRad_time =  a_geo1_anguloRad + mix(uRotationInner, uRotationOutter, a_geo1_orbital/softDotSpeedFactor);\\n        //anguloRad_time = a_geo1_anguloRad+rotation15;\\n        //SIZE_1 = 10.0 * uTransitionProgress;\\n        //SIZE_1 = 2.0;\\n        SIZE_1 = mix(2., 10., uTransitionProgress);\\n        //v_alpha = 0.05; // * uTransitionProgress;\\n        //v_alpha = 0.10;//*uTransitionProgress;\\n        v_alpha = mix(0.07, 0.10, uTransitionProgress);\\n\\n    }\\n    //----------------------------------------------------------\\n    // POSITION:\\n    // Geometries presentes:\\n    //--\\n\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(uScrollProgress*a_geo1_dir*2.2);\\n    POSITION_ORIGINAL = get_pos1(anguloRad_time);\\n    POSITION_1 = POSITION_ORIGINAL;\\n    //POSITION_1 = rotate(POSITION_1, vec3(0., -1, 0.), 0.5*PI);\\n    POSITION_1.x += -twentiethX*2.;\\n\\n    POSITION_1B = POSITION_ORIGINAL;\\n    POSITION_1B *= 1.;\\n    POSITION_1B.x += twentiethX*10.; \\n\\n    // float orbitalFactor = a_geo1_orbital/37.;\\n    // float foo = mix(1., 10., orbitalFactor);\\n    // float ease = cubicOut(uTransitionProgress*foo);\\n    // ease = clamp(ease, 0., 1.);\\n    POSITION_1 = mix(POSITION_1, POSITION_1B, uTransitionProgress);\\n\\n    float angle = mix(-PI, 0., uTransitionProgress);\\n    POSITION_1 = rotate(POSITION_1, rand, angle);\\n\\n    POSITION_2 = a_geo2_position;\\n    POSITION_2 = randomizePosition(POSITION_2, a_randomness, uTime, 5.0, uMorphingProgress, 5.);\\n    // Z modifications:\\n\\n    // Solo\\n    \\n    // Ondas de seno:\\n    //float senoFx = sin((-uTime+a_geo1_orbital))*0.5*0.5;\\n    //float escalaFx = mix(0.98, 1.02, senoFx);\\n    //POSITION_1 *= escalaFx;\\n    // Morphing:\\n    float clamped_morpingProgress = clamp(0., 0.95, uMorphingProgress);\\n    POSITION_1 = mix(POSITION_1, POSITION_2, clamped_morpingProgress);\\n    // Randomized position while in POSITION_2\\n    POSITION_1 = randomizePosition(POSITION_1, a_randomness*2., uTime, 5.0, uMorphingProgress, 2.5);\\n    // Escala por scroll delta:\\n    //POSITION_1 *= 1.+(uScrollDelta*0.2);\\n    // Escalado incial:\\n    //POSITION_1 *= mix(5., 1., quinticOut(uIntroProgress));\\n    //POSITION_1 *= mix(5., 1., quadraticOut(uIntroProgress));\\n    //float clamped_uIntroProgress;\\n    // clamped_uIntroProgress = uIntroProgress;\\n    //clamped_uIntroProgress = clamp(uIntroProgress, 0., 1.);\\n    //POSITION_1 *= mix(5., 1., quarticOut(clamped_uIntroProgress));\\n    POSITION_1 *= mix(5., 1., uIntroProgress);\\n    // Responsive Scale:\\n    POSITION_1 *= uResponsiveScale;\\n    //\\n    POSITION_1 = mix(POSITION_1, POSITION_2, uMorphingProgress);\\n    //----------------------------------------------------------\\n\\n    //----------------------------------------------------------\\n    // SIZE:\\n    \\n\\n    // Solo se ven los obitales 5, 10 y 15\\n\\n    // Los puntos son mas pequeños en los orbitales de la periferia\\n    float esclaEdege = get_escalaEdge(a_geo1_orbital); \\n    float rango = 1.-esclaEdege;\\n    SIZE_1 *= (esclaEdege + (rango*0.0));\\n    // Los puntos se escalan en base a un mapa de ruido\\n    //SIZE_1 *= mix(1., get_escalaNoise(POSITION_1.x, POSITION_1.y, 500., uProgress0), uProgress0b);\\n    //SIZE_1 *= mix(1., get_escalaNoise(POSITION_1.x, POSITION_1.y, 500., 1.0), 1.0);\\n    // Los puntos se escalan en base a ondas concentricas de seno:\\n    //SIZE_1 *= mix(1., get_escalaOndaRadial(a_geo1_orbital, -uTime*10.), uProgress4b);\\n    //SIZE_1 *= mix(1., get_escalaOndaRadial(a_geo1_orbital, -uTime*10.), 1.0);\\n    // Los puntos se escalan por pulson random:\\n    //SIZE_1 *= mix(1., 1.5, v_activePulseProgress);\\n    // Los puntos se escalan junto con la geometria con el scrolldelta\\n    //SIZE_1 *= 1.+(uScrollDelta);\\n\\n    \\n\\n    \\n    // \\n    float zDepthNorm = (POSITION_2.z+600.)/(600.*2.); // de -600 a 600 de un valor normalizado (sin clamp, es decir que puede ser <0 y >1) de la posicion z\\n    float zDepthAlpha = mix(0.2, 0.9, zDepthNorm);\\n    float zDepthScale = mix(0.8, 2.5, zDepthNorm);\\n    float randomSize = SIZE_2 *0.5+(a_randomness.x*0.9);\\n    randomSize *= zDepthScale;\\n    SIZE_2 = mix(SIZE_2, randomSize, uMorphingProgress);\\n    \\n    \\n    float SIZE = mix(SIZE_1, SIZE_2, uMorphingProgress);\\n    // Los puntos se escalan si se redimensona el lienzo\\n    SIZE *= uResponsiveScale;\\n    \\n    \\n    //----------------------------------------------------------\\n\\n    //----------------------------------------------------------\\n    // VERTEX\\n    vec4 mvPosition = modelViewMatrix * vec4( POSITION_1, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n    gl_PointSize = SIZE*(uCamaraDistance/-mvPosition.z);\\n    //----------------------------------------------------------\\n\\n    \\n\\n    //----------------------------------------------------------\\n    // VARYINGS:\\n    v_randomness = a_randomness;\\n    v_colorStrength = get_escalaNoise(POSITION_1.x, POSITION_1.y, 200., sin(uTime));\\n    v_colorStrength = mix(1., v_colorStrength, uMorphingProgress);\\n\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/solutions1/shaders/solutions1_dots_fragment.glsl\n/* harmony default export */ const solutions1_dots_fragment = ("#define GLSLIFY 1\\nuniform vec3 uColor1;\\nuniform vec3 uColor2;\\nuniform vec3 uColorHero;\\nuniform float uIntroProgress;\\nuniform float uMorphingProgress;\\n\\nvarying float v_alpha; // Es el alpha de los puntos determinado sobre si estan en orbitales ocultos o visibles\\nvarying float v_colorStrength;\\n\\nfloat circulizar(float radio){\\n    // radio es un valor entre 0 y 1. 0 es 0 de radio y 1 es el maximo del radio dentro de\\n    radio = 1.0-(0.5*radio);\\n    float result = distance(gl_PointCoord, vec2(0.5, 0.5));\\n    result = 1. -result;\\n    result = pow(result, 1.);\\n    result = step(radio, result);\\n    return result;\\n}\\n\\nvoid main() {\\n\\n    //-------------------------------------------\\n    // COLOR:\\n    // Calculamos el color en la parte footer (cuando forma la M del logo)\\n    vec3 COLOR_FOOTER = mix(uColor2, uColor1, v_colorStrength);\\n    // En función del morphinPrpgress calculamos el color de ese momento\\n    vec3 COLOR = mix(uColorHero, COLOR_FOOTER, uMorphingProgress);\\n    //-------------------------------------------\\n\\n    //-------------------------------------------\\n    // ALPHA:\\n    // Creamos la forma circular:\\n    float ALPHA = circulizar(1.0);\\n    ALPHA *=  mix(v_alpha, 1., uMorphingProgress);\\n    // En la intro pasa de transparenta a corpóreo\\n    //ALPHA = mix(0., ALPHA, uIntroProgress);\\n    //-------------------------------------------\\n\\n    gl_FragColor = vec4(COLOR, ALPHA);\\n\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/solutions1/Solutions1Dots.js\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Solutions1Dots_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Solutions1Dots_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Solutions1Dots_createClass(Constructor, protoProps, staticProps) { if (protoProps) Solutions1Dots_defineProperties(Constructor.prototype, protoProps); if (staticProps) Solutions1Dots_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Solutions1Dots = /*#__PURE__*/function () {\n  function Solutions1Dots(obj) {\n    var _this = this;\n\n    Solutions1Dots_classCallCheck(this, Solutions1Dots);\n\n    //console.log("(Solutions1Dots.CONSTRUCTORA)!")\n    //console.log(obj)\n    this.worldGL = obj.worldGL; //--\n\n    this.scene = this.worldGL.scene;\n    this.cameraDistance = this.worldGL.cameraDistance; //--\n\n    this.material = null;\n    this.geometry = null;\n    this.mesh = null;\n    this.numParticles = null;\n    this.allLoaded = false;\n    this.created = false;\n    this.clock = new three_module/* Clock */.SUY();\n    this.startTime = null;\n    this.introTime = 1;\n    this.rotationX = 0;\n    this.rotationY = 0;\n    this.rotationWantedX = 0;\n    this.rotationWantedY = 0;\n    this.morphingProgress = 0; //--\n\n    this.transitionProgress = 0; //--\n\n    this.eventProgress_intro = new webgl_EventProgress();\n    this.hero_transition_done = false; //--\n\n    this.eased_rotation = new webgl_EasedOutValue(0, 0.05);\n    this.eased_scrollDelta = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.3, 0.05);\n    this.eased_scrollDelta_fast = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.5, 0.1);\n    this.eased_scrollProgress = new webgl_EasedOutValue(this.worldGL.settings.scroll_progress, 0.05); //--\n\n    this._setup_settings(); //--\n\n\n    this.orbital_geometry = new solutions1_Solutions1Geometry(this.settings); //--\n\n    this.M_geometry = new webgl_LoadedGeometry({\n      id: "M_geometry",\n      file: "",\n      isDraco: false,\n      scale: 600 //rotationY : -Math.PI*0.25\n\n    }, this.settings);\n    this.M_geometry.on("onMeshLoaded", function (data) {\n      _this._eval_allLoaded();\n    }); //--\n\n    this.resize(); //--\n\n    this.M_geometry.init();\n  } //------------------------------------\n  // PUBLICAS: \n\n\n  Solutions1Dots_createClass(Solutions1Dots, [{\n    key: "create",\n    value: function create() {\n      //console.log("(Solutions1Dots._create)!")\n      //--\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        depthWrite: false,\n        blending: three_module/* AdditiveBlending */.WMw,\n        //blending: THREE.NormalBlending,\n        //blending: THREE.MultiplyBlending,\n        vertexColors: true,\n        vertexShader: solutions1_dots_vertex,\n        fragmentShader: solutions1_dots_fragment,\n        transparent: true,\n        uniforms: {\n          uColor1: {\n            value: new three_module/* Color */.Ilk("#170e41")\n          },\n          //801c65\n          uColor2: {\n            value: new three_module/* Color */.Ilk("#801c65")\n          },\n          uColorHero: {\n            value: new three_module/* Color */.Ilk(this.worldGL.dotColor)\n          },\n          uTime: {\n            value: 0\n          },\n          uCamaraDistance: {\n            value: this.cameraDistance\n          },\n          uWidth: {\n            value: this.worldGL.width\n          },\n          uHeight: {\n            value: this.worldGL.height\n          },\n          uScrollDelta: {\n            value: 0\n          },\n          uScrollProgress: {\n            value: 1\n          },\n          uResponsiveScale: {\n            value: 1\n          },\n          uRotation1: {\n            value: 0\n          },\n          uRotation2: {\n            value: 0\n          },\n          uRotation3: {\n            value: 0\n          },\n          uRotationInner: {\n            value: 0\n          },\n          uRotationOutter: {\n            value: 0\n          },\n          uMorphingProgress: {\n            value: 0\n          },\n          uIntroProgress: {\n            value: 0\n          },\n          uTransitionProgress: {\n            value: 0\n          }\n        }\n      }); //--\n      //console.log(this.orbital_geometry.attributes.a_posiciones)\n      //--\n\n      this.geometry = new three_module/* BufferGeometry */.u9r();\n      this.geometry.setAttribute(\'position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_dot_num\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dot_num, 1));\n      this.geometry.setAttribute(\'a_geo1_orbital\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_orbital, 1));\n      this.geometry.setAttribute(\'a_geo1_pos_orbita\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_pos_orbita, 1));\n      this.geometry.setAttribute(\'a_geo1_incr_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_radio\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_radio, 1));\n      this.geometry.setAttribute(\'a_geo1_dir\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dir, 1));\n      this.geometry.setAttribute(\'a_geo1_incr\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr, 1));\n      this.geometry.setAttribute(\'a_geo1_x\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_x, 1));\n      this.geometry.setAttribute(\'a_geo1_y\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_y, 1));\n      this.geometry.setAttribute(\'a_geo1_z\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_z, 1));\n      this.geometry.setAttribute(\'a_geo1_dotFactor\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dotFactor, 1)); // El punto mas interior tiene 1 y el mas exterior tiene 0\n\n      this.geometry.setAttribute(\'a_geo2_position\', new three_module/* BufferAttribute */.TlE(this.M_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_randomness\', new three_module/* BufferAttribute */.TlE(this.M_geometry.attributes.a_randomness, 3));\n      this.mesh = new three_module/* Points */.woe(this.geometry, this.material); //this.mesh.rotation.set(Math.PI, 0, 0)\n      //this.mesh.rotation.set(0, 0, 0.5*Math.PI)\n\n      this.scene.add(this.mesh);\n      this.resize();\n    }\n  }, {\n    key: "onMouseUpdate",\n    value: function onMouseUpdate(mouseNormX, mouseNormY) {\n      //console.log("(Solutions1Dots.onMouseUpdate): "+this.morphingProgress)\n      if (this.morphingProgress > 0) {\n        //console.log("*")\n        this._mouseUpdateX(mouseNormX);\n\n        this._mouseUpdateY(mouseNormY);\n      }\n    }\n  }, {\n    key: "update_transitionProgress",\n    value: function update_transitionProgress(progress) {\n      this.transitionProgress = progress;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.allLoaded) {\n        //console.log("(Solutions1Dots.render)!")\n        //--\n        if (this.startTime == null) {\n          this.startTime = this.clock.getElapsedTime();\n        }\n\n        var introProgress = webgl_WebGLUtils.clamp((this.clock.getElapsedTime() - this.startTime) / this.introTime, 0, 1);\n        introProgress = easing_functions_default().Quartic.Out(introProgress);\n        this.material.uniforms.uIntroProgress.value = introProgress; //--\n\n        var rotationEasedY = this.rotationY + (this.rotationWantedY - this.rotationY) * 0.05;\n        this.rotationY = rotationEasedY;\n        this.mesh.rotation.y = rotationEasedY; ////--\n\n        var rotationEasedX = this.rotationX + (this.rotationWantedX - this.rotationX) * 0.05;\n        this.rotationX = rotationEasedX;\n        this.mesh.rotation.x = rotationEasedX; //--\n\n        this.material.uniforms.uTransitionProgress.value = easing_functions_default().Quartic.InOut(this.transitionProgress); //--\n        //const  meshRotation = Math.PI - (Math.PI*this.transitionProgress)\n        //this.mesh.rotation.set(meshRotation, 0, 0)\n        //--\n        //const rotationEased = this.rotation +((this.rotationWanted - this.rotation)*0.05)\n        //this.rotation = rotationEased\n        //this.mesh.rotation.y = rotationEased\n        //--\n\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uCamaraDistance.value = this.worldGL.cameraDistance;\n        this.material.uniforms.uResponsiveScale.value = this.worldGL.responsiveScale;\n        this.material.uniforms.uScrollDelta.value = -this.eased_scrollDelta.get(this.worldGL.settings.scroll_normalizedDelta * 0.5);\n        this.material.uniforms.uScrollProgress.value = this.worldGL.settings.scroll_progress;\n\n        if (this.worldGL.settings.morphingProgress <= 0.5) {\n          this.morphingProgress = 0;\n\n          this._mouseUpdateX(0);\n\n          this._mouseUpdateY(0);\n        } else {\n          this.morphingProgress = (this.worldGL.settings.morphingProgress - 0.5) * 2;\n        } //console.log("this.morphingProgress: "+this.morphingProgress)\n        //--\n\n\n        this.material.uniforms.uMorphingProgress.value = this.morphingProgress;\n        var extraSpeed = 1 + Math.abs(this.eased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5) * 10);\n        this.settings.rotation1 += this.settings.speedRotation1 * extraSpeed;\n        this.settings.rotation2 += this.settings.speedRotation2 * extraSpeed;\n        this.settings.rotation3 += this.settings.speedRotation3 * extraSpeed; //--\n\n        this.settings.rotationInner += this.settings.speedRotationInner * extraSpeed;\n        this.settings.rotationOutter += this.settings.speedRotationOutter * extraSpeed; //console.log("extraSpeed: "+extraSpeed)\n        //console.log(this.settings.rotation1)\n\n        this.material.uniforms.uRotation1.value = this.settings.rotation1;\n        this.material.uniforms.uRotation2.value = -this.settings.rotation2;\n        this.material.uniforms.uRotation3.value = this.settings.rotation3; //--\n\n        this.material.uniforms.uRotationInner.value = this.settings.rotationInner;\n        this.material.uniforms.uRotationOutter.value = this.settings.rotationOutter;\n      }\n    }\n  }, {\n    key: "resize",\n    value: function resize() {// NADA\n    } //------------------------------------\n    // PRIVADAS: \n\n  }, {\n    key: "_mouseUpdateX",\n    value: function _mouseUpdateX(mouseNormX) {\n      var maxAngleRad = Math.PI * 0.25;\n      this.rotationWantedY = maxAngleRad * mouseNormX * this.morphingProgress;\n    }\n  }, {\n    key: "_mouseUpdateY",\n    value: function _mouseUpdateY(mouseNormY) {\n      var maxAngleRad = Math.PI * 0.1;\n      this.rotationWantedX = maxAngleRad * mouseNormY * this.morphingProgress;\n    }\n  }, {\n    key: "_eval_allLoaded",\n    value: function _eval_allLoaded() {\n      if (this.M_geometry.loaded) {\n        this.allLoaded = true;\n        this.worldGL.eval_start(); //this._create()\n      }\n    }\n  }, {\n    key: "_setup_settings",\n    value: function _setup_settings() {\n      var _this$settings;\n\n      var speedBase = 0.002;\n      var speedBase2 = 0.0002; //console.log("(Solutions1Dots._setup_settings)!")\n\n      this.settings = (_this$settings = {\n        factor: 6,\n        incr_radio: 25,\n        numOrbits: 37,\n        arrayOrbits: [5, 10, 15],\n        //--\n        rotationInner: 0,\n        speedRotationInner: 20 * speedBase2,\n        rotationOutter: 0,\n        speedRotationOutter: 1 * speedBase2,\n        //--\n        speedRotation1: 3 * speedBase,\n        rotation1: 0\n      }, _defineProperty(_this$settings, "speedRotation1", 3 * speedBase), _defineProperty(_this$settings, "rotation2", 2), _defineProperty(_this$settings, "speedRotation2", 2 * speedBase), _defineProperty(_this$settings, "rotation3", 0), _defineProperty(_this$settings, "speedRotation3", 1 * speedBase), _this$settings);\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.numDots = this.settings.array_triangular[this.settings.array_triangular.length - 1];\n    }\n  }, {\n    key: "_get_array_triangular",\n    value: function _get_array_triangular(_factor, _numObits) {\n      // Genera una array de progresión triangular (* factor).\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _numObits; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        miArray.push(i * (i + 1) / 2 * _factor);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_array_dotPos",\n    value: function _get_array_dotPos(_arrayOrbits, _array_triangular, _array_triangular_dots_x_orbita) {\n      var miArray = [];\n\n      for (var i = 0; i < _arrayOrbits.length; i++) {\n        var orbitNum = _arrayOrbits[i];\n        var dots_x_orbit = _array_triangular_dots_x_orbita[i];\n        var dotNum_base = _array_triangular[_arrayOrbits[i] - 1]; // console.log("orbitNum: "+orbitNum)\n        // console.log("dots_x_orbit: "+dots_x_orbit)\n        // console.log("dotNum_base: "+dotNum_base)\n\n        for (var j = 0; j < dots_x_orbit; j++) {\n          miArray.push(dotNum_base + j + 1);\n        }\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_numDots",\n    value: function _get_numDots(_array_triangular_dots_x_orbita) {\n      var numDots = 0;\n\n      for (var i = 0; i <= _array_triangular_dots_x_orbita.length - 1; i++) {\n        numDots += _array_triangular_dots_x_orbita[i];\n      }\n\n      return numDots;\n    }\n  }, {\n    key: "_get_array_triangular_dots_x_orbita",\n    value: function _get_array_triangular_dots_x_orbita(_array_triangular, _arrayOrbits) {\n      // Genera una array basada en la progresión triangular (* factor).\n      // ... donde se indica el numero de dots por orbital\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _arrayOrbits.length - 1; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        var numDots_orbita_actual = _array_triangular[_arrayOrbits[i]];\n        var numDots_orbita_anterior = _array_triangular[_arrayOrbits[i] - 1];\n        var numDots_orbita = numDots_orbita_actual - numDots_orbita_anterior;\n        miArray.push(numDots_orbita);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_createcube",\n    value: function _createcube(_scene) {\n      var geometry = new three_module/* SphereGeometry */.xo$(100 * this.worldGL.responsiveScale, 100, 100);\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        color: 0x00ff00\n      });\n      var cube = new three_module/* Mesh */.Kj0(geometry, material);\n      cube.position.setX(this.worldGL.width * 0.5);\n      cube.position.setY(this.worldGL.height * 0.5);\n      cube.quaternion.copy(this.worldGL.camera.quaternion);\n\n      _scene.add(cube);\n    }\n  }]);\n\n  return Solutions1Dots;\n}();\n\n/* harmony default export */ const solutions1_Solutions1Dots = (Solutions1Dots);\n;// CONCATENATED MODULE: ./app/src/js/webgl/solutions1/Solutions1App.js\nfunction Solutions1App_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Solutions1App_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Solutions1App_createClass(Constructor, protoProps, staticProps) { if (protoProps) Solutions1App_defineProperties(Constructor.prototype, protoProps); if (staticProps) Solutions1App_defineProperties(Constructor, staticProps); return Constructor; }\n\n// FPS-Meter:\n//(function(){var script=document.createElement(\'script\');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src=\'//cdn.jsdelivr.net/gh/Kevnz/stats.js/build/stats.min.js\';document.head.appendChild(script);})()\n\n\n\n\n\n\nvar Solutions1App_EventEmitter = __webpack_require__(7187);\n\n\n\n\n\nvar Solutions1App = /*#__PURE__*/function () {\n  function Solutions1App(obj) {\n    var _this = this;\n\n    Solutions1App_classCallCheck(this, Solutions1App);\n\n    //console.log("(Solutions1App.CONSTRUCTORA)!", obj) \n    this.hw_renderer = obj.renderer; // Rederer/pagina de HighWay. No confundir con el render/renderer de Three.js\n\n    this.$container = obj.domElement;\n    this.dotColor = obj.dotColor; //--\n\n    this.events = new Solutions1App_EventEmitter(); //--\n\n    this.REF_RESOLUTION = {\n      width: 1920,\n      height: 947\n    };\n    this.REF_CAMERA_DISTANCE = 500; //--\n\n    this.initialized = false; //--\n\n    this.width = this.$container.offsetWidth;\n    this.height = this.$container.offsetHeight;\n    this.responsiveScale = this.width / this.REF_RESOLUTION.width;\n    this.cameraDistance = this.REF_CAMERA_DISTANCE * (this.height / this.REF_RESOLUTION.height); //--\n    //this.$main = document.querySelector(\'.inner\')\n    //this.$hero = document.querySelector(\'.hero\')\n    //this.$footer = document.querySelector(\'.footer\')\n    //this.$image = document.querySelector(\'.ai__hero .image\')\n    //var rect = this.$image.getBoundingClientRect();\n    //console.log(rect.top, rect.right, rect.bottom, rect.left);\n\n    document.addEventListener(\'mousemove\', function (self) {\n      _this.onMouseUpdate(self);\n    }, false);\n    document.addEventListener(\'wheel\', function (self) {\n      _this.onMouseUpdate(self);\n    }, false); //--\n\n    this.MAIN_ACTIVE = false;\n    this.FOOTER_ACTIVE = false; //--\n\n    this.mouseNorm = {\n      x: 0,\n      y: 0\n    }; //--\n    //--\n\n    this.settings = {\n      scroll_lastInnerY: 0,\n      // Ultima posición del elemento de referencia\n      scroll_delta: 0,\n      // Incremento de pixels del scroll\n      scroll_limitedDelta: 0,\n      // Limita los valores a -20 -> +20\n      scroll_normalizedDelta: 0,\n      // Pasa el delta a -1 -> +1\n      scroll_factordDelta: 1,\n      // Valores absolutos de 0 -> 1\n      scroll_direction: 1,\n      // Direccion del delta. 1 si está parado\n      scroll_hero_progress: 0,\n      scroll_footer_progress: 0,\n      morphingProgress: 0\n    }; //--\n    // Scene\n\n    this.scene = new three_module/* Scene */.xsS(); //this.scene.background = new THREE.Color(0x333333)\n    //--\n    // Camera\n    //PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\n\n    this.camera = new three_module/* PerspectiveCamera */.cPb(30, this.width / this.height, 0.1, 2000);\n    this.camera.position.z = this.cameraDistance; //console.log("this.camera.fov: "+this.camera.fov)\n\n    this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //console.log("this.camera.fov: "+this.camera.fov)\n    //--\n    // Renderer\n\n    this.renderer = new three_module/* WebGL1Renderer */.b5g({\n      antialias: true,\n      alpha: true\n    }); //this.renderer.autoClear = false // Vamos a usar 2 scenas (una para el background y otra para los puntos) que implicarán usar 2 acciones de render. Con autoclear false permitimos que la segunda no borre la primera.\n\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1)); //--\n    //console.log("this.$container: ",this.$container)\n\n    this.$container.appendChild(this.renderer.domElement); //--\n    //--\n\n    /*\n    this.background = new Solutions1Background({\n        worldGL:this,\n    })\n    */\n    //--\n\n    this.dots = new solutions1_Solutions1Dots({\n      worldGL: this\n    }); //--\n\n    this._resize(); //this._render();\n    //this._init_scrollListeners()\n\n  } //---------------------------\n  // PUBLICAS:\n\n\n  Solutions1App_createClass(Solutions1App, [{\n    key: "init",\n    value: function init() {\n      //console.log("(Solutions1App.init)!") \n      this.initialized = true;\n      this.eval_start();\n    }\n  }, {\n    key: "eval_start",\n    value: function eval_start() {\n      //console.log("(Solutions1App.eval_start): "+this.initialized+":"+this.dots.allLoaded) \n      if (this.initialized && this.dots.allLoaded) {\n        //console.log("START!")\n        //--\n        this.$main = document.querySelector(\'.inner\');\n        this.$hero = document.querySelector(\'.hero\');\n        this.$footer = document.querySelector(\'.footer\');\n        this.$image = document.querySelector(\'.ai__hero .image\'); //--\n\n        this.dots.create();\n\n        this._render();\n\n        this._init_scrollListeners();\n      }\n    }\n  }, {\n    key: "kill",\n    value: function kill() {\n      //console.log("(Solutions1App.kill)!") \n      this.$inner_trigger.kill();\n      this.$hero_trigger.kill();\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_render);\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_eval_scroll);\n      this.dots = null;\n    } //---------------------------\n\n  }, {\n    key: "onResize",\n    value: function onResize() {\n      //console.log("(Solutions1App.onResize)!")\n      this._resize();\n    }\n  }, {\n    key: "onMouseUpdate",\n    value: function onMouseUpdate(e) {\n      if (this.FOOTER_ACTIVE) {\n        //console.log("(Solutions1App.onMouseUpdate)!")\n        this.mouseNorm.x = e.pageX / this.width * 2 - 1;\n        this.mouseNorm.y = e.pageY / this.height * 2 - 1;\n\n        if (this.dots) {\n          this.dots.onMouseUpdate(this.mouseNorm.x, this.mouseNorm.y);\n        }\n      }\n    } //---------------------------\n    // PRIVADAS:\n\n  }, {\n    key: "_init_scrollListeners",\n    value: function _init_scrollListeners() {\n      var _this2 = this;\n\n      //console.log("(Solutions1App._init_scrollListeners)!")\n      var binded_render = function binded_render() {\n        _this2._render();\n      };\n\n      this._binded_render = binded_render;\n\n      var binded_eval_scroll = function binded_eval_scroll() {\n        _this2._eval_inertia_scroll(_this2.$inner_trigger.progress);\n\n        _this2._eval_hero_scroll(_this2.$hero_trigger.progress);\n\n        _this2._eval_footer_scroll(_this2.$footer_trigger.progress);\n      };\n\n      this._binded_eval_scroll = binded_eval_scroll;\n      var that = this;\n      this.$inner_trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$main,\n        start: \'top-=10 top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            //console.log("MAIN ACTIVE")\n            that.MAIN_ACTIVE = true;\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_render);\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_eval_scroll);\n          } else {\n            that.MAIN_ACTIVE = false; //console.log("MAIN NOT ACTIVE")\n            //gsap.ticker.remove(binded_render) // El fondo webgl persiste siempre. No lo desactivamos nunca.\n\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_eval_scroll); // El fondo webgl persiste siempre. No lo desactivamos nunca.\n          }\n        }\n      });\n      this.$hero_trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$hero,\n        start: \'bottom bottom\',\n        end: \'bottom+=2000 top\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onUpdate: function onUpdate(self) {\n          //console.log("progress: "+self.progress)\n          if (_this2.dots) {\n            _this2.dots.update_transitionProgress(self.progress);\n          }\n        }\n      });\n      this.$hero2_trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$hero,\n        start: \'bottom center\',\n        end: \'bottom top\',\n        //scrub: true, // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onEnter: function onEnter(self) {//console.log("onEnter.isActive: ",self)\n          //this.dots.onDoHeroTransition()\n        },\n        onEnterBack: function onEnterBack(self) {//console.log("onEnterBack.isActive: ",self)\n          //this.dots.onUndoHeroTransition()\n        },\n        onLeaveBack: function onLeaveBack(self) {//console.log("onEnterBack.isActive: ",self)\n          //this.dots.onUndoHeroTransition()\n        } // onUpdate: (self) =>{\n        //     //console.log("progress: "+self.progress)\n        // }\n\n      });\n      this.$footer_trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$footer,\n        start: \'top bottom\',\n        end: \'bottom+=10 bottom\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            //console.log("FOOTER ACTIVE")\n            that.FOOTER_ACTIVE = true;\n          } else {\n            //console.log("FOOTER NOT ACTIVE")\n            that.FOOTER_ACTIVE = false;\n          }\n        }\n      });\n    }\n  }, {\n    key: "_eval_inertia_scroll",\n    value: function _eval_inertia_scroll(progress) {\n      var innerData = this.$main.getBoundingClientRect();\n      var newInnerY = innerData.y;\n      this.settings.scroll_progress = progress;\n      this.settings.scroll_delta = newInnerY - this.settings.scroll_lastInnerY;\n      this.settings.scroll_lastInnerY = newInnerY;\n      this.settings.scroll_limitedDelta = webgl_WebGLUtils.clamp(this.settings.scroll_delta, -20, 20); // Limita los valores a -20 -> +20\n\n      this.settings.scroll_normalizedDelta = (this.settings.scroll_limitedDelta / 20).toFixed(3); // Pasa el delta a -1 -> +1\n\n      this.settings.scroll_factordDelta = Math.abs(this.settings.scroll_normalizedDelta) + 0; // Valores absolutos de 0 -> 1\n\n      this.settings.scroll_direction = 1;\n\n      if (this.settings.scroll_normalizedDelta < 0) {\n        this.settings.scroll_direction = -1;\n      }\n    }\n  }, {\n    key: "_eval_footer_scroll",\n    value: function _eval_footer_scroll(progress) {\n      //console.log("(Solutions1App._eval_footer_scroll): "+progress)\n      this.settings.scroll_footer_progress = progress;\n      this.settings.morphingProgress = progress;\n    }\n  }, {\n    key: "_eval_hero_scroll",\n    value: function _eval_hero_scroll(progress) {\n      //console.log("(Solutions1App._eval_hero_scroll): "+progress)\n      this.settings.scroll_hero_progress = progress;\n    }\n  }, {\n    key: "_resize",\n    value: function _resize() {\n      //console.log("(Solutions1App._resize)!")\n      this.width = this.$container.offsetWidth;\n      this.height = this.$container.offsetHeight;\n      this.responsiveScale = this.width / this.REF_RESOLUTION.width;\n      this.cameraDistance = this.REF_CAMERA_DISTANCE * (this.height / this.REF_RESOLUTION.height); //console.log("this.width: "+this.width)\n      //console.log("this.height: "+this.height)\n\n      this.renderer.setSize(this.width, this.height);\n      this.camera.aspect = this.width / this.height;\n      this.camera.position.z = this.cameraDistance;\n      this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //--\n      // console.log("this.width: "+this.width)\n      // console.log("this.height: "+this.height)\n      // console.log("this.responsiveScale: "+this.responsiveScale)\n      // console.log("this.camera.aspect: "+this.camera.aspect)\n      // console.log("this.camera.position.z: "+this.camera.position.z)\n      // console.log("this.camera.fov: "+this.camera.fov)\n      //--\n\n      this.camera.updateProjectionMatrix(); //--\n\n      /*\n      if(this.background){\n          this.background.resize(this.width, this.height);\n      }\n      */\n\n      if (this.dots) {\n        this.dots.resize();\n      }\n    }\n  }, {\n    key: "_render",\n    value: function _render() {\n      //console.log("(Solutions1App._render): "+this.settings.scroll_progress+":"+this.settings.scroll_footer_progress)\n      if (this.height != this.$container.offsetHeight || this.width != this.$container.offsetWidth) {\n        this._resize();\n      }\n      /*\n      if(this.background){\n          this.background.render()\n      }\n      */\n\n\n      if (this.dots) {\n        this.dots.render();\n      }\n\n      this.renderer.render(this.scene, this.camera); //requestAnimationFrame(this.render.bind(this))\n    }\n  }]);\n\n  return Solutions1App;\n}();\n\n/* harmony default export */ const solutions1_Solutions1App = (Solutions1App);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererAI.js\nfunction rendererAI_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rendererAI_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererAI_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rendererAI_typeof(obj); }\n\nfunction rendererAI_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rendererAI_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererAI_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererAI_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererAI_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererAI_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererAI_setPrototypeOf(subClass, superClass); }\n\nfunction rendererAI_setPrototypeOf(o, p) { rendererAI_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererAI_setPrototypeOf(o, p); }\n\nfunction rendererAI_createSuper(Derived) { var hasNativeReflectConstruct = rendererAI_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererAI_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererAI_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererAI_possibleConstructorReturn(this, result); }; }\n\nfunction rendererAI_possibleConstructorReturn(self, call) { if (call && (rendererAI_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return rendererAI_assertThisInitialized(self); }\n\nfunction rendererAI_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rendererAI_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererAI_getPrototypeOf(o) { rendererAI_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererAI_getPrototypeOf(o); }\n\n// GSAP Library\n\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z);\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin((DrawSVGPlugin_min_default())); // Import Renderer\n\n // Webgl\n\n\n // Utilities\n\n\n\n\n\nvar RendererAI = /*#__PURE__*/function (_Renderer) {\n  rendererAI_inherits(RendererAI, _Renderer);\n\n  var _super = rendererAI_createSuper(RendererAI);\n\n  function RendererAI() {\n    rendererAI_classCallCheck(this, RendererAI);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererAI_createClass(RendererAI, [{\n    key: "selectors",\n    value: function selectors() {\n      // Sections\n      this.$hero = this.$el.querySelector(\'.ai__hero\');\n      this.$content = this.$el.querySelector(\'.ai__content\'); // Selectors\n\n      if (this.$content) {\n        this.$contentMenu = this.$content.querySelector(\'.category\');\n        this.$contentCases = this.$content.querySelector(\'.cases\');\n        this.$contentCards = this.$content.querySelectorAll(\'.card--large\');\n      }\n\n      this.$canvas_ai_solutions1 = this.$el.querySelector(\'#webgl_ai_solutions1\');\n      this.$canvas_ai_solutions1_m = this.$el.querySelector(\'#webgl_ai_solutions1_m\');\n    }\n  }, {\n    key: "events",\n    value: function events() {\n      var _this = this;\n\n      if (this.$contentCards && this.appStore.isDesktop) {\n        for (var i = 0; i < this.$contentCards.length; i++) {\n          this.domEvents.add(this.$contentCards[i], \'mouseenter\', function (a, e, el) {\n            _this.enterCards(a, e, el);\n          });\n          this.domEvents.add(this.$contentCards[i], \'mouseleave\', function (a, e, el) {\n            _this.leaveCards(a, e, el);\n          });\n        }\n      }\n    }\n  }, {\n    key: "preload",\n    value: function preload() {\n      // this.preloadDelay = 1;\n      this.preloadItems = {\n        main: [],\n        secondary: []\n      };\n    }\n  }, {\n    key: "beforeEnter",\n    value: function beforeEnter() {\n      // Webgl\n      if (this.appStore.isDesktop) {\n        this.solutions1 = new solutions1_Solutions1App({\n          renderer: this,\n          domElement: this.$canvas_ai_solutions1,\n          dotColor: \'#007EFF\'\n        });\n      } else {\n        this.solutions1_m = new home2_m_Home2App_m({\n          renderer: this,\n          domElement: this.$canvas_ai_solutions1_m,\n          dotColor: \'#007EFF\',\n          incr_radio: 12\n        });\n      }\n    }\n  }, {\n    key: "enter",\n    value: function enter() {\n      // Start functions\n      this.init();\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      if (this.appStore.isDesktop) {\n        this.initPinCategoriesMenu();\n        this.initUpdateCategoriesMenu();\n        this.initMoveWebGLCanvas();\n        this.initParallaxCards(); // WebGL\n\n        this.solutions1.init();\n      } else {\n        this.initDraggableMobile(); // WebGL\n\n        this.solutions1_m.init();\n      }\n    }\n  }, {\n    key: "initMoveWebGLCanvas",\n    value: function initMoveWebGLCanvas() {\n      var _this2 = this;\n\n      // Move canvas so it stay fixed\n      this._canvasPin = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: \'top top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onUpdate: function onUpdate(self) {\n          _this2.moveWebGLCanvas();\n        }\n      });\n    }\n  }, {\n    key: "moveWebGLCanvas",\n    value: function moveWebGLCanvas() {\n      // Its called from ScrollTrigger onUpdate and on Resize callbacks\n      var _offset2 = this.$inner.offsetHeight - this.$canvas_ai_solutions1.offsetHeight;\n\n      node_modules_gsap/* default.set */.ZP.set(this.$canvas_ai_solutions1, {\n        y: _offset2 * this._canvasPin.progress + \'px\'\n      });\n    }\n  }, {\n    key: "initPinCategoriesMenu",\n    value: function initPinCategoriesMenu() {\n      var _this3 = this;\n\n      this._offset = 0;\n      this._pinCategories = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$contentCases,\n        start: \'top 50%\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onRefresh: function onRefresh(self) {\n          _this3._offset = self.end - self.start;\n        },\n        onUpdate: function onUpdate(self) {\n          node_modules_gsap/* default.set */.ZP.set(_this3.$contentMenu, {\n            y: self.progress * _this3._offset\n          });\n        }\n      });\n    }\n  }, {\n    key: "initUpdateCategoriesMenu",\n    value: function initUpdateCategoriesMenu() {\n      var _this4 = this;\n\n      // Selectors\n      this.$contentMenuLinks = this.$contentMenu.querySelectorAll(\'a\');\n      this.$contentMenuCircles = this.$contentMenu.querySelectorAll(\'.ico--circle\');\n      this.$contentMenuArrows = this.$contentMenu.querySelectorAll(\'.ico--arrow\'); // Set\n\n      node_modules_gsap/* default.set */.ZP.set(this.$contentMenuLinks, {\n        opacity: 0.4\n      });\n      node_modules_gsap/* default.set */.ZP.set(this.$contentMenuCircles, {\n        drawSVG: 0\n      });\n      var $cases = this.$el.querySelectorAll(\'.cases__item\');\n      this._sections = [];\n      $cases.forEach(function (el, index, element) {\n        var _caseTrigger = ScrollTrigger/* default.create */.Z.create({\n          trigger: el,\n          start: \'top 50%\',\n          end: \'bottom 50%\',\n          scrub: true,\n          onUpdate: function onUpdate(self) {\n            node_modules_gsap/* default.set */.ZP.set(_this4.$contentMenuCircles[index], {\n              drawSVG: self.progress * 100 + \'%\'\n            });\n          },\n          onEnter: function onEnter(self) {\n            node_modules_gsap/* default.set */.ZP.set(_this4.$contentMenuCircles[index], {\n              opacity: 1\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuCircles[index], {\n              rotation: 0,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuArrows[index], {\n              fill: \'#ffffff\',\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuLinks[index], {\n              opacity: 1,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n          },\n          onEnterBack: function onEnterBack() {\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuArrows[index], {\n              fill: \'#ffffff\',\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuCircles[index], {\n              opacity: 1,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuLinks[index], {\n              opacity: 1,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n          },\n          onLeave: function onLeave() {\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuLinks[index], {\n              opacity: 0.4,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuCircles[index], {\n              opacity: 0.001,\n              duration: 0.5,\n              ease: \'power2.out\',\n              transformOrigin: \'center center\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuArrows[index], {\n              fill: \'#000A33\',\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n          },\n          onLeaveBack: function onLeaveBack() {\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuLinks[index], {\n              opacity: 0.4,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuArrows[index], {\n              fill: \'#000A33\',\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n          }\n        });\n\n        _this4._sections.push(_caseTrigger);\n      });\n    }\n  }, {\n    key: "initDraggableMobile",\n    value: function initDraggableMobile() {\n      var _this5 = this;\n\n      // Selectors\n      this.$casesItems = this.$content.querySelectorAll(\'.cases__item\');\n\n      if (this.$casesItems) {\n        var _loop = function _loop(i) {\n          _this5.$casesSliders = _this5.$casesItems[i].querySelector(\'.slider\');\n          _this5.$casesSlidersInner = _this5.$casesItems[i].querySelector(\'.slider__inner\');\n          _this5._casesDraggable = new superDraggable_default({\n            el: _this5.$casesItems[i],\n            target: _this5.$casesSliders,\n            snap: false,\n            snapTo: \'center\',\n            dots: false,\n            onRaf: function onRaf(percent, progress, progressOrigin) {\n              node_modules_gsap/* default.to */.ZP.to(_this5.$casesItems[i].querySelector(\'.slider__progress\').children[0], {\n                scaleX: progressOrigin + progress\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$casesItems.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: "initParallaxCards",\n    value: function initParallaxCards() {\n      // Selectors\n      this.$cards = this.$el.querySelectorAll(\'.card\');\n\n      if (this.$cards) {\n        for (var i = 0; i < this.$cards.length; i++) {\n          this._cardsTimeline = node_modules_gsap/* default.timeline */.ZP.timeline({\n            defaults: {\n              ease: \'none\',\n              duration: 1\n            },\n            scrollTrigger: {\n              trigger: this.$cards[i],\n              start: \'top bottom\',\n              end: \'bottom top\',\n              scrub: true\n            }\n          });\n\n          this._cardsTimeline.fromTo(this.$cards[i].querySelector(\'.background\').children[0], {\n            y: \'-100px\',\n            scale: 1.1\n          }, {\n            y: \'100px\',\n            scale: 1\n          }, 0);\n        }\n      }\n    }\n  }, {\n    key: "raf",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: "resize",\n    value: function resize(width, height) {\n      if (this._casesDraggable) this._casesDraggable.resize(); // Webgl\n\n      if (this.appStore.isDesktop) {\n        if (this.solutions1) this.solutions1.onResize();\n      }\n    }\n  }, {\n    key: "leave",\n    value: function leave() {\n      if (this.appStore.isDesktop) {\n        this.solutions1.kill();\n        this.solutions1 = null;\n      } else {\n        this.solutions1_m.kill();\n        this.solutions1_m = null;\n      }\n    }\n  }]);\n\n  return RendererAI;\n}(renderer); // Don\'t forget to export your renderer\n\n\n/* harmony default export */ const rendererAI = (RendererAI);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererData.js\nfunction rendererData_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rendererData_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererData_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rendererData_typeof(obj); }\n\nfunction rendererData_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rendererData_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererData_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererData_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererData_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererData_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererData_setPrototypeOf(subClass, superClass); }\n\nfunction rendererData_setPrototypeOf(o, p) { rendererData_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererData_setPrototypeOf(o, p); }\n\nfunction rendererData_createSuper(Derived) { var hasNativeReflectConstruct = rendererData_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererData_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererData_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererData_possibleConstructorReturn(this, result); }; }\n\nfunction rendererData_possibleConstructorReturn(self, call) { if (call && (rendererData_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return rendererData_assertThisInitialized(self); }\n\nfunction rendererData_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rendererData_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererData_getPrototypeOf(o) { rendererData_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererData_getPrototypeOf(o); }\n\n// GSAP Library\n\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z);\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin((DrawSVGPlugin_min_default())); // Import Renderer\n\n // Webgl\n\n\n // Utilities\n\n\n\n\n\nvar RendererData = /*#__PURE__*/function (_Renderer) {\n  rendererData_inherits(RendererData, _Renderer);\n\n  var _super = rendererData_createSuper(RendererData);\n\n  function RendererData() {\n    rendererData_classCallCheck(this, RendererData);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererData_createClass(RendererData, [{\n    key: "selectors",\n    value: function selectors() {\n      // Sections\n      this.$hero = this.$el.querySelector(\'.data__hero\');\n      this.$content = this.$el.querySelector(\'.data__content\'); // Selectors\n\n      if (this.$content) {\n        this.$contentMenu = this.$content.querySelector(\'.category\');\n        this.$contentCases = this.$content.querySelector(\'.cases\');\n        this.$contentCards = this.$content.querySelectorAll(\'.card--large\');\n      }\n\n      this.$canvas_data_solutions1 = this.$el.querySelector(\'#webgl_data_solutions1\');\n      this.$canvas_data_solutions1_m = this.$el.querySelector(\'#webgl_data_solutions1_m\');\n    }\n  }, {\n    key: "events",\n    value: function events() {\n      var _this = this;\n\n      if (this.$contentCards && this.appStore.isDesktop) {\n        for (var i = 0; i < this.$contentCards.length; i++) {\n          this.domEvents.add(this.$contentCards[i], \'mouseenter\', function (a, e, el) {\n            _this.enterCards(a, e, el);\n          });\n          this.domEvents.add(this.$contentCards[i], \'mouseleave\', function (a, e, el) {\n            _this.leaveCards(a, e, el);\n          });\n        }\n      }\n    }\n  }, {\n    key: "preload",\n    value: function preload() {\n      // this.preloadDelay = 1;\n      this.preloadItems = {\n        main: [],\n        secondary: []\n      };\n    }\n  }, {\n    key: "beforeEnter",\n    value: function beforeEnter() {\n      // Webgl\n      if (this.appStore.isDesktop) {\n        this.solutions1 = new solutions1_Solutions1App({\n          renderer: this,\n          domElement: this.$canvas_data_solutions1,\n          dotColor: \'#e84371\'\n        });\n      } else {\n        this.solutions1_m = new home2_m_Home2App_m({\n          renderer: this,\n          domElement: this.$canvas_data_solutions1_m,\n          dotColor: \'#e84371\',\n          incr_radio: 12\n        });\n      }\n    }\n  }, {\n    key: "enter",\n    value: function enter() {\n      // Start functions\n      this.init();\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      if (this.appStore.isDesktop) {\n        this.initPinCategoriesMenu();\n        this.initUpdateCategoriesMenu();\n        this.initMoveWebGLCanvas();\n        this.initParallaxCards(); // WebGL\n\n        this.solutions1.init();\n      } else {\n        this.initDraggableMobile(); // WebGL\n\n        this.solutions1_m.init();\n      }\n    }\n  }, {\n    key: "initMoveWebGLCanvas",\n    value: function initMoveWebGLCanvas() {\n      var _this2 = this;\n\n      // Move canvas so it stay fixed\n      this._canvasPin = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: \'top top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onUpdate: function onUpdate(self) {\n          _this2.moveWebGLCanvas();\n        }\n      });\n    }\n  }, {\n    key: "moveWebGLCanvas",\n    value: function moveWebGLCanvas() {\n      // Its called from ScrollTrigger onUpdate and on Resize callbacks\n      var _offset2 = this.$inner.offsetHeight - this.$canvas_data_solutions1.offsetHeight;\n\n      node_modules_gsap/* default.set */.ZP.set(this.$canvas_data_solutions1, {\n        y: _offset2 * this._canvasPin.progress + \'px\'\n      });\n    }\n  }, {\n    key: "initPinCategoriesMenu",\n    value: function initPinCategoriesMenu() {\n      var _this3 = this;\n\n      this._offset = 0;\n      this._pinCategories = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$contentCases,\n        start: \'top 50%\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onRefresh: function onRefresh(self) {\n          _this3._offset = self.end - self.start;\n        },\n        onUpdate: function onUpdate(self) {\n          node_modules_gsap/* default.set */.ZP.set(_this3.$contentMenu, {\n            y: self.progress * _this3._offset\n          });\n        }\n      });\n    }\n  }, {\n    key: "initUpdateCategoriesMenu",\n    value: function initUpdateCategoriesMenu() {\n      var _this4 = this;\n\n      // Selectors\n      this.$contentMenuLinks = this.$contentMenu.querySelectorAll(\'a\');\n      this.$contentMenuCircles = this.$contentMenu.querySelectorAll(\'.ico--circle\');\n      this.$contentMenuArrows = this.$contentMenu.querySelectorAll(\'.ico--arrow\'); // Set\n\n      node_modules_gsap/* default.set */.ZP.set(this.$contentMenuLinks, {\n        opacity: 0.4\n      });\n      node_modules_gsap/* default.set */.ZP.set(this.$contentMenuCircles, {\n        drawSVG: 0\n      });\n      var $cases = this.$el.querySelectorAll(\'.cases__item\');\n      this._sections = [];\n      $cases.forEach(function (el, index, element) {\n        var _caseTrigger = ScrollTrigger/* default.create */.Z.create({\n          trigger: el,\n          start: \'top 50%\',\n          end: \'bottom 50%\',\n          scrub: true,\n          onUpdate: function onUpdate(self) {\n            node_modules_gsap/* default.set */.ZP.set(_this4.$contentMenuCircles[index], {\n              drawSVG: self.progress * 100 + \'%\'\n            });\n          },\n          onEnter: function onEnter(self) {\n            node_modules_gsap/* default.set */.ZP.set(_this4.$contentMenuCircles[index], {\n              opacity: 1\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuCircles[index], {\n              rotation: 0,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuArrows[index], {\n              fill: \'#ffffff\',\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuLinks[index], {\n              opacity: 1,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n          },\n          onEnterBack: function onEnterBack() {\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuArrows[index], {\n              fill: \'#ffffff\',\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuCircles[index], {\n              opacity: 1,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuLinks[index], {\n              opacity: 1,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n          },\n          onLeave: function onLeave() {\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuLinks[index], {\n              opacity: 0.4,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuCircles[index], {\n              opacity: 0.001,\n              duration: 0.5,\n              ease: \'power2.out\',\n              transformOrigin: \'center center\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuArrows[index], {\n              fill: \'#000A33\',\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n          },\n          onLeaveBack: function onLeaveBack() {\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuLinks[index], {\n              opacity: 0.4,\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n            node_modules_gsap/* default.to */.ZP.to(_this4.$contentMenuArrows[index], {\n              fill: \'#000A33\',\n              duration: 0.5,\n              ease: \'power2.out\'\n            });\n          }\n        });\n\n        _this4._sections.push(_caseTrigger);\n      });\n    }\n  }, {\n    key: "initDraggableMobile",\n    value: function initDraggableMobile() {\n      var _this5 = this;\n\n      // Selectors\n      this.$casesItems = this.$content.querySelectorAll(\'.cases__item\');\n\n      if (this.$casesItems) {\n        var _loop = function _loop(i) {\n          _this5.$casesSliders = _this5.$casesItems[i].querySelector(\'.slider\');\n          _this5.$casesSlidersInner = _this5.$casesItems[i].querySelector(\'.slider__inner\');\n          _this5._casesDraggable = new superDraggable_default({\n            el: _this5.$casesItems[i],\n            target: _this5.$casesSlidersInner,\n            snap: false,\n            snapTo: \'center\',\n            dots: false,\n            onRaf: function onRaf(percent, progress, progressOrigin) {\n              node_modules_gsap/* default.to */.ZP.to(_this5.$casesItems[i].querySelector(\'.slider__progress\').children[0], {\n                scaleX: progressOrigin + progress\n              });\n            }\n          });\n        };\n\n        for (var i = 0; i < this.$casesItems.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: "initParallaxCards",\n    value: function initParallaxCards() {\n      // Selectors\n      this.$cards = this.$el.querySelectorAll(\'.card\');\n\n      if (this.$cards) {\n        for (var i = 0; i < this.$cards.length; i++) {\n          this._cardsTimeline = node_modules_gsap/* default.timeline */.ZP.timeline({\n            defaults: {\n              ease: \'none\',\n              duration: 1\n            },\n            scrollTrigger: {\n              trigger: this.$cards[i],\n              start: \'top bottom\',\n              end: \'bottom top\',\n              scrub: true\n            }\n          });\n\n          this._cardsTimeline.fromTo(this.$cards[i].querySelector(\'.background\').children[0], {\n            y: \'-100px\',\n            scale: 1.1\n          }, {\n            y: \'100px\',\n            scale: 1\n          }, 0);\n        }\n      }\n    }\n  }, {\n    key: "raf",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: "resize",\n    value: function resize(width, height) {\n      if (this._casesDraggable) this._casesDraggable.resize(); // Webgl\n\n      if (this.appStore.isDesktop) {\n        if (this.solutions1) this.solutions1.onResize();\n      }\n    }\n  }, {\n    key: "leave",\n    value: function leave() {\n      if (this.appStore.isDesktop) {\n        this.solutions1.kill();\n        this.solutions1 = null;\n      } else {\n        this.solutions1_m.kill();\n        this.solutions1_m = null;\n      }\n    }\n  }]);\n\n  return RendererData;\n}(renderer); // Don\'t forget to export your renderer\n\n\n/* harmony default export */ const rendererData = (RendererData);\n;// CONCATENATED MODULE: ./app/src/js/utils/paths.js\n/*!\n * paths 3.2.6\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n    _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n    _scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n    _selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n    _DEG2RAD = Math.PI / 180,\n    _RAD2DEG = 180 / Math.PI,\n    _sin = Math.sin,\n    _cos = Math.cos,\n    _abs = Math.abs,\n    _sqrt = Math.sqrt,\n    _atan2 = Math.atan2,\n    _largeNum = 1e8,\n    paths_isString = function _isString(value) {\n  return typeof value === "string";\n},\n    paths_isNumber = function _isNumber(value) {\n  return typeof value === "number";\n},\n    _isUndefined = function _isUndefined(value) {\n  return typeof value === "undefined";\n},\n    _temp = {},\n    _temp2 = {},\n    _roundingNum = 1e5,\n    _wrapProgress = function _wrapProgress(progress) {\n  return Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum || (progress < 0 ? 0 : 1);\n},\n    //if progress lands on 1, the % will make it 0 which is why we || 1, but not if it\'s negative because it makes more sense for motion to end at 0 in that case.\npaths_round = function _round(value) {\n  return Math.round(value * _roundingNum) / _roundingNum || 0;\n},\n    _splitSegment = function _splitSegment(rawPath, segIndex, i, t) {\n  var segment = rawPath[segIndex],\n      shift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n\n  if (shift && shift + i + 2 < segment.length) {\n    rawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n    segment.splice(0, i + shift);\n    return 1;\n  }\n},\n    _reverseRawPath = function _reverseRawPath(rawPath, skipOuter) {\n  var i = rawPath.length;\n\n  if (!skipOuter) {\n    rawPath.reverse();\n  }\n\n  while (i--) {\n    if (!rawPath[i].reversed) {\n      reverseSegment(rawPath[i]);\n    }\n  }\n},\n    _copyMetaData = function _copyMetaData(source, copy) {\n  copy.totalLength = source.totalLength;\n\n  if (source.samples) {\n    //segment\n    copy.samples = source.samples.slice(0);\n    copy.lookup = source.lookup.slice(0);\n    copy.minLength = source.minLength;\n    copy.resolution = source.resolution;\n  } else {\n    //rawPath\n    copy.totalPoints = source.totalPoints;\n  }\n\n  return copy;\n},\n    //pushes a new segment into a rawPath, but if its starting values match the ending values of the last segment, it\'ll merge it into that same segment (to reduce the number of segments)\n_appendOrMerge = function _appendOrMerge(rawPath, segment) {\n  var index = rawPath.length,\n      prevSeg = rawPath[index - 1] || [],\n      l = prevSeg.length;\n\n  if (segment[0] === prevSeg[l - 2] && segment[1] === prevSeg[l - 1]) {\n    segment = prevSeg.concat(segment.slice(2));\n    index--;\n  }\n\n  rawPath[index] = segment;\n},\n    _bestDistance;\n/* TERMINOLOGY\n - RawPath - an array of arrays, one for each Segment. A single RawPath could have multiple "M" commands, defining Segments (paths aren\'t always connected).\n - Segment - an array containing a sequence of Cubic Bezier coordinates in alternating x, y, x, y format. Starting anchor, then control point 1, control point 2, and ending anchor, then the next control point 1, control point 2, anchor, etc. Uses less memory than an array with a bunch of {x, y} points.\n - Bezier - a single cubic Bezier with a starting anchor, two control points, and an ending anchor.\n - the variable "t" is typically the position along an individual Bezier path (time) and it\'s NOT linear, meaning it could accelerate/decelerate based on the control points whereas the "p" or "progress" value is linearly mapped to the whole path, so it shouldn\'t really accelerate/decelerate based on control points. So a progress of 0.2 would be almost exactly 20% along the path. "t" is ONLY in an individual Bezier piece.\n */\n//accepts basic selector text, a path instance, a RawPath instance, or a Segment and returns a RawPath (makes it easy to homogenize things). If an element or selector text is passed in, it\'ll also cache the value so that if it\'s queried again, it\'ll just take the path data from there instead of parsing it all over again (as long as the path data itself hasn\'t changed - it\'ll check).\n\n\nfunction getRawPath(value) {\n  value = paths_isString(value) && _selectorExp.test(value) ? document.querySelector(value) || value : value;\n  var e = value.getAttribute ? value : 0,\n      rawPath;\n\n  if (e && (value = value.getAttribute("d"))) {\n    //implements caching\n    if (!e._gsPath) {\n      e._gsPath = {};\n    }\n\n    rawPath = e._gsPath[value];\n    return rawPath && !rawPath._dirty ? rawPath : e._gsPath[value] = stringToRawPath(value);\n  }\n\n  return !value ? console.warn("Expecting a <path> element or an SVG path data string") : paths_isString(value) ? stringToRawPath(value) : paths_isNumber(value[0]) ? [value] : value;\n} //copies a RawPath WITHOUT the length meta data (for speed)\n\nfunction copyRawPath(rawPath) {\n  var a = [],\n      i = 0;\n\n  for (; i < rawPath.length; i++) {\n    a[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n  }\n\n  return _copyMetaData(rawPath, a);\n}\nfunction reverseSegment(segment) {\n  var i = 0,\n      y;\n  segment.reverse(); //this will invert the order y, x, y, x so we must flip it back.\n\n  for (; i < segment.length; i += 2) {\n    y = segment[i];\n    segment[i] = segment[i + 1];\n    segment[i + 1] = y;\n  }\n\n  segment.reversed = !segment.reversed;\n}\n\nvar _createPath = function _createPath(e, ignore) {\n  var path = document.createElementNS("http://www.w3.org/2000/svg", "path"),\n      attr = [].slice.call(e.attributes),\n      i = attr.length,\n      name;\n  ignore = "," + ignore + ",";\n\n  while (--i > -1) {\n    name = attr[i].nodeName.toLowerCase(); //in Microsoft Edge, if you don\'t set the attribute with a lowercase name, it doesn\'t render correctly! Super weird.\n\n    if (ignore.indexOf("," + name + ",") < 0) {\n      path.setAttributeNS(null, name, attr[i].nodeValue);\n    }\n  }\n\n  return path;\n},\n    _typeAttrs = {\n  rect: "rx,ry,x,y,width,height",\n  circle: "r,cx,cy",\n  ellipse: "rx,ry,cx,cy",\n  line: "x1,x2,y1,y2"\n},\n    _attrToObj = function _attrToObj(e, attrs) {\n  var props = attrs ? attrs.split(",") : [],\n      obj = {},\n      i = props.length;\n\n  while (--i > -1) {\n    obj[props[i]] = +e.getAttribute(props[i]) || 0;\n  }\n\n  return obj;\n}; //converts an SVG shape like <circle>, <rect>, <polygon>, <polyline>, <ellipse>, etc. to a <path>, swapping it in and copying the attributes to match.\n\n\nfunction paths_convertToPath(element, swap) {\n  var type = element.tagName.toLowerCase(),\n      circ = 0.552284749831,\n      data,\n      x,\n      y,\n      r,\n      ry,\n      path,\n      rcirc,\n      rycirc,\n      points,\n      w,\n      h,\n      x2,\n      x3,\n      x4,\n      x5,\n      x6,\n      y2,\n      y3,\n      y4,\n      y5,\n      y6,\n      attr;\n\n  if (type === "path" || !element.getBBox) {\n    return element;\n  }\n\n  path = _createPath(element, "x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points");\n  attr = _attrToObj(element, _typeAttrs[type]);\n\n  if (type === "rect") {\n    r = attr.rx;\n    ry = attr.ry;\n    x = attr.x;\n    y = attr.y;\n    w = attr.width - r * 2;\n    h = attr.height - ry * 2;\n\n    if (r || ry) {\n      //if there are rounded corners, render cubic beziers\n      x2 = x + r * (1 - circ);\n      x3 = x + r;\n      x4 = x3 + w;\n      x5 = x4 + r * circ;\n      x6 = x4 + r;\n      y2 = y + ry * (1 - circ);\n      y3 = y + ry;\n      y4 = y3 + h;\n      y5 = y4 + ry * circ;\n      y6 = y4 + ry;\n      data = "M" + x6 + "," + y3 + " V" + y4 + " C" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(",") + "z";\n    } else {\n      data = "M" + (x + w) + "," + y + " v" + h + " h" + -w + " v" + -h + " h" + w + "z";\n    }\n  } else if (type === "circle" || type === "ellipse") {\n    if (type === "circle") {\n      r = ry = attr.r;\n      rycirc = r * circ;\n    } else {\n      r = attr.rx;\n      ry = attr.ry;\n      rycirc = ry * circ;\n    }\n\n    x = attr.cx;\n    y = attr.cy;\n    rcirc = r * circ;\n    data = "M" + (x + r) + "," + y + " C" + [x + r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(",") + "z";\n  } else if (type === "line") {\n    data = "M" + attr.x1 + "," + attr.y1 + " L" + attr.x2 + "," + attr.y2; //previously, we just converted to "Mx,y Lx,y" but Safari has bugs that cause that not to render properly when using a stroke-dasharray that\'s not fully visible! Using a cubic bezier fixes that issue.\n  } else if (type === "polyline" || type === "polygon") {\n    points = (element.getAttribute("points") + "").match(_numbersExp) || [];\n    x = points.shift();\n    y = points.shift();\n    data = "M" + x + "," + y + " L" + points.join(",");\n\n    if (type === "polygon") {\n      data += "," + x + "," + y + "z";\n    }\n  }\n\n  path.setAttribute("d", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n\n  if (swap && element.parentNode) {\n    element.parentNode.insertBefore(path, element);\n    element.parentNode.removeChild(element);\n  }\n\n  return path;\n} //returns the rotation (in degrees) at a particular progress on a rawPath (the slope of the tangent)\n\nfunction getRotationAtProgress(rawPath, progress) {\n  var d = getProgressData(rawPath, progress >= 1 ? 1 - 1e-9 : progress ? progress : 1e-9);\n  return getRotationAtBezierT(d.segment, d.i, d.t);\n}\n\nfunction getRotationAtBezierT(segment, i, t) {\n  var a = segment[i],\n      b = segment[i + 2],\n      c = segment[i + 4],\n      x;\n  a += (b - a) * t;\n  b += (c - b) * t;\n  a += (b - a) * t;\n  x = b + (c + (segment[i + 6] - c) * t - b) * t - a;\n  a = segment[i + 1];\n  b = segment[i + 3];\n  c = segment[i + 5];\n  a += (b - a) * t;\n  b += (c - b) * t;\n  a += (b - a) * t;\n  return paths_round(_atan2(b + (c + (segment[i + 7] - c) * t - b) * t - a, x) * _RAD2DEG);\n}\n\nfunction sliceRawPath(rawPath, start, end) {\n  if (_isUndefined(end)) {\n    end = 1;\n  }\n\n  start = start || 0;\n  var reverse = start > end,\n      loops = Math.max(0, ~~(_abs(end - start) - 1e-8));\n\n  if (reverse) {\n    reverse = end;\n    end = start;\n    start = reverse;\n    reverse = 1;\n    loops -= loops ? 1 : 0;\n  }\n\n  if (start < 0 || end < 0) {\n    var offset = ~~Math.min(start, end) + 1;\n    start += offset;\n    end += offset;\n  }\n\n  var path = copyRawPath(rawPath.totalLength ? rawPath : cacheRawPathMeasurements(rawPath)),\n      wrap = end > 1,\n      s = getProgressData(path, start, _temp, true),\n      e = getProgressData(path, end, _temp2),\n      eSeg = e.segment,\n      sSeg = s.segment,\n      eSegIndex = e.segIndex,\n      sSegIndex = s.segIndex,\n      ei = e.i,\n      si = s.i,\n      sameSegment = sSegIndex === eSegIndex,\n      sameBezier = ei === si && sameSegment,\n      invertedOrder = sameSegment && si > ei || sameBezier && s.t > e.t,\n      sShift,\n      eShift,\n      i,\n      copy,\n      totalSegments,\n      l,\n      j;\n\n  if (wrap || loops) {\n    if (_splitSegment(path, sSegIndex, si, s.t)) {\n      sShift = 1;\n      sSegIndex++;\n\n      if (sameBezier) {\n        if (invertedOrder) {\n          e.t /= s.t;\n        } else {\n          e.t = (e.t - s.t) / (1 - s.t);\n          eSegIndex++;\n          ei = 0;\n        }\n      } else if (sSegIndex <= eSegIndex + 1 && !invertedOrder) {\n        eSegIndex++;\n\n        if (sameSegment) {\n          ei -= si;\n        }\n      }\n    }\n\n    if (!e.t) {\n      eSegIndex--;\n\n      if (reverse) {\n        sSegIndex--;\n      }\n    } else if (_splitSegment(path, eSegIndex, ei, e.t)) {\n      if (invertedOrder && sShift) {\n        sSegIndex++;\n      }\n\n      if (reverse) {\n        eSegIndex++;\n      }\n    }\n\n    copy = [];\n    totalSegments = path.length;\n    l = 1 + totalSegments * loops;\n    j = sSegIndex;\n\n    if (reverse) {\n      eSegIndex = (eSegIndex || totalSegments) - 1;\n      l += (totalSegments - eSegIndex + sSegIndex) % totalSegments;\n\n      for (i = 0; i < l; i++) {\n        _appendOrMerge(copy, path[j]);\n\n        j = (j || totalSegments) - 1;\n      }\n    } else {\n      l += (totalSegments - sSegIndex + eSegIndex) % totalSegments;\n\n      for (i = 0; i < l; i++) {\n        _appendOrMerge(copy, path[j++ % totalSegments]);\n      }\n    }\n\n    path = copy;\n  } else {\n    eShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n\n    if (start !== end) {\n      sShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n\n      if (sameSegment) {\n        eShift += sShift;\n      }\n\n      eSeg.splice(ei + eShift + 2);\n\n      if (sShift || si) {\n        sSeg.splice(0, si + sShift);\n      }\n\n      i = path.length;\n\n      while (i--) {\n        //chop off any extra segments\n        if (i < sSegIndex || i > eSegIndex) {\n          path.splice(i, 1);\n        }\n      }\n    } else {\n      eSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0); //record the value before we chop because it\'ll be impossible to determine the angle after its length is 0!\n\n      ei += eShift;\n      s = eSeg[ei];\n      e = eSeg[ei + 1];\n      eSeg.length = eSeg.totalLength = 0;\n      eSeg.totalPoints = path.totalPoints = 8;\n      eSeg.push(s, e, s, e, s, e, s, e);\n    }\n  }\n\n  if (reverse) {\n    _reverseRawPath(path, wrap || loops);\n  }\n\n  path.totalLength = 0;\n  return path;\n} //measures a Segment according to its resolution (so if segment.resolution is 6, for example, it\'ll take 6 samples equally across each Bezier) and create/populate a "samples" array that has the length up to each of those sample points (always increasing from the start) as well as a "lookup" array that\'s broken up according to the smallest distance between 2 samples. This gives us a very fast way of looking up a progress position rather than looping through all the points/Beziers. You can optionally have it only measure a subset, starting at startIndex and going for a specific number of beziers (remember, there are 3 x/y pairs each, for a total of 6 elements for each Bezier). It will also populate a "totalLength" property, but that\'s not generally super accurate because by default it\'ll only take 6 samples per Bezier. But for performance reasons, it\'s perfectly adequate for measuring progress values along the path. If you need a more accurate totalLength, either increase the resolution or use the more advanced bezierToPoints() method which keeps adding points until they don\'t deviate by more than a certain precision value.\n\nfunction measureSegment(segment, startIndex, bezierQty) {\n  startIndex = startIndex || 0;\n\n  if (!segment.samples) {\n    segment.samples = [];\n    segment.lookup = [];\n  }\n\n  var resolution = ~~segment.resolution || 12,\n      inc = 1 / resolution,\n      endIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length,\n      x1 = segment[startIndex],\n      y1 = segment[startIndex + 1],\n      samplesIndex = startIndex ? startIndex / 6 * resolution : 0,\n      samples = segment.samples,\n      lookup = segment.lookup,\n      min = (startIndex ? segment.minLength : _largeNum) || _largeNum,\n      prevLength = samples[samplesIndex + bezierQty * resolution - 1],\n      length = startIndex ? samples[samplesIndex - 1] : 0,\n      i,\n      j,\n      x4,\n      x3,\n      x2,\n      xd,\n      xd1,\n      y4,\n      y3,\n      y2,\n      yd,\n      yd1,\n      inv,\n      t,\n      lengthIndex,\n      l,\n      segLength;\n  samples.length = lookup.length = 0;\n\n  for (j = startIndex + 2; j < endIndex; j += 6) {\n    x4 = segment[j + 4] - x1;\n    x3 = segment[j + 2] - x1;\n    x2 = segment[j] - x1;\n    y4 = segment[j + 5] - y1;\n    y3 = segment[j + 3] - y1;\n    y2 = segment[j + 1] - y1;\n    xd = xd1 = yd = yd1 = 0;\n\n    if (_abs(x4) < 1e-5 && _abs(y4) < 1e-5 && _abs(x2) + _abs(y2) < 1e-5) {\n      //dump points that are sufficiently close (basically right on top of each other, making a bezier super tiny or 0 length)\n      if (segment.length > 8) {\n        segment.splice(j, 6);\n        j -= 6;\n        endIndex -= 6;\n      }\n    } else {\n      for (i = 1; i <= resolution; i++) {\n        t = inc * i;\n        inv = 1 - t;\n        xd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n        yd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n        l = _sqrt(yd * yd + xd * xd);\n\n        if (l < min) {\n          min = l;\n        }\n\n        length += l;\n        samples[samplesIndex++] = length;\n      }\n    }\n\n    x1 += x4;\n    y1 += y4;\n  }\n\n  if (prevLength) {\n    prevLength -= length;\n\n    for (; samplesIndex < samples.length; samplesIndex++) {\n      samples[samplesIndex] += prevLength;\n    }\n  }\n\n  if (samples.length && min) {\n    segment.totalLength = segLength = samples[samples.length - 1] || 0;\n    segment.minLength = min;\n    l = lengthIndex = 0;\n\n    for (i = 0; i < segLength; i += min) {\n      lookup[l++] = samples[lengthIndex] < i ? ++lengthIndex : lengthIndex;\n    }\n  } else {\n    segment.totalLength = samples[0] = 0;\n  }\n\n  return startIndex ? length - samples[startIndex / 2 - 1] : length;\n}\n\nfunction cacheRawPathMeasurements(rawPath, resolution) {\n  var pathLength, points, i;\n\n  for (i = pathLength = points = 0; i < rawPath.length; i++) {\n    rawPath[i].resolution = ~~resolution || 12; //steps per Bezier curve (anchor, 2 control points, to anchor)\n\n    points += rawPath[i].length;\n    pathLength += measureSegment(rawPath[i]);\n  }\n\n  rawPath.totalPoints = points;\n  rawPath.totalLength = pathLength;\n  return rawPath;\n} //divide segment[i] at position t (value between 0 and 1, progress along that particular cubic bezier segment that starts at segment[i]). Returns how many elements were spliced into the segment array (either 0 or 6)\n\nfunction subdivideSegment(segment, i, t) {\n  if (t <= 0 || t >= 1) {\n    return 0;\n  }\n\n  var ax = segment[i],\n      ay = segment[i + 1],\n      cp1x = segment[i + 2],\n      cp1y = segment[i + 3],\n      cp2x = segment[i + 4],\n      cp2y = segment[i + 5],\n      bx = segment[i + 6],\n      by = segment[i + 7],\n      x1a = ax + (cp1x - ax) * t,\n      x2 = cp1x + (cp2x - cp1x) * t,\n      y1a = ay + (cp1y - ay) * t,\n      y2 = cp1y + (cp2y - cp1y) * t,\n      x1 = x1a + (x2 - x1a) * t,\n      y1 = y1a + (y2 - y1a) * t,\n      x2a = cp2x + (bx - cp2x) * t,\n      y2a = cp2y + (by - cp2y) * t;\n  x2 += (x2a - x2) * t;\n  y2 += (y2a - y2) * t;\n  segment.splice(i + 2, 4, paths_round(x1a), //first control point\n  paths_round(y1a), paths_round(x1), //second control point\n  paths_round(y1), paths_round(x1 + (x2 - x1) * t), //new fabricated anchor on line\n  paths_round(y1 + (y2 - y1) * t), paths_round(x2), //third control point\n  paths_round(y2), paths_round(x2a), //fourth control point\n  paths_round(y2a));\n\n  if (segment.samples) {\n    segment.samples.splice(i / 6 * segment.resolution | 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n\n  return 6;\n} // returns an object {path, segment, segIndex, i, t}\n\nfunction getProgressData(rawPath, progress, decoratee, pushToNextIfAtEnd) {\n  decoratee = decoratee || {};\n\n  if (!rawPath.totalLength) {\n    cacheRawPathMeasurements(rawPath);\n  }\n\n  if (progress < 0 || progress > 1) {\n    progress = _wrapProgress(progress);\n  }\n\n  var segIndex = 0,\n      segment = rawPath[0],\n      samples,\n      resolution,\n      length,\n      min,\n      max,\n      i,\n      t;\n\n  if (rawPath.length > 1) {\n    //speed optimization: most of the time, there\'s only one segment so skip the recursion.\n    length = rawPath.totalLength * progress;\n    max = i = 0;\n\n    while ((max += rawPath[i++].totalLength) < length) {\n      segIndex = i;\n    }\n\n    segment = rawPath[segIndex];\n    min = max - segment.totalLength;\n    progress = (length - min) / (max - min) || 0;\n  }\n\n  samples = segment.samples;\n  resolution = segment.resolution; //how many samples per cubic bezier chunk\n\n  length = segment.totalLength * progress;\n  i = segment.lookup[~~(length / segment.minLength)] || 0;\n  min = i ? samples[i - 1] : 0;\n  max = samples[i];\n\n  if (max < length) {\n    min = max;\n    max = samples[++i];\n  }\n\n  t = 1 / resolution * ((length - min) / (max - min) + i % resolution);\n  i = ~~(i / resolution) * 6;\n\n  if (pushToNextIfAtEnd && t === 1) {\n    if (i + 6 < segment.length) {\n      i += 6;\n      t = 0;\n    } else if (segIndex + 1 < rawPath.length) {\n      i = t = 0;\n      segment = rawPath[++segIndex];\n    }\n  }\n\n  decoratee.t = t;\n  decoratee.i = i;\n  decoratee.path = rawPath;\n  decoratee.segment = segment;\n  decoratee.segIndex = segIndex;\n  return decoratee;\n}\n\nfunction getPositionOnPath(rawPath, progress, includeAngle, point) {\n  var segment = rawPath[0],\n      result = point || {},\n      samples,\n      resolution,\n      length,\n      min,\n      max,\n      i,\n      t,\n      a,\n      inv;\n\n  if (progress < 0 || progress > 1) {\n    progress = _wrapProgress(progress);\n  }\n\n  if (rawPath.length > 1) {\n    //speed optimization: most of the time, there\'s only one segment so skip the recursion.\n    length = rawPath.totalLength * progress;\n    max = i = 0;\n\n    while ((max += rawPath[i++].totalLength) < length) {\n      segment = rawPath[i];\n    }\n\n    min = max - segment.totalLength;\n    progress = (length - min) / (max - min) || 0;\n  }\n\n  samples = segment.samples;\n  resolution = segment.resolution;\n  length = segment.totalLength * progress;\n  i = segment.lookup[~~(length / segment.minLength)] || 0;\n  min = i ? samples[i - 1] : 0;\n  max = samples[i];\n\n  if (max < length) {\n    min = max;\n    max = samples[++i];\n  }\n\n  t = 1 / resolution * ((length - min) / (max - min) + i % resolution) || 0;\n  inv = 1 - t;\n  i = ~~(i / resolution) * 6;\n  a = segment[i];\n  result.x = paths_round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n  result.y = paths_round((t * t * (segment[i + 7] - (a = segment[i + 1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n\n  if (includeAngle) {\n    result.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n  }\n\n  return result;\n} //applies a matrix transform to RawPath (or a segment in a RawPath) and returns whatever was passed in (it transforms the values in the array(s), not a copy).\n\nfunction transformRawPath(rawPath, a, b, c, d, tx, ty) {\n  var j = rawPath.length,\n      segment,\n      l,\n      i,\n      x,\n      y;\n\n  while (--j > -1) {\n    segment = rawPath[j];\n    l = segment.length;\n\n    for (i = 0; i < l; i += 2) {\n      x = segment[i];\n      y = segment[i + 1];\n      segment[i] = x * a + y * c + tx;\n      segment[i + 1] = x * b + y * d + ty;\n    }\n  }\n\n  rawPath._dirty = 1;\n  return rawPath;\n} // translates SVG arc data into a segment (cubic beziers). Angle is in degrees.\n\nfunction arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n  if (lastX === x && lastY === y) {\n    return;\n  }\n\n  rx = _abs(rx);\n  ry = _abs(ry);\n\n  var angleRad = angle % 360 * _DEG2RAD,\n      cosAngle = _cos(angleRad),\n      sinAngle = _sin(angleRad),\n      PI = Math.PI,\n      TWOPI = PI * 2,\n      dx2 = (lastX - x) / 2,\n      dy2 = (lastY - y) / 2,\n      x1 = cosAngle * dx2 + sinAngle * dy2,\n      y1 = -sinAngle * dx2 + cosAngle * dy2,\n      x1_sq = x1 * x1,\n      y1_sq = y1 * y1,\n      radiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\n  if (radiiCheck > 1) {\n    rx = _sqrt(radiiCheck) * rx;\n    ry = _sqrt(radiiCheck) * ry;\n  }\n\n  var rx_sq = rx * rx,\n      ry_sq = ry * ry,\n      sq = (rx_sq * ry_sq - rx_sq * y1_sq - ry_sq * x1_sq) / (rx_sq * y1_sq + ry_sq * x1_sq);\n\n  if (sq < 0) {\n    sq = 0;\n  }\n\n  var coef = (largeArcFlag === sweepFlag ? -1 : 1) * _sqrt(sq),\n      cx1 = coef * (rx * y1 / ry),\n      cy1 = coef * -(ry * x1 / rx),\n      sx2 = (lastX + x) / 2,\n      sy2 = (lastY + y) / 2,\n      cx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n      cy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n      ux = (x1 - cx1) / rx,\n      uy = (y1 - cy1) / ry,\n      vx = (-x1 - cx1) / rx,\n      vy = (-y1 - cy1) / ry,\n      temp = ux * ux + uy * uy,\n      angleStart = (uy < 0 ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n      angleExtent = (ux * vy - uy * vx < 0 ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\n  if (isNaN(angleExtent)) {\n    //rare edge case. Math.cos(-1) is NaN.\n    angleExtent = PI;\n  }\n\n  if (!sweepFlag && angleExtent > 0) {\n    angleExtent -= TWOPI;\n  } else if (sweepFlag && angleExtent < 0) {\n    angleExtent += TWOPI;\n  }\n\n  angleStart %= TWOPI;\n  angleExtent %= TWOPI;\n\n  var segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)),\n      rawPath = [],\n      angleIncrement = angleExtent / segments,\n      controlLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n      ma = cosAngle * rx,\n      mb = sinAngle * rx,\n      mc = sinAngle * -ry,\n      md = cosAngle * ry,\n      i;\n\n  for (i = 0; i < segments; i++) {\n    angle = angleStart + i * angleIncrement;\n    x1 = _cos(angle);\n    y1 = _sin(angle);\n    ux = _cos(angle += angleIncrement);\n    uy = _sin(angle);\n    rawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n  } //now transform according to the actual size of the ellipse/arc (the beziers were noramlized, between 0 and 1 on a circle).\n\n\n  for (i = 0; i < rawPath.length; i += 2) {\n    x1 = rawPath[i];\n    y1 = rawPath[i + 1];\n    rawPath[i] = x1 * ma + y1 * mc + cx;\n    rawPath[i + 1] = x1 * mb + y1 * md + cy;\n  }\n\n  rawPath[i - 2] = x; //always set the end to exactly where it\'s supposed to be\n\n  rawPath[i - 1] = y;\n  return rawPath;\n} //Spits back a RawPath with absolute coordinates. Each segment starts with a "moveTo" command (x coordinate, then y) and then 2 control points (x, y, x, y), then anchor. The goal is to minimize memory and maximize speed.\n\n\nfunction stringToRawPath(d) {\n  var a = (d + "").replace(_scientific, function (m) {\n    var n = +m;\n    return n < 0.0001 && n > -0.0001 ? 0 : n;\n  }).match(_svgPathExp) || [],\n      //some authoring programs spit out very small numbers in scientific notation like "1e-5", so make sure we round that down to 0 first.\n  path = [],\n      relativeX = 0,\n      relativeY = 0,\n      twoThirds = 2 / 3,\n      elements = a.length,\n      points = 0,\n      errorMessage = "ERROR: malformed path: " + d,\n      i,\n      j,\n      x,\n      y,\n      command,\n      isRelative,\n      segment,\n      startX,\n      startY,\n      difX,\n      difY,\n      beziers,\n      prevCommand,\n      flag1,\n      flag2,\n      line = function line(sx, sy, ex, ey) {\n    difX = (ex - sx) / 3;\n    difY = (ey - sy) / 3;\n    segment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n  };\n\n  if (!d || !isNaN(a[0]) || isNaN(a[1])) {\n    console.log(errorMessage);\n    return path;\n  }\n\n  for (i = 0; i < elements; i++) {\n    prevCommand = command;\n\n    if (isNaN(a[i])) {\n      command = a[i].toUpperCase();\n      isRelative = command !== a[i]; //lower case means relative\n    } else {\n      //commands like "C" can be strung together without any new command characters between.\n      i--;\n    }\n\n    x = +a[i + 1];\n    y = +a[i + 2];\n\n    if (isRelative) {\n      x += relativeX;\n      y += relativeY;\n    }\n\n    if (!i) {\n      startX = x;\n      startY = y;\n    } // "M" (move)\n\n\n    if (command === "M") {\n      if (segment) {\n        if (segment.length < 8) {\n          //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n          path.length -= 1;\n        } else {\n          points += segment.length;\n        }\n      }\n\n      relativeX = startX = x;\n      relativeY = startY = y;\n      segment = [x, y];\n      path.push(segment);\n      i += 2;\n      command = "L"; //an "M" with more than 2 values gets interpreted as "lineTo" commands ("L").\n      // "C" (cubic bezier)\n    } else if (command === "C") {\n      if (!segment) {\n        segment = [0, 0];\n      }\n\n      if (!isRelative) {\n        relativeX = relativeY = 0;\n      } //note: "*1" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n\n\n      segment.push(x, y, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, relativeX += a[i + 5] * 1, relativeY += a[i + 6] * 1);\n      i += 6; // "S" (continuation of cubic bezier)\n    } else if (command === "S") {\n      difX = relativeX;\n      difY = relativeY;\n\n      if (prevCommand === "C" || prevCommand === "S") {\n        difX += relativeX - segment[segment.length - 4];\n        difY += relativeY - segment[segment.length - 3];\n      }\n\n      if (!isRelative) {\n        relativeX = relativeY = 0;\n      }\n\n      segment.push(difX, difY, x, y, relativeX += a[i + 3] * 1, relativeY += a[i + 4] * 1);\n      i += 4; // "Q" (quadratic bezier)\n    } else if (command === "Q") {\n      difX = relativeX + (x - relativeX) * twoThirds;\n      difY = relativeY + (y - relativeY) * twoThirds;\n\n      if (!isRelative) {\n        relativeX = relativeY = 0;\n      }\n\n      relativeX += a[i + 3] * 1;\n      relativeY += a[i + 4] * 1;\n      segment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n      i += 4; // "T" (continuation of quadratic bezier)\n    } else if (command === "T") {\n      difX = relativeX - segment[segment.length - 4];\n      difY = relativeY - segment[segment.length - 3];\n      segment.push(relativeX + difX, relativeY + difY, x + (relativeX + difX * 1.5 - x) * twoThirds, y + (relativeY + difY * 1.5 - y) * twoThirds, relativeX = x, relativeY = y);\n      i += 2; // "H" (horizontal line)\n    } else if (command === "H") {\n      line(relativeX, relativeY, relativeX = x, relativeY);\n      i += 1; // "V" (vertical line)\n    } else if (command === "V") {\n      //adjust values because the first (and only one) isn\'t x in this case, it\'s y.\n      line(relativeX, relativeY, relativeX, relativeY = x + (isRelative ? relativeY - relativeX : 0));\n      i += 1; // "L" (line) or "Z" (close)\n    } else if (command === "L" || command === "Z") {\n      if (command === "Z") {\n        x = startX;\n        y = startY;\n        segment.closed = true;\n      }\n\n      if (command === "L" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n        line(relativeX, relativeY, x, y);\n\n        if (command === "L") {\n          i += 2;\n        }\n      }\n\n      relativeX = x;\n      relativeY = y; // "A" (arc)\n    } else if (command === "A") {\n      flag1 = a[i + 4];\n      flag2 = a[i + 5];\n      difX = a[i + 6];\n      difY = a[i + 7];\n      j = 7;\n\n      if (flag1.length > 1) {\n        // for cases when the flags are merged, like "a8 8 0 018 8" (the 0 and 1 flags are WITH the x value of 8, but it could also be "a8 8 0 01-8 8" so it may include x or not)\n        if (flag1.length < 3) {\n          difY = difX;\n          difX = flag2;\n          j--;\n        } else {\n          difY = flag2;\n          difX = flag1.substr(2);\n          j -= 2;\n        }\n\n        flag2 = flag1.charAt(1);\n        flag1 = flag1.charAt(0);\n      }\n\n      beziers = arcToSegment(relativeX, relativeY, +a[i + 1], +a[i + 2], +a[i + 3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX * 1, (isRelative ? relativeY : 0) + difY * 1);\n      i += j;\n\n      if (beziers) {\n        for (j = 0; j < beziers.length; j++) {\n          segment.push(beziers[j]);\n        }\n      }\n\n      relativeX = segment[segment.length - 2];\n      relativeY = segment[segment.length - 1];\n    } else {\n      console.log(errorMessage);\n    }\n  }\n\n  i = segment.length;\n\n  if (i < 6) {\n    //in case there\'s odd SVG like a M0,0 command at the very end.\n    path.pop();\n    i = 0;\n  } else if (segment[0] === segment[i - 2] && segment[1] === segment[i - 1]) {\n    segment.closed = true;\n  }\n\n  path.totalPoints = points + i;\n  return path;\n} //populates the points array in alternating x/y values (like [x, y, x, y...] instead of individual point objects [{x, y}, {x, y}...] to conserve memory and stay in line with how we\'re handling segment arrays\n\nfunction bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n  var x12 = (x1 + x2) / 2,\n      y12 = (y1 + y2) / 2,\n      x23 = (x2 + x3) / 2,\n      y23 = (y2 + y3) / 2,\n      x34 = (x3 + x4) / 2,\n      y34 = (y3 + y4) / 2,\n      x123 = (x12 + x23) / 2,\n      y123 = (y12 + y23) / 2,\n      x234 = (x23 + x34) / 2,\n      y234 = (y23 + y34) / 2,\n      x1234 = (x123 + x234) / 2,\n      y1234 = (y123 + y234) / 2,\n      dx = x4 - x1,\n      dy = y4 - y1,\n      d2 = _abs((x2 - x4) * dy - (y2 - y4) * dx),\n      d3 = _abs((x3 - x4) * dy - (y3 - y4) * dx),\n      length;\n\n  if (!points) {\n    points = [x1, y1, x4, y4];\n    index = 2;\n  }\n\n  points.splice(index || points.length - 2, 0, x1234, y1234);\n\n  if ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n    length = points.length;\n    bezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);\n    bezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 2 + (points.length - length));\n  }\n\n  return points;\n}\n/*\nfunction getAngleBetweenPoints(x0, y0, x1, y1, x2, y2) { //angle between 3 points in radians\n\tvar dx1 = x1 - x0,\n\t\tdy1 = y1 - y0,\n\t\tdx2 = x2 - x1,\n\t\tdy2 = y2 - y1,\n\t\tdx3 = x2 - x0,\n\t\tdy3 = y2 - y0,\n\t\ta = dx1 * dx1 + dy1 * dy1,\n\t\tb = dx2 * dx2 + dy2 * dy2,\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\treturn Math.acos( (a + b - c) / _sqrt(4 * a * b) );\n},\n*/\n//pointsToSegment() doesn\'t handle flat coordinates (where y is always 0) the way we need (the resulting control points are always right on top of the anchors), so this function basically makes the control points go directly up and down, varying in length based on the curviness (more curvy, further control points)\n\nfunction flatPointsToSegment(points, curviness) {\n  if (curviness === void 0) {\n    curviness = 1;\n  }\n\n  var x = points[0],\n      y = 0,\n      segment = [x, y],\n      i = 2;\n\n  for (; i < points.length; i += 2) {\n    segment.push(x, y, points[i], y = (points[i] - x) * curviness / 2, x = points[i], -y);\n  }\n\n  return segment;\n} //points is an array of x/y points, like [x, y, x, y, x, y]\n\nfunction pointsToSegment(points, curviness, cornerThreshold) {\n  //points = simplifyPoints(points, tolerance);\n  var l = points.length - 2,\n      x = +points[0],\n      y = +points[1],\n      nextX = +points[2],\n      nextY = +points[3],\n      segment = [x, y, x, y],\n      dx2 = nextX - x,\n      dy2 = nextY - y,\n      prevX,\n      prevY,\n      angle,\n      slope,\n      i,\n      dx1,\n      dx3,\n      dy1,\n      dy3,\n      d1,\n      d2,\n      a,\n      b,\n      c;\n\n  if (isNaN(cornerThreshold)) {\n    cornerThreshold = Math.PI / 10;\n  }\n\n  curviness = curviness || curviness === 0 ? +curviness : 1;\n\n  for (i = 2; i < l; i += 2) {\n    prevX = x;\n    prevY = y;\n    x = nextX;\n    y = nextY;\n    nextX = +points[i + 2];\n    nextY = +points[i + 3];\n    dx1 = dx2;\n    dy1 = dy2;\n    dx2 = nextX - x;\n    dy2 = nextY - y;\n    dx3 = nextX - prevX;\n    dy3 = nextY - prevY;\n    a = dx1 * dx1 + dy1 * dy1;\n    b = dx2 * dx2 + dy2 * dy2;\n    c = dx3 * dx3 + dy3 * dy3;\n    angle = Math.acos((a + b - c) / _sqrt(4 * a * b)); //angle between the 3 points\n\n    d2 = angle / Math.PI * curviness; //temporary precalculation for speed (reusing d2 variable)\n\n    d1 = _sqrt(a) * d2; //the tighter the angle, the shorter we make the handles in proportion.\n\n    d2 *= _sqrt(b);\n\n    if (x !== prevX || y !== prevY) {\n      if (angle > cornerThreshold) {\n        slope = _atan2(dy3, dx3);\n        segment.push(paths_round(x - _cos(slope) * d1), //first control point\n        paths_round(y - _sin(slope) * d1), paths_round(x), //anchor\n        paths_round(y), paths_round(x + _cos(slope) * d2), //second control point\n        paths_round(y + _sin(slope) * d2));\n      } else {\n        slope = _atan2(dy1, dx1);\n        segment.push(paths_round(x - _cos(slope) * d1), //first control point\n        paths_round(y - _sin(slope) * d1));\n        slope = _atan2(dy2, dx2);\n        segment.push(paths_round(x), //anchor\n        paths_round(y), paths_round(x + _cos(slope) * d2), //second control point\n        paths_round(y + _sin(slope) * d2));\n      }\n    }\n  }\n\n  segment.push(paths_round(nextX), paths_round(nextY), paths_round(nextX), paths_round(nextY));\n  return segment;\n} //returns the squared distance between an x/y coordinate and a segment between x1/y1 and x2/y2\n\nfunction pointToSegDist(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1,\n      dy = y2 - y1,\n      t;\n\n  if (dx || dy) {\n    t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n\n  return Math.pow(x - x1, 2) + Math.pow(y - y1, 2);\n}\n\nfunction simplifyStep(points, first, last, tolerance, simplified) {\n  var maxSqDist = tolerance,\n      firstX = points[first],\n      firstY = points[first + 1],\n      lastX = points[last],\n      lastY = points[last + 1],\n      index,\n      i,\n      d;\n\n  for (i = first + 2; i < last; i += 2) {\n    d = pointToSegDist(points[i], points[i + 1], firstX, firstY, lastX, lastY);\n\n    if (d > maxSqDist) {\n      index = i;\n      maxSqDist = d;\n    }\n  }\n\n  if (maxSqDist > tolerance) {\n    if (index - first > 2) {\n      simplifyStep(points, first, index, tolerance, simplified);\n    }\n\n    simplified.push(points[index], points[index + 1]);\n\n    if (last - index > 2) {\n      simplifyStep(points, index, last, tolerance, simplified);\n    }\n  }\n} //points is an array of x/y values like [x, y, x, y, x, y]\n\n\nfunction simplifyPoints(points, tolerance) {\n  var prevX = parseFloat(points[0]),\n      prevY = parseFloat(points[1]),\n      temp = [prevX, prevY],\n      l = points.length - 2,\n      i,\n      x,\n      y,\n      dx,\n      dy,\n      result,\n      last;\n  tolerance = Math.pow(tolerance || 1, 2);\n\n  for (i = 2; i < l; i += 2) {\n    x = parseFloat(points[i]);\n    y = parseFloat(points[i + 1]);\n    dx = prevX - x;\n    dy = prevY - y;\n\n    if (dx * dx + dy * dy > tolerance) {\n      temp.push(x, y);\n      prevX = x;\n      prevY = y;\n    }\n  }\n\n  temp.push(parseFloat(points[l]), parseFloat(points[l + 1]));\n  last = temp.length - 2;\n  result = [temp[0], temp[1]];\n  simplifyStep(temp, 0, last, tolerance, result);\n  result.push(temp[last], temp[last + 1]);\n  return result;\n}\n\nfunction getClosestProgressOnBezier(iterations, px, py, start, end, slices, x0, y0, x1, y1, x2, y2, x3, y3) {\n  var inc = (end - start) / slices,\n      best = 0,\n      t = start,\n      x,\n      y,\n      d,\n      dx,\n      dy,\n      inv;\n  _bestDistance = _largeNum;\n\n  while (t <= end) {\n    inv = 1 - t;\n    x = inv * inv * inv * x0 + 3 * inv * inv * t * x1 + 3 * inv * t * t * x2 + t * t * t * x3;\n    y = inv * inv * inv * y0 + 3 * inv * inv * t * y1 + 3 * inv * t * t * y2 + t * t * t * y3;\n    dx = x - px;\n    dy = y - py;\n    d = dx * dx + dy * dy;\n\n    if (d < _bestDistance) {\n      _bestDistance = d;\n      best = t;\n    }\n\n    t += inc;\n  }\n\n  return iterations > 1 ? getClosestProgressOnBezier(iterations - 1, px, py, Math.max(best - inc, 0), Math.min(best + inc, 1), slices, x0, y0, x1, y1, x2, y2, x3, y3) : best;\n}\n\nfunction getClosestData(rawPath, x, y, slices) {\n  //returns an object with the closest j, i, and t (j is the segment index, i is the index of the point in that segment, and t is the time/progress along that bezier)\n  var closest = {\n    j: 0,\n    i: 0,\n    t: 0\n  },\n      bestDistance = _largeNum,\n      i,\n      j,\n      t,\n      segment;\n\n  for (j = 0; j < rawPath.length; j++) {\n    segment = rawPath[j];\n\n    for (i = 0; i < segment.length; i += 6) {\n      t = getClosestProgressOnBezier(1, x, y, 0, 1, slices || 20, segment[i], segment[i + 1], segment[i + 2], segment[i + 3], segment[i + 4], segment[i + 5], segment[i + 6], segment[i + 7]);\n\n      if (bestDistance > _bestDistance) {\n        bestDistance = _bestDistance;\n        closest.j = j;\n        closest.i = i;\n        closest.t = t;\n      }\n    }\n  }\n\n  return closest;\n} //subdivide a Segment closest to a specific x,y coordinate\n\nfunction subdivideSegmentNear(x, y, segment, slices, iterations) {\n  var l = segment.length,\n      bestDistance = _largeNum,\n      bestT = 0,\n      bestSegmentIndex = 0,\n      t,\n      i;\n  slices = slices || 20;\n  iterations = iterations || 3;\n\n  for (i = 0; i < l; i += 6) {\n    t = getClosestProgressOnBezier(1, x, y, 0, 1, slices, segment[i], segment[i + 1], segment[i + 2], segment[i + 3], segment[i + 4], segment[i + 5], segment[i + 6], segment[i + 7]);\n\n    if (bestDistance > _bestDistance) {\n      bestDistance = _bestDistance;\n      bestT = t;\n      bestSegmentIndex = i;\n    }\n  }\n\n  t = getClosestProgressOnBezier(iterations, x, y, bestT - 0.05, bestT + 0.05, slices, segment[bestSegmentIndex], segment[bestSegmentIndex + 1], segment[bestSegmentIndex + 2], segment[bestSegmentIndex + 3], segment[bestSegmentIndex + 4], segment[bestSegmentIndex + 5], segment[bestSegmentIndex + 6], segment[bestSegmentIndex + 7]);\n  subdivideSegment(segment, bestSegmentIndex, t);\n  return bestSegmentIndex + 6;\n}\n/*\nTakes any of the following and converts it to an all Cubic Bezier SVG data string:\n- A <path> data string like "M0,0 L2,4 v20,15 H100"\n- A RawPath, like [[x, y, x, y, x, y, x, y][[x, y, x, y, x, y, x, y]]\n- A Segment, like [x, y, x, y, x, y, x, y]\n\nNote: all numbers are rounded down to the closest 0.001 to minimize memory, maximize speed, and avoid odd numbers like 1e-13\n*/\n\nfunction rawPathToString(rawPath) {\n  if (paths_isNumber(rawPath[0])) {\n    //in case a segment is passed in instead\n    rawPath = [rawPath];\n  }\n\n  var result = "",\n      l = rawPath.length,\n      sl,\n      s,\n      i,\n      segment;\n\n  for (s = 0; s < l; s++) {\n    segment = rawPath[s];\n    result += "M" + paths_round(segment[0]) + "," + paths_round(segment[1]) + " C";\n    sl = segment.length;\n\n    for (i = 2; i < sl; i++) {\n      result += paths_round(segment[i++]) + "," + paths_round(segment[i++]) + " " + paths_round(segment[i++]) + "," + paths_round(segment[i++]) + " " + paths_round(segment[i++]) + "," + paths_round(segment[i]) + " ";\n    }\n\n    if (segment.closed) {\n      result += "z";\n    }\n  }\n\n  return result;\n}\n/*\n// takes a segment with coordinates [x, y, x, y, ...] and converts the control points into angles and lengths [x, y, angle, length, angle, length, x, y, angle, length, ...] so that it animates more cleanly and avoids odd breaks/kinks. For example, if you animate from 1 o\'clock to 6 o\'clock, it\'d just go directly/linearly rather than around. So the length would be very short in the middle of the tween.\nexport function cpCoordsToAngles(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tx, y, i;\n\tfor (i = 0; i < segment.length; i+=6) {\n\t\tx = segment[i+2] - segment[i];\n\t\ty = segment[i+3] - segment[i+1];\n\t\tresult[i+2] = Math.atan2(y, x);\n\t\tresult[i+3] = Math.sqrt(x * x + y * y);\n\t\tx = segment[i+6] - segment[i+4];\n\t\ty = segment[i+7] - segment[i+5];\n\t\tresult[i+4] = Math.atan2(y, x);\n\t\tresult[i+5] = Math.sqrt(x * x + y * y);\n\t}\n\treturn result;\n}\n\n// takes a segment that was converted with cpCoordsToAngles() to have angles and lengths instead of coordinates for the control points, and converts it BACK into coordinates.\nexport function cpAnglesToCoords(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tlength = segment.length,\n\t\trnd = 1000,\n\t\tangle, l, i, j;\n\tfor (i = 0; i < length; i+=6) {\n\t\tangle = segment[i+2];\n\t\tl = segment[i+3]; //length\n\t\tresult[i+2] = (((segment[i] + Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+3] = (((segment[i+1] + Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t\tangle = segment[i+4];\n\t\tl = segment[i+5]; //length\n\t\tresult[i+4] = (((segment[i+6] - Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+5] = (((segment[i+7] - Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t}\n\treturn result;\n}\n\n//adds an "isSmooth" array to each segment and populates it with a boolean value indicating whether or not it\'s smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.\nexport function populateSmoothData(rawPath) {\n\tlet j = rawPath.length,\n\t\tsmooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tisSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];\n\t\tsmoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];\n\t\tisSmooth.length = 4;\n\t\tl = segment.length - 2;\n\t\tfor (i = 6; i < l; i += 6) {\n\t\t\tx = segment[i] - segment[i - 2];\n\t\t\ty = segment[i + 1] - segment[i - 1];\n\t\t\tx2 = segment[i + 2] - segment[i];\n\t\t\ty2 = segment[i + 3] - segment[i + 1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tsmooth = (Math.abs(a - a2) < 0.09);\n\t\t\tif (smooth) {\n\t\t\t\tsmoothData[i - 2] = a;\n\t\t\t\tsmoothData[i + 2] = a2;\n\t\t\t\tsmoothData[i - 1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[i + 3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t}\n\t\t\tisSmooth.push(smooth, smooth, 0, 0, smooth, smooth);\n\t\t}\n\t\t//if the first and last points are identical, check to see if there\'s a smooth transition. We must handle this a bit differently due to their positions in the array.\n\t\tif (segment[l] === segment[0] && segment[l+1] === segment[1]) {\n\t\t\tx = segment[0] - segment[l-2];\n\t\t\ty = segment[1] - segment[l-1];\n\t\t\tx2 = segment[2] - segment[0];\n\t\t\ty2 = segment[3] - segment[1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tif (Math.abs(a - a2) < 0.09) {\n\t\t\t\tsmoothData[l-2] = a;\n\t\t\t\tsmoothData[2] = a2;\n\t\t\t\tsmoothData[l-1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t\tisSmooth[l-2] = isSmooth[l-1] = true; //don\'t change indexes 2 and 3 because we\'ll trigger everything from the END, and this will optimize file size a bit.\n\t\t\t}\n\t\t}\n\t}\n\treturn rawPath;\n}\nexport function pointToScreen(svgElement, point) {\n\tif (arguments.length < 2) { //by default, take the first set of coordinates in the path as the point\n\t\tlet rawPath = getRawPath(svgElement);\n\t\tpoint = svgElement.ownerSVGElement.createSVGPoint();\n\t\tpoint.x = rawPath[0][0];\n\t\tpoint.y = rawPath[0][1];\n\t}\n\treturn point.matrixTransform(svgElement.getScreenCTM());\n}\n\n*/\n;// CONCATENATED MODULE: ./app/src/js/classes/morphSVGPlugin.js\nfunction morphSVGPlugin_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { morphSVGPlugin_typeof = function _typeof(obj) { return typeof obj; }; } else { morphSVGPlugin_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return morphSVGPlugin_typeof(obj); }\n\n/*!\n * MorphSVGPlugin 3.2.6\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\n\n\nvar morphSVGPlugin_gsap,\n    morphSVGPlugin_toArray,\n    _lastLinkedAnchor,\n    morphSVGPlugin_doc,\n    morphSVGPlugin_coreInitted,\n    PluginClass,\n    morphSVGPlugin_getGSAP = function _getGSAP() {\n  return morphSVGPlugin_gsap || typeof window !== "undefined" && (morphSVGPlugin_gsap = window.gsap) && morphSVGPlugin_gsap.registerPlugin && morphSVGPlugin_gsap;\n},\n    morphSVGPlugin_atan2 = Math.atan2,\n    morphSVGPlugin_cos = Math.cos,\n    morphSVGPlugin_sin = Math.sin,\n    morphSVGPlugin_sqrt = Math.sqrt,\n    _PI = Math.PI,\n    _2PI = _PI * 2,\n    _angleMin = _PI * 0.3,\n    _angleMax = _PI * 0.7,\n    morphSVGPlugin_bigNum = 1e20,\n    _numExp = /[-+=\\.]*\\d+[\\.e\\-\\+]*\\d*[e\\-\\+]*\\d*/gi,\n    //finds any numbers, including ones that start with += or -=, negative numbers, and ones in scientific notation like 1e-8.\nmorphSVGPlugin_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/gi,\n    _commands = /[achlmqstvz]/ig,\n    _log = function _log(message) {\n  return console && console.warn(message);\n},\n    morphSVGPlugin_bonusValidated = 1,\n    //<name>MorphSVGPlugin</name>\n_getAverageXY = function _getAverageXY(segment) {\n  var l = segment.length,\n      x = 0,\n      y = 0,\n      i;\n\n  for (i = 0; i < l; i++) {\n    x += segment[i++];\n    y += segment[i];\n  }\n\n  return [x / (l / 2), y / (l / 2)];\n},\n    _getSize = function _getSize(segment) {\n  //rough estimate of the bounding box (based solely on the anchors) of a single segment. sets "size", "centerX", and "centerY" properties on the bezier array itself, and returns the size (width * height)\n  var l = segment.length,\n      xMax = segment[0],\n      xMin = xMax,\n      yMax = segment[1],\n      yMin = yMax,\n      x,\n      y,\n      i;\n\n  for (i = 6; i < l; i += 6) {\n    x = segment[i];\n    y = segment[i + 1];\n\n    if (x > xMax) {\n      xMax = x;\n    } else if (x < xMin) {\n      xMin = x;\n    }\n\n    if (y > yMax) {\n      yMax = y;\n    } else if (y < yMin) {\n      yMin = y;\n    }\n  }\n\n  segment.centerX = (xMax + xMin) / 2;\n  segment.centerY = (yMax + yMin) / 2;\n  return segment.size = (xMax - xMin) * (yMax - yMin);\n},\n    _getTotalSize = function _getTotalSize(rawPath, samplesPerBezier) {\n  if (samplesPerBezier === void 0) {\n    samplesPerBezier = 3;\n  } //rough estimate of the bounding box of the entire list of Bezier segments (based solely on the anchors). sets "size", "centerX", and "centerY" properties on the bezier array itself, and returns the size (width * height)\n\n\n  var j = rawPath.length,\n      xMax = rawPath[0][0],\n      xMin = xMax,\n      yMax = rawPath[0][1],\n      yMin = yMax,\n      inc = 1 / samplesPerBezier,\n      l,\n      x,\n      y,\n      i,\n      segment,\n      k,\n      t,\n      inv,\n      x1,\n      y1,\n      x2,\n      x3,\n      x4,\n      y2,\n      y3,\n      y4;\n\n  while (--j > -1) {\n    segment = rawPath[j];\n    l = segment.length;\n\n    for (i = 6; i < l; i += 6) {\n      x1 = segment[i];\n      y1 = segment[i + 1];\n      x2 = segment[i + 2] - x1;\n      y2 = segment[i + 3] - y1;\n      x3 = segment[i + 4] - x1;\n      y3 = segment[i + 5] - y1;\n      x4 = segment[i + 6] - x1;\n      y4 = segment[i + 7] - y1;\n      k = samplesPerBezier;\n\n      while (--k > -1) {\n        t = inc * k;\n        inv = 1 - t;\n        x = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t + x1;\n        y = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t + y1;\n\n        if (x > xMax) {\n          xMax = x;\n        } else if (x < xMin) {\n          xMin = x;\n        }\n\n        if (y > yMax) {\n          yMax = y;\n        } else if (y < yMin) {\n          yMin = y;\n        }\n      }\n    }\n  }\n\n  rawPath.centerX = (xMax + xMin) / 2;\n  rawPath.centerY = (yMax + yMin) / 2;\n  rawPath.left = xMin;\n  rawPath.width = xMax - xMin;\n  rawPath.top = yMin;\n  rawPath.height = yMax - yMin;\n  return rawPath.size = (xMax - xMin) * (yMax - yMin);\n},\n    _sortByComplexity = function _sortByComplexity(a, b) {\n  return b.length - a.length;\n},\n    _sortBySize = function _sortBySize(a, b) {\n  var sizeA = a.size || _getSize(a),\n      sizeB = b.size || _getSize(b);\n\n  return Math.abs(sizeB - sizeA) < (sizeA + sizeB) / 20 ? b.centerX - a.centerX || b.centerY - a.centerY : sizeB - sizeA; //if the size is within 10% of each other, prioritize position from left to right, then top to bottom.\n},\n    _offsetSegment = function _offsetSegment(segment, shapeIndex) {\n  var a = segment.slice(0),\n      l = segment.length,\n      wrap = l - 2,\n      i,\n      index;\n  shapeIndex = shapeIndex | 0;\n\n  for (i = 0; i < l; i++) {\n    index = (i + shapeIndex) % wrap;\n    segment[i++] = a[index];\n    segment[i] = a[index + 1];\n  }\n},\n    _getTotalMovement = function _getTotalMovement(sb, eb, shapeIndex, offsetX, offsetY) {\n  var l = sb.length,\n      d = 0,\n      wrap = l - 2,\n      index,\n      i,\n      x,\n      y;\n  shapeIndex *= 6;\n\n  for (i = 0; i < l; i += 6) {\n    index = (i + shapeIndex) % wrap;\n    y = sb[index] - (eb[i] - offsetX);\n    x = sb[index + 1] - (eb[i + 1] - offsetY);\n    d += morphSVGPlugin_sqrt(x * x + y * y);\n  }\n\n  return d;\n},\n    _getClosestShapeIndex = function _getClosestShapeIndex(sb, eb, checkReverse) {\n  //finds the index in a closed cubic bezier array that\'s closest to the angle provided (angle measured from the center or average x/y).\n  var l = sb.length,\n      sCenter = _getAverageXY(sb),\n      //when comparing distances, adjust the coordinates as if the shapes are centered with each other.\n  eCenter = _getAverageXY(eb),\n      offsetX = eCenter[0] - sCenter[0],\n      offsetY = eCenter[1] - sCenter[1],\n      min = _getTotalMovement(sb, eb, 0, offsetX, offsetY),\n      minIndex = 0,\n      copy,\n      d,\n      i;\n\n  for (i = 6; i < l; i += 6) {\n    d = _getTotalMovement(sb, eb, i / 6, offsetX, offsetY);\n\n    if (d < min) {\n      min = d;\n      minIndex = i;\n    }\n  }\n\n  if (checkReverse) {\n    copy = sb.slice(0);\n    reverseSegment(copy);\n\n    for (i = 6; i < l; i += 6) {\n      d = _getTotalMovement(copy, eb, i / 6, offsetX, offsetY);\n\n      if (d < min) {\n        min = d;\n        minIndex = -i;\n      }\n    }\n  }\n\n  return minIndex / 6;\n},\n    _getClosestAnchor = function _getClosestAnchor(rawPath, x, y) {\n  //finds the x/y of the anchor that\'s closest to the provided x/y coordinate (returns an array, like [x, y]). The bezier should be the top-level type that contains an array for each segment.\n  var j = rawPath.length,\n      closestDistance = morphSVGPlugin_bigNum,\n      closestX = 0,\n      closestY = 0,\n      segment,\n      dx,\n      dy,\n      d,\n      i,\n      l;\n\n  while (--j > -1) {\n    segment = rawPath[j];\n    l = segment.length;\n\n    for (i = 0; i < l; i += 6) {\n      dx = segment[i] - x;\n      dy = segment[i + 1] - y;\n      d = morphSVGPlugin_sqrt(dx * dx + dy * dy);\n\n      if (d < closestDistance) {\n        closestDistance = d;\n        closestX = segment[i];\n        closestY = segment[i + 1];\n      }\n    }\n  }\n\n  return [closestX, closestY];\n},\n    _getClosestSegment = function _getClosestSegment(bezier, pool, startIndex, sortRatio, offsetX, offsetY) {\n  //matches the bezier to the closest one in a pool (array) of beziers, assuming they are in order of size and we shouldn\'t drop more than 20% of the size, otherwise prioritizing location (total distance to the center). Extracts the segment out of the pool array and returns it.\n  var l = pool.length,\n      index = 0,\n      minSize = Math.min(bezier.size || _getSize(bezier), pool[startIndex].size || _getSize(pool[startIndex])) * sortRatio,\n      //limit things based on a percentage of the size of either the bezier or the next element in the array, whichever is smaller.\n  min = morphSVGPlugin_bigNum,\n      cx = bezier.centerX + offsetX,\n      cy = bezier.centerY + offsetY,\n      size,\n      i,\n      dx,\n      dy,\n      d;\n\n  for (i = startIndex; i < l; i++) {\n    size = pool[i].size || _getSize(pool[i]);\n\n    if (size < minSize) {\n      break;\n    }\n\n    dx = pool[i].centerX - cx;\n    dy = pool[i].centerY - cy;\n    d = morphSVGPlugin_sqrt(dx * dx + dy * dy);\n\n    if (d < min) {\n      index = i;\n      min = d;\n    }\n  }\n\n  d = pool[index];\n  pool.splice(index, 1);\n  return d;\n},\n    _subdivideSegmentQty = function _subdivideSegmentQty(segment, quantity) {\n  var tally = 0,\n      max = 0.999999,\n      l = segment.length,\n      newPointsPerSegment = quantity / ((l - 2) / 6),\n      ax,\n      ay,\n      cp1x,\n      cp1y,\n      cp2x,\n      cp2y,\n      bx,\n      by,\n      x1,\n      y1,\n      x2,\n      y2,\n      i,\n      t;\n\n  for (i = 2; i < l; i += 6) {\n    tally += newPointsPerSegment;\n\n    while (tally > max) {\n      //compare with 0.99999 instead of 1 in order to prevent rounding errors\n      ax = segment[i - 2];\n      ay = segment[i - 1];\n      cp1x = segment[i];\n      cp1y = segment[i + 1];\n      cp2x = segment[i + 2];\n      cp2y = segment[i + 3];\n      bx = segment[i + 4];\n      by = segment[i + 5];\n      t = 1 / ((Math.floor(tally) || 1) + 1); //progress along the bezier (value between 0 and 1)\n\n      x1 = ax + (cp1x - ax) * t;\n      x2 = cp1x + (cp2x - cp1x) * t;\n      x1 += (x2 - x1) * t;\n      x2 += (cp2x + (bx - cp2x) * t - x2) * t;\n      y1 = ay + (cp1y - ay) * t;\n      y2 = cp1y + (cp2y - cp1y) * t;\n      y1 += (y2 - y1) * t;\n      y2 += (cp2y + (by - cp2y) * t - y2) * t;\n      segment.splice(i, 4, ax + (cp1x - ax) * t, //first control point\n      ay + (cp1y - ay) * t, x1, //second control point\n      y1, x1 + (x2 - x1) * t, //new fabricated anchor on line\n      y1 + (y2 - y1) * t, x2, //third control point\n      y2, cp2x + (bx - cp2x) * t, //fourth control point\n      cp2y + (by - cp2y) * t);\n      i += 6;\n      l += 6;\n      tally--;\n    }\n  }\n\n  return segment;\n},\n    _equalizeSegmentQuantity = function _equalizeSegmentQuantity(start, end, shapeIndex, map, fillSafe) {\n  //returns an array of shape indexes, 1 for each segment.\n  var dif = end.length - start.length,\n      longer = dif > 0 ? end : start,\n      shorter = dif > 0 ? start : end,\n      added = 0,\n      sortMethod = map === "complexity" ? _sortByComplexity : _sortBySize,\n      sortRatio = map === "position" ? 0 : typeof map === "number" ? map : 0.8,\n      i = shorter.length,\n      shapeIndices = morphSVGPlugin_typeof(shapeIndex) === "object" && shapeIndex.push ? shapeIndex.slice(0) : [shapeIndex],\n      reverse = shapeIndices[0] === "reverse" || shapeIndices[0] < 0,\n      log = shapeIndex === "log",\n      eb,\n      sb,\n      b,\n      x,\n      y,\n      offsetX,\n      offsetY;\n\n  if (!shorter[0]) {\n    return;\n  }\n\n  if (longer.length > 1) {\n    start.sort(sortMethod);\n    end.sort(sortMethod);\n    offsetX = longer.size || _getTotalSize(longer); //ensures centerX and centerY are defined (used below).\n\n    offsetX = shorter.size || _getTotalSize(shorter);\n    offsetX = longer.centerX - shorter.centerX;\n    offsetY = longer.centerY - shorter.centerY;\n\n    if (sortMethod === _sortBySize) {\n      for (i = 0; i < shorter.length; i++) {\n        longer.splice(i, 0, _getClosestSegment(shorter[i], longer, i, sortRatio, offsetX, offsetY));\n      }\n    }\n  }\n\n  if (dif) {\n    if (dif < 0) {\n      dif = -dif;\n    }\n\n    if (longer[0].length > shorter[0].length) {\n      //since we use shorter[0] as the one to map the origination point of any brand new fabricated segments, do any subdividing first so that there are more points to choose from (if necessary)\n      _subdivideSegmentQty(shorter[0], (longer[0].length - shorter[0].length) / 6 | 0);\n    }\n\n    i = shorter.length;\n\n    while (added < dif) {\n      x = longer[i].size || _getSize(longer[i]); //just to ensure centerX and centerY are calculated which we use on the next line.\n\n      b = _getClosestAnchor(shorter, longer[i].centerX, longer[i].centerY);\n      x = b[0];\n      y = b[1];\n      shorter[i++] = [x, y, x, y, x, y, x, y];\n      shorter.totalPoints += 8;\n      added++;\n    }\n  }\n\n  for (i = 0; i < start.length; i++) {\n    eb = end[i];\n    sb = start[i];\n    dif = eb.length - sb.length;\n\n    if (dif < 0) {\n      _subdivideSegmentQty(eb, -dif / 6 | 0);\n    } else if (dif > 0) {\n      _subdivideSegmentQty(sb, dif / 6 | 0);\n    }\n\n    if (reverse && fillSafe !== false && !sb.reversed) {\n      reverseSegment(sb);\n    }\n\n    shapeIndex = shapeIndices[i] || shapeIndices[i] === 0 ? shapeIndices[i] : "auto";\n\n    if (shapeIndex) {\n      //if start shape is closed, find the closest point to the start/end, and re-organize the bezier points accordingly so that the shape morphs in a more intuitive way.\n      if (sb.closed || Math.abs(sb[0] - sb[sb.length - 2]) < 0.5 && Math.abs(sb[1] - sb[sb.length - 1]) < 0.5) {\n        if (shapeIndex === "auto" || shapeIndex === "log") {\n          shapeIndices[i] = shapeIndex = _getClosestShapeIndex(sb, eb, !i || fillSafe === false);\n\n          if (shapeIndex < 0) {\n            reverse = true;\n            reverseSegment(sb);\n            shapeIndex = -shapeIndex;\n          }\n\n          _offsetSegment(sb, shapeIndex * 6);\n        } else if (shapeIndex !== "reverse") {\n          if (i && shapeIndex < 0) {\n            //only happens if an array is passed as shapeIndex and a negative value is defined for an index beyond 0. Very rare, but helpful sometimes.\n            reverseSegment(sb);\n          }\n\n          _offsetSegment(sb, (shapeIndex < 0 ? -shapeIndex : shapeIndex) * 6);\n        } //otherwise, if it\'s not a closed shape, consider reversing it if that would make the overall travel less\n\n      } else if (!reverse && (shapeIndex === "auto" && Math.abs(eb[0] - sb[0]) + Math.abs(eb[1] - sb[1]) + Math.abs(eb[eb.length - 2] - sb[sb.length - 2]) + Math.abs(eb[eb.length - 1] - sb[sb.length - 1]) > Math.abs(eb[0] - sb[sb.length - 2]) + Math.abs(eb[1] - sb[sb.length - 1]) + Math.abs(eb[eb.length - 2] - sb[0]) + Math.abs(eb[eb.length - 1] - sb[1]) || shapeIndex % 2)) {\n        reverseSegment(sb);\n        shapeIndices[i] = -1;\n        reverse = true;\n      } else if (shapeIndex === "auto") {\n        shapeIndices[i] = 0;\n      } else if (shapeIndex === "reverse") {\n        shapeIndices[i] = -1;\n      }\n\n      if (sb.closed !== eb.closed) {\n        //if one is closed and one isn\'t, don\'t close either one otherwise the tweening will look weird (but remember, the beginning and final states will honor the actual values, so this only affects the inbetween state)\n        sb.closed = eb.closed = false;\n      }\n    }\n  }\n\n  if (log) {\n    _log("shapeIndex:[" + shapeIndices.join(",") + "]");\n  }\n\n  start.shapeIndex = shapeIndices;\n  return shapeIndices;\n},\n    _pathFilter = function _pathFilter(a, shapeIndex, map, precompile, fillSafe) {\n  var start = stringToRawPath(a[0]),\n      end = stringToRawPath(a[1]);\n\n  if (!_equalizeSegmentQuantity(start, end, shapeIndex || shapeIndex === 0 ? shapeIndex : "auto", map, fillSafe)) {\n    return; //malformed path data or null target\n  }\n\n  a[0] = rawPathToString(start);\n  a[1] = rawPathToString(end);\n\n  if (precompile === "log" || precompile === true) {\n    _log(\'precompile:["\' + a[0] + \'","\' + a[1] + \'"]\');\n  }\n},\n    _offsetPoints = function _offsetPoints(text, offset) {\n  if (!offset) {\n    return text;\n  }\n\n  var a = text.match(_numExp) || [],\n      l = a.length,\n      s = "",\n      inc,\n      i,\n      j;\n\n  if (offset === "reverse") {\n    i = l - 1;\n    inc = -2;\n  } else {\n    i = ((parseInt(offset, 10) || 0) * 2 + 1 + l * 100) % l;\n    inc = 2;\n  }\n\n  for (j = 0; j < l; j += 2) {\n    s += a[i - 1] + "," + a[i] + " ";\n    i = (i + inc) % l;\n  }\n\n  return s;\n},\n    //adds a certain number of points while maintaining the polygon/polyline shape (so that the start/end values can have a matching quantity of points to animate). Returns the revised string.\n_equalizePointQuantity = function _equalizePointQuantity(a, quantity) {\n  var tally = 0,\n      x = parseFloat(a[0]),\n      y = parseFloat(a[1]),\n      s = x + "," + y + " ",\n      max = 0.999999,\n      newPointsPerSegment,\n      i,\n      l,\n      j,\n      factor,\n      nextX,\n      nextY;\n  l = a.length;\n  newPointsPerSegment = quantity * 0.5 / (l * 0.5 - 1);\n\n  for (i = 0; i < l - 2; i += 2) {\n    tally += newPointsPerSegment;\n    nextX = parseFloat(a[i + 2]);\n    nextY = parseFloat(a[i + 3]);\n\n    if (tally > max) {\n      //compare with 0.99999 instead of 1 in order to prevent rounding errors\n      factor = 1 / (Math.floor(tally) + 1);\n      j = 1;\n\n      while (tally > max) {\n        s += (x + (nextX - x) * factor * j).toFixed(2) + "," + (y + (nextY - y) * factor * j).toFixed(2) + " ";\n        tally--;\n        j++;\n      }\n    }\n\n    s += nextX + "," + nextY + " ";\n    x = nextX;\n    y = nextY;\n  }\n\n  return s;\n},\n    _pointsFilter = function _pointsFilter(a) {\n  var startNums = a[0].match(_numExp) || [],\n      endNums = a[1].match(_numExp) || [],\n      dif = endNums.length - startNums.length;\n\n  if (dif > 0) {\n    a[0] = _equalizePointQuantity(startNums, dif);\n  } else {\n    a[1] = _equalizePointQuantity(endNums, -dif);\n  }\n},\n    _buildPointsFilter = function _buildPointsFilter(shapeIndex) {\n  return !isNaN(shapeIndex) ? function (a) {\n    _pointsFilter(a);\n\n    a[1] = _offsetPoints(a[1], parseInt(shapeIndex, 10));\n  } : _pointsFilter;\n},\n    _parseShape = function _parseShape(shape, forcePath, target) {\n  var isString = typeof shape === "string",\n      e,\n      type;\n\n  if (!isString || morphSVGPlugin_selectorExp.test(shape) || (shape.match(_numExp) || []).length < 3) {\n    e = morphSVGPlugin_toArray(shape)[0];\n\n    if (e) {\n      type = (e.nodeName + "").toUpperCase();\n\n      if (forcePath && type !== "PATH") {\n        //if we were passed an element (or selector text for an element) that isn\'t a path, convert it.\n        e = paths_convertToPath(e, false);\n        type = "PATH";\n      }\n\n      shape = e.getAttribute(type === "PATH" ? "d" : "points") || "";\n\n      if (e === target) {\n        //if the shape matches the target element, the user wants to revert to the original which should have been stored in the data-original attribute\n        shape = e.getAttributeNS(null, "data-original") || shape;\n      }\n    } else {\n      _log("WARNING: invalid morph to: " + shape);\n\n      shape = false;\n    }\n  }\n\n  return shape;\n},\n    //adds an "isSmooth" array to each segment and populates it with a boolean value indicating whether or not it\'s smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.\n_populateSmoothData = function _populateSmoothData(rawPath, tolerance) {\n  var j = rawPath.length,\n      limit = 0.2 * (tolerance || 1),\n      smooth,\n      segment,\n      x,\n      y,\n      x2,\n      y2,\n      i,\n      l,\n      a,\n      a2,\n      isSmooth,\n      smoothData;\n\n  while (--j > -1) {\n    segment = rawPath[j];\n    isSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];\n    smoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];\n    isSmooth.length = 4;\n    l = segment.length - 2;\n\n    for (i = 6; i < l; i += 6) {\n      x = segment[i] - segment[i - 2];\n      y = segment[i + 1] - segment[i - 1];\n      x2 = segment[i + 2] - segment[i];\n      y2 = segment[i + 3] - segment[i + 1];\n      a = morphSVGPlugin_atan2(y, x);\n      a2 = morphSVGPlugin_atan2(y2, x2);\n      smooth = Math.abs(a - a2) < limit;\n\n      if (smooth) {\n        smoothData[i - 2] = a;\n        smoothData[i + 2] = a2;\n        smoothData[i - 1] = morphSVGPlugin_sqrt(x * x + y * y);\n        smoothData[i + 3] = morphSVGPlugin_sqrt(x2 * x2 + y2 * y2);\n      }\n\n      isSmooth.push(smooth, smooth, 0, 0, smooth, smooth);\n    } //if the first and last points are identical, check to see if there\'s a smooth transition. We must handle this a bit differently due to their positions in the array.\n\n\n    if (segment[l] === segment[0] && segment[l + 1] === segment[1]) {\n      x = segment[0] - segment[l - 2];\n      y = segment[1] - segment[l - 1];\n      x2 = segment[2] - segment[0];\n      y2 = segment[3] - segment[1];\n      a = morphSVGPlugin_atan2(y, x);\n      a2 = morphSVGPlugin_atan2(y2, x2);\n\n      if (Math.abs(a - a2) < limit) {\n        smoothData[l - 2] = a;\n        smoothData[2] = a2;\n        smoothData[l - 1] = morphSVGPlugin_sqrt(x * x + y * y);\n        smoothData[3] = morphSVGPlugin_sqrt(x2 * x2 + y2 * y2);\n        isSmooth[l - 2] = isSmooth[l - 1] = true; //don\'t change indexes 2 and 3 because we\'ll trigger everything from the END, and this will optimize file size a bit.\n      }\n    }\n  }\n\n  return rawPath;\n},\n    _parseOriginFactors = function _parseOriginFactors(v) {\n  var a = v.trim().split(" "),\n      x = ~v.indexOf("left") ? 0 : ~v.indexOf("right") ? 100 : isNaN(parseFloat(a[0])) ? 50 : parseFloat(a[0]),\n      y = ~v.indexOf("top") ? 0 : ~v.indexOf("bottom") ? 100 : isNaN(parseFloat(a[1])) ? 50 : parseFloat(a[1]);\n  return {\n    x: x / 100,\n    y: y / 100\n  };\n},\n    _shortAngle = function _shortAngle(dif) {\n  return dif !== dif % _PI ? dif + (dif < 0 ? _2PI : -_2PI) : dif;\n},\n    _morphMessage = "Use MorphSVGPlugin.convertToPath() to convert to a path before morphing.",\n    _tweenRotation = function _tweenRotation(start, end, i, linkedPT) {\n  var so = this._origin,\n      //starting origin\n  eo = this._eOrigin,\n      //ending origin\n  dx = start[i] - so.x,\n      dy = start[i + 1] - so.y,\n      d = morphSVGPlugin_sqrt(dx * dx + dy * dy),\n      //length from starting origin to starting point\n  sa = morphSVGPlugin_atan2(dy, dx),\n      angleDif,\n      _short;\n\n  dx = end[i] - eo.x;\n  dy = end[i + 1] - eo.y;\n  angleDif = morphSVGPlugin_atan2(dy, dx) - sa;\n  _short = _shortAngle(angleDif); //in the case of control points, we ALWAYS link them to their anchor so that they don\'t get torn apart and rotate the opposite direction. If it\'s not a control point, we look at the most recently linked point as long as they\'re within a certain rotational range of each other.\n\n  if (!linkedPT && _lastLinkedAnchor && Math.abs(_short + _lastLinkedAnchor.ca) < _angleMin) {\n    linkedPT = _lastLinkedAnchor;\n  }\n\n  return this._anchorPT = _lastLinkedAnchor = {\n    _next: this._anchorPT,\n    t: start,\n    sa: sa,\n    //starting angle\n    ca: linkedPT && _short * linkedPT.ca < 0 && Math.abs(_short) > _angleMax ? angleDif : _short,\n    //change in angle\n    sl: d,\n    //starting length\n    cl: morphSVGPlugin_sqrt(dx * dx + dy * dy) - d,\n    //change in length\n    i: i\n  };\n},\n    morphSVGPlugin_initCore = function _initCore(required) {\n  morphSVGPlugin_gsap = morphSVGPlugin_getGSAP();\n  PluginClass = PluginClass || morphSVGPlugin_gsap && morphSVGPlugin_gsap.plugins.morphSVG;\n\n  if (morphSVGPlugin_gsap && PluginClass) {\n    morphSVGPlugin_toArray = morphSVGPlugin_gsap.utils.toArray;\n    morphSVGPlugin_doc = document;\n    PluginClass.prototype._tweenRotation = _tweenRotation;\n    morphSVGPlugin_coreInitted = 1;\n  } else if (required) {\n    _log("Please gsap.registerPlugin(MorphSVGPlugin)");\n  }\n};\n\nvar MorphSVGPlugin = {\n  version: "3.2.6",\n  name: "morphSVG",\n  register: function register(core, Plugin) {\n    morphSVGPlugin_gsap = core;\n    PluginClass = Plugin;\n\n    morphSVGPlugin_initCore();\n  },\n  init: function init(target, value, tween, index, targets) {\n    var cs = target.nodeType ? window.getComputedStyle(target) : {},\n        fill = cs.fill + "",\n        fillSafe = !(fill === "none" || (fill.match(_numExp) || [])[3] === "0" || cs.fillRule === "evenodd"),\n        origins = (value.origin || "50 50").split(","),\n        type,\n        p,\n        pt,\n        shape,\n        isPoly,\n        shapeIndex,\n        map,\n        startSmooth,\n        endSmooth,\n        start,\n        end,\n        i,\n        j,\n        l,\n        startSeg,\n        endSeg,\n        precompiled,\n        sData,\n        eData,\n        originFactors,\n        useRotation,\n        offset;\n\n    if (!morphSVGPlugin_coreInitted) {\n      morphSVGPlugin_initCore(1);\n    }\n\n    type = (target.nodeName + "").toUpperCase();\n    isPoly = type === "POLYLINE" || type === "POLYGON";\n\n    if (type !== "PATH" && !isPoly && !value.prop) {\n      _log("Cannot morph a <" + type + "> element. " + _morphMessage);\n\n      return false;\n    }\n\n    p = type === "PATH" ? "d" : "points";\n\n    if (typeof value === "string" || value.getBBox || value[0]) {\n      value = {\n        shape: value\n      };\n    }\n\n    if (!value.prop && typeof target.setAttribute !== "function") {\n      return false;\n    }\n\n    shape = _parseShape(value.shape || value.d || value.points || "", p === "d", target);\n\n    if (isPoly && _commands.test(shape)) {\n      _log("A <" + type + "> cannot accept path data. " + _morphMessage);\n\n      return false;\n    }\n\n    shapeIndex = value.shapeIndex || value.shapeIndex === 0 ? value.shapeIndex : "auto";\n    map = value.map || MorphSVGPlugin.defaultMap;\n    this._prop = value.prop;\n    this._render = value.render || MorphSVGPlugin.defaultRender;\n    this._apply = "updateTarget" in value ? value.updateTarget : MorphSVGPlugin.defaultUpdateTarget;\n    this._rnd = Math.pow(10, isNaN(value.precision) ? 2 : +value.precision);\n    this._tween = tween;\n\n    if (shape) {\n      this._target = target;\n      precompiled = morphSVGPlugin_typeof(value.precompile) === "object";\n      start = this._prop ? target[this._prop] : target.getAttribute(p);\n\n      if (!this._prop && !target.getAttributeNS(null, "data-original")) {\n        target.setAttributeNS(null, "data-original", start); //record the original state in a data-original attribute so that we can revert to it later.\n      }\n\n      if (p === "d" || this._prop) {\n        start = stringToRawPath(precompiled ? value.precompile[0] : start);\n        end = stringToRawPath(precompiled ? value.precompile[1] : shape);\n\n        if (!precompiled && !_equalizeSegmentQuantity(start, end, shapeIndex, map, fillSafe)) {\n          return false; //malformed path data or null target\n        }\n\n        if (value.precompile === "log" || value.precompile === true) {\n          _log(\'precompile:["\' + rawPathToString(start) + \'","\' + rawPathToString(end) + \'"]\');\n        }\n\n        useRotation = (value.type || MorphSVGPlugin.defaultType) !== "linear";\n\n        if (useRotation) {\n          start = _populateSmoothData(start, value.smoothTolerance);\n          end = _populateSmoothData(end, value.smoothTolerance);\n\n          if (!start.size) {\n            _getTotalSize(start); //adds top/left/width/height values\n\n          }\n\n          if (!end.size) {\n            _getTotalSize(end);\n          }\n\n          originFactors = _parseOriginFactors(origins[0]);\n          this._origin = start.origin = {\n            x: start.left + originFactors.x * start.width,\n            y: start.top + originFactors.y * start.height\n          };\n\n          if (origins[1]) {\n            originFactors = _parseOriginFactors(origins[1]);\n          }\n\n          this._eOrigin = {\n            x: end.left + originFactors.x * end.width,\n            y: end.top + originFactors.y * end.height\n          };\n        }\n\n        this._rawPath = target._gsRawPath = start;\n        j = start.length;\n\n        while (--j > -1) {\n          startSeg = start[j];\n          endSeg = end[j];\n          startSmooth = startSeg.isSmooth || [];\n          endSmooth = endSeg.isSmooth || [];\n          l = startSeg.length;\n          _lastLinkedAnchor = 0; //reset; we use _lastLinkedAnchor in the _tweenRotation() method to help make sure that close points don\'t get ripped apart and rotate opposite directions. Typically we want to go the shortest direction, but if the previous anchor is going a different direction, we override this logic (within certain thresholds)\n\n          for (i = 0; i < l; i += 2) {\n            if (endSeg[i] !== startSeg[i] || endSeg[i + 1] !== startSeg[i + 1]) {\n              if (useRotation) {\n                if (startSmooth[i] && endSmooth[i]) {\n                  //if BOTH starting and ending values are smooth (meaning control points have basically the same slope), interpolate the rotation and length instead of the coordinates (this is what makes things smooth).\n                  sData = startSeg.smoothData;\n                  eData = endSeg.smoothData;\n                  offset = i + (i === l - 4 ? 7 - l : 5); //helps us accommodate wrapping (like if the end and start anchors are identical and the control points are smooth).\n\n                  this._controlPT = {\n                    _next: this._controlPT,\n                    i: i,\n                    j: j,\n                    l1s: sData[i + 1],\n                    l1c: eData[i + 1] - sData[i + 1],\n                    l2s: sData[offset],\n                    l2c: eData[offset] - sData[offset]\n                  };\n                  pt = this._tweenRotation(startSeg, endSeg, i + 2);\n\n                  this._tweenRotation(startSeg, endSeg, i, pt);\n\n                  this._tweenRotation(startSeg, endSeg, offset - 1, pt);\n\n                  i += 4;\n                } else {\n                  this._tweenRotation(startSeg, endSeg, i);\n                }\n              } else {\n                pt = this.add(startSeg, i, startSeg[i], endSeg[i]);\n                pt = this.add(startSeg, i + 1, startSeg[i + 1], endSeg[i + 1]) || pt;\n              }\n            }\n          }\n        }\n      } else {\n        pt = this.add(target, "setAttribute", target.getAttribute(p) + "", shape + "", index, targets, 0, _buildPointsFilter(shapeIndex), p);\n      }\n\n      if (useRotation) {\n        this.add(this._origin, "x", this._origin.x, this._eOrigin.x);\n        pt = this.add(this._origin, "y", this._origin.y, this._eOrigin.y);\n      }\n\n      if (pt) {\n        this._props.push("morphSVG");\n\n        pt.end = shape;\n        pt.endProp = p;\n      }\n    }\n\n    return morphSVGPlugin_bonusValidated;\n  },\n  render: function render(ratio, data) {\n    var rawPath = data._rawPath,\n        controlPT = data._controlPT,\n        anchorPT = data._anchorPT,\n        rnd = data._rnd,\n        target = data._target,\n        pt = data._pt,\n        s,\n        space,\n        easeInOut,\n        segment,\n        l,\n        angle,\n        i,\n        j,\n        x,\n        y,\n        sin,\n        cos,\n        offset;\n\n    while (pt) {\n      pt.r(ratio, pt.d);\n      pt = pt._next;\n    }\n\n    if (ratio === 1 && data._apply) {\n      pt = data._pt;\n\n      while (pt) {\n        if (pt.end) {\n          if (data._prop) {\n            target[data._prop] = pt.end;\n          } else {\n            target.setAttribute(pt.endProp, pt.end); //make sure the end value is exactly as specified (in case we had to add fabricated points during the tween)\n          }\n        }\n\n        pt = pt._next;\n      }\n    } else if (rawPath) {\n      //rotationally position the anchors\n      while (anchorPT) {\n        angle = anchorPT.sa + ratio * anchorPT.ca;\n        l = anchorPT.sl + ratio * anchorPT.cl; //length\n\n        anchorPT.t[anchorPT.i] = data._origin.x + morphSVGPlugin_cos(angle) * l;\n        anchorPT.t[anchorPT.i + 1] = data._origin.y + morphSVGPlugin_sin(angle) * l;\n        anchorPT = anchorPT._next;\n      } //smooth out the control points\n\n\n      easeInOut = ratio < 0.5 ? 2 * ratio * ratio : (4 - 2 * ratio) * ratio - 1;\n\n      while (controlPT) {\n        i = controlPT.i;\n        segment = rawPath[controlPT.j];\n        offset = i + (i === segment.length - 4 ? 7 - segment.length : 5); //accommodates wrapping around of smooth points, like if the start and end anchors are on top of each other and their handles are smooth.\n\n        angle = morphSVGPlugin_atan2(segment[offset] - segment[i + 1], segment[offset - 1] - segment[i]); //average the angles\n\n        sin = morphSVGPlugin_sin(angle);\n        cos = morphSVGPlugin_cos(angle);\n        x = segment[i + 2];\n        y = segment[i + 3];\n        l = controlPT.l1s + easeInOut * controlPT.l1c; //length\n\n        segment[i] = x - cos * l;\n        segment[i + 1] = y - sin * l;\n        l = controlPT.l2s + easeInOut * controlPT.l2c;\n        segment[offset - 1] = x + cos * l;\n        segment[offset] = y + sin * l;\n        controlPT = controlPT._next;\n      }\n\n      target._gsRawPath = rawPath;\n\n      if (data._apply) {\n        s = "";\n        space = " ";\n\n        for (j = 0; j < rawPath.length; j++) {\n          segment = rawPath[j];\n          l = segment.length;\n          s += "M" + (segment[0] * rnd | 0) / rnd + space + (segment[1] * rnd | 0) / rnd + " C";\n\n          for (i = 2; i < l; i++) {\n            //this is actually faster than just doing a join() on the array, possibly because the numbers have so many decimal places\n            s += (segment[i] * rnd | 0) / rnd + space;\n          }\n        }\n\n        if (data._prop) {\n          target[data._prop] = s;\n        } else {\n          target.setAttribute("d", s);\n        }\n      }\n    }\n\n    if (data._render && rawPath) {\n      data._render.call(data._tween, rawPath, target);\n    }\n  },\n  kill: function kill(property) {\n    this._pt = this._rawPath = 0;\n  },\n  getRawPath: getRawPath,\n  stringToRawPath: stringToRawPath,\n  rawPathToString: rawPathToString,\n  pathFilter: _pathFilter,\n  pointsFilter: _pointsFilter,\n  getTotalSize: _getTotalSize,\n  equalizeSegmentQuantity: _equalizeSegmentQuantity,\n  convertToPath: function convertToPath(targets, swap) {\n    return morphSVGPlugin_toArray(targets).map(function (target) {\n      return paths_convertToPath(target, swap !== false);\n    });\n  },\n  defaultType: "linear",\n  defaultUpdateTarget: true,\n  defaultMap: "size"\n};\nmorphSVGPlugin_getGSAP() && morphSVGPlugin_gsap.registerPlugin(MorphSVGPlugin);\n\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/About1Geometry.js\nfunction About1Geometry_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { About1Geometry_typeof = function _typeof(obj) { return typeof obj; }; } else { About1Geometry_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return About1Geometry_typeof(obj); }\n\nfunction About1Geometry_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction About1Geometry_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction About1Geometry_createClass(Constructor, protoProps, staticProps) { if (protoProps) About1Geometry_defineProperties(Constructor.prototype, protoProps); if (staticProps) About1Geometry_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction About1Geometry_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) About1Geometry_setPrototypeOf(subClass, superClass); }\n\nfunction About1Geometry_setPrototypeOf(o, p) { About1Geometry_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return About1Geometry_setPrototypeOf(o, p); }\n\nfunction About1Geometry_createSuper(Derived) { var hasNativeReflectConstruct = About1Geometry_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = About1Geometry_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = About1Geometry_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return About1Geometry_possibleConstructorReturn(this, result); }; }\n\nfunction About1Geometry_possibleConstructorReturn(self, call) { if (call && (About1Geometry_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return About1Geometry_assertThisInitialized(self); }\n\nfunction About1Geometry_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction About1Geometry_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction About1Geometry_getPrototypeOf(o) { About1Geometry_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return About1Geometry_getPrototypeOf(o); }\n\n//import * as THREE from "three"\n//import gsap from "gsap"\n//import {GLTFLoader, GLTLoader} from "three/examples/jsm/loaders/GLTFLoader"\nvar About1Geometry_EventEmitter = __webpack_require__(7187);\n\nvar About1Geometry_About1Geometry = /*#__PURE__*/function (_EventEmitter) {\n  About1Geometry_inherits(About1Geometry, _EventEmitter);\n\n  var _super = About1Geometry_createSuper(About1Geometry);\n\n  function About1Geometry(obj) {\n    var _this;\n\n    About1Geometry_classCallCheck(this, About1Geometry);\n\n    //console.log("(About1Geometry.CONSTRUCTORA): ", obj)\n    _this = _super.call(this); //--\n\n    _this.factor = obj.factor; //6\n\n    _this.incr_radio = obj.incr_radio; //25\n\n    _this.numOrbits = obj.numOrbits; //37\n\n    _this.array_triangular = obj.array_triangular;\n    _this.numDots = obj.numDots; //--\n\n    _this.attributes = {\n      a_posiciones: new Float32Array(_this.numDots * 3),\n      a_dot_num: new Float32Array(_this.numDots * 1),\n      a_orbital: new Float32Array(_this.numDots * 1),\n      a_pos_orbita: new Float32Array(_this.numDots * 1),\n      a_incr_anguloRad: new Float32Array(_this.numDots * 1),\n      a_anguloRad: new Float32Array(_this.numDots * 1),\n      a_radio: new Float32Array(_this.numDots * 1),\n      a_dir: new Float32Array(_this.numDots * 1),\n      a_incr: new Float32Array(_this.numDots * 1),\n      a_x: new Float32Array(_this.numDots * 1),\n      a_y: new Float32Array(_this.numDots * 1),\n      a_z: new Float32Array(_this.numDots * 1)\n    }; //--\n\n    for (var i = 0; i < _this.numDots; i++) {\n      var dot = _this._get_dot(i);\n\n      var i3 = i * 3;\n      _this.attributes.a_posiciones[i3] = dot.x;\n      _this.attributes.a_posiciones[i3 + 1] = dot.y;\n      _this.attributes.a_posiciones[i3 + 2] = dot.z; //--\n\n      _this.attributes.a_dot_num[i] = i;\n      _this.attributes.a_orbital[i] = dot.orbital;\n      _this.attributes.a_pos_orbita[i] = dot.pos_orbita;\n      _this.attributes.a_incr_anguloRad[i] = dot.incr_anguloRad;\n      _this.attributes.a_anguloRad[i] = dot.anguloRad;\n      _this.attributes.a_radio[i] = dot.radio;\n      _this.attributes.a_dir[i] = dot.dir;\n      _this.attributes.a_incr[i] = dot.incr;\n      _this.attributes.a_x[i] = dot.y;\n      _this.attributes.a_y[i] = dot.y;\n      _this.attributes.a_z[i] = dot.z;\n    } //--\n\n\n    _this.loaded = false; //console.log(this.attributes.a_dot_num)\n\n    return _this;\n  }\n\n  About1Geometry_createClass(About1Geometry, [{\n    key: "init",\n    value: function init() {\n      //console.log("(About1Geometry.init)!")\n      //--\n      //--\n      this.emit("onMeshLoaded", {\n        ref: this\n      });\n    } //------------------------------------------\n    // PRIVADAS\n\n  }, {\n    key: "_get_dot",\n    value: function _get_dot(num) {\n      // Devuelve un objeto con la informaciín de un punto de la geometria "orbital MIOTI"\n      var obj = {\n        num: num,\n        x: 0,\n        y: 0,\n        z: 0,\n        orbital: 0,\n        co_orbitantes: 0,\n        pos_orbita: 0,\n        incr_anguloRad: 0,\n        anguloRad: 0,\n        radio: 0\n      }; //--\n\n      for (var i = 0; i <= this.array_triangular.length; i++) {\n        var limSup = this.array_triangular[i]; //console.log("limSup: "+limSup)\n\n        if (num > limSup) {\n          // console.log("*")\n          obj.orbital = i + 1;\n          obj.co_orbitantes = (i + 1) * this.factor;\n          obj.pos_orbita = num - limSup - 1;\n          obj.incr_anguloRad = 2 * Math.PI / obj.co_orbitantes;\n\n          if (obj.orbital % 2 == 0) {\n            obj.dir = 1;\n            obj.incr = 0;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad;\n          } else {\n            obj.dir = -1;\n            obj.incr = 1;\n            obj.anguloRad = obj.pos_orbita * obj.incr_anguloRad + obj.incr_anguloRad / 2;\n          }\n\n          obj.radio = obj.orbital * this.incr_radio; //--\n\n          obj.x = Math.cos(obj.anguloRad) * obj.radio;\n          obj.y = Math.sin(obj.anguloRad) * obj.radio;\n          obj.z = 0;\n        } //break\n\n      }\n\n      return obj;\n    }\n  }]);\n\n  return About1Geometry;\n}(About1Geometry_EventEmitter);\n\n/* harmony default export */ const about1_About1Geometry = (About1Geometry_About1Geometry);\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/About1DotPulse.js\nfunction About1DotPulse_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction About1DotPulse_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction About1DotPulse_createClass(Constructor, protoProps, staticProps) { if (protoProps) About1DotPulse_defineProperties(Constructor.prototype, protoProps); if (staticProps) About1DotPulse_defineProperties(Constructor, staticProps); return Constructor; }\n\n//import Datos from \'../Datos\';\nvar About1DotPulse = /*#__PURE__*/function () {\n  function About1DotPulse(obj) {\n    About1DotPulse_classCallCheck(this, About1DotPulse);\n\n    //console.log("(About1DotPulse.CONSTRUCTORA): ", obj)\n    this.pulses = obj.pulses;\n    this.dotGeom = obj.dotGeom;\n    this.pulsePos = obj.pulsePos;\n    this.pulseId = obj.pulseId;\n    this.dotPos = obj.dotPos; //--\n\n    this.lifeTime = 3;\n    this.startTime = this.dotGeom.clock.getElapsedTime();\n    this.endTime = this.startTime + this.lifeTime; //--\n    //this.settings = this.dotGeom.settings\n    //--\n    //this.settings["pulseNum_"+this.pulsePos] = Math.floor(Math.random()*1000)\n    //this.settings["pulseInitTime_"+this.pulsePos] = this.dotGeom.clock.getElapsedTime()\n    //this.settings["pulseProgress_"+this.pulsePos] = 0\n    //--\n  } //------------------\n  // PUBLICOS:\n\n\n  About1DotPulse_createClass(About1DotPulse, [{\n    key: "get_progress",\n    value: function get_progress(uTime) {\n      var t = uTime - this.startTime;\n      var timeProgress = (uTime - this.startTime) / this.lifeTime;\n      var progress;\n\n      if (timeProgress < 0.5) {\n        progress = this._easeInOutQuad(t, 0, 1, this.lifeTime / 2);\n      } else if (timeProgress >= 0.5 && timeProgress < 1) {\n        var t2 = t - this.lifeTime / 2;\n        progress = 1 - this._easeInOutQuad(t2, 0, 1, this.lifeTime / 2);\n      } else if (timeProgress >= 1) {\n        progress = 0;\n\n        this._initKill();\n      }\n\n      return progress;\n    } //------------------------\n    // PRIVADOS\n\n  }, {\n    key: "_initKill",\n    value: function _initKill() {\n      this.pulses.killPulse(this);\n    }\n  }, {\n    key: "_easeInOutQuad",\n    value: function _easeInOutQuad(t, b, c, d) {\n      //t is current time\n      //b is start value\n      //c is change in value\n      //d is duration\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    }\n  }]);\n\n  return About1DotPulse;\n}();\n\n/* harmony default export */ const about1_About1DotPulse = (About1DotPulse);\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/About1Pulses.js\nfunction About1Pulses_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction About1Pulses_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction About1Pulses_createClass(Constructor, protoProps, staticProps) { if (protoProps) About1Pulses_defineProperties(Constructor.prototype, protoProps); if (staticProps) About1Pulses_defineProperties(Constructor, staticProps); return Constructor; }\n\n //import Datos from \'./Datos\';\n\n\n\nvar About1Pulses = /*#__PURE__*/function () {\n  function About1Pulses(obj) {\n    About1Pulses_classCallCheck(this, About1Pulses);\n\n    //console.log("(About1Pulses.CONSTRUCTORA)!: ", obj)\n    this.dotGeom = obj.dotGeom; //--\n\n    this.maxPulses = 10;\n    this.timeMin = 0;\n    this.timeMax = 0.7;\n    this.autoNum = 0;\n    this.arrayPulseSlots = [];\n\n    for (var i = 0; i < this.maxPulses; i++) {\n      this.arrayPulseSlots.push(null);\n    } //this.arrayPulseSlots = [null, null, null, null, null, null, null, null, null, null]\n\n\n    this.arrayDotPos = []; //--\n\n    this._init();\n  } //------------------------\n  // PUBLICOS\n\n\n  About1Pulses_createClass(About1Pulses, [{\n    key: "get_dotPos",\n    value: function get_dotPos(pulsePos) {\n      if (this.arrayPulseSlots[pulsePos]) {\n        return this.arrayPulseSlots[pulsePos].dotPos;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: "get_progress",\n    value: function get_progress(pulsePos, uTime) {\n      if (this.arrayPulseSlots[pulsePos]) {\n        return this.arrayPulseSlots[pulsePos].get_progress(uTime);\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: "killPulse",\n    value: function killPulse(pulse) {\n      var _this = this;\n\n      //console.log("(About1Pulses.killPulse): "+pulse.pulseId)\n      var posArray = this.arrayDotPos.indexOf(pulse.dotPos);\n      this.arrayDotPos.splice(posArray, 1);\n      this.arrayPulseSlots[pulse.pulsePos] = null; //--\n\n      node_modules_gsap/* default.delayedCall */.ZP.delayedCall(this._get_randomDelay(), function () {\n        _this._eval_createPulse();\n      });\n    } //------------------------\n    // PRIVADOS\n\n  }, {\n    key: "_init",\n    value: function _init() {\n      var _this2 = this;\n\n      for (var i = 0; i < this.maxPulses; i++) {\n        node_modules_gsap/* default.delayedCall */.ZP.delayedCall(this._get_randomDelay(), function () {\n          _this2._eval_createPulse();\n        });\n      }\n    }\n  }, {\n    key: "_eval_createPulse",\n    value: function _eval_createPulse() {\n      var pulsePos = this._get_pulsePos(); //console.log("pulsePos: "+pulsePos)\n\n\n      if (pulsePos != null) {\n        this._createPulse(pulsePos);\n      }\n    }\n  }, {\n    key: "_createPulse",\n    value: function _createPulse(pulsePos) {\n      //console.log("(About1Pulses._createPulse): ", this.arrayDotPos)\n      var pulseId = "pulse_" + this.autoNum;\n\n      var dotPos = this._get_dotPos();\n\n      this.arrayDotPos.push(dotPos);\n      this.autoNum++;\n      var pulse = new about1_About1DotPulse({\n        pulses: this,\n        dotGeom: this.dotGeom,\n        pulsePos: pulsePos,\n        pulseId: pulseId,\n        dotPos: dotPos\n      });\n      this.arrayPulseSlots[pulsePos] = pulse;\n    } //------\n\n  }, {\n    key: "_get_pulsePos",\n    value: function _get_pulsePos() {\n      // Busca un slot libre y devuelve su posición.\n      // Si no hay slot libres devuelve null\n      for (var i = 0; i < this.arrayPulseSlots.length; i++) {\n        if (this.arrayPulseSlots[i] == null) {\n          return i;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: "_get_dotPos",\n    value: function _get_dotPos() {\n      // Escoje un punto al azar y comprueba que no está activo en otro pulse y lo devuelve.\n      // Y el punto escogido si está activo lanza de nuevo los dados.\n      for (var i = 0; i < 9999; i++) {\n        var dotPos = Math.floor(Math.random() * 3000);\n\n        if (this.arrayDotPos.indexOf(dotPos) == -1) {\n          return dotPos;\n        }\n      }\n    }\n  }, {\n    key: "_get_randomDelay",\n    value: function _get_randomDelay() {\n      var rndRange = this.timeMax - this.timeMin;\n      return this.timeMin + Math.random() * rndRange;\n    }\n  }]);\n\n  return About1Pulses;\n}();\n\n/* harmony default export */ const about1_About1Pulses = (About1Pulses);\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/shaders/aboutDots_vertex.glsl\n/* harmony default export */ const aboutDots_vertex = ("#define GLSLIFY 1\\nattribute vec3 a_randomness;\\nattribute vec3 a_geo1_position;\\nattribute float a_geo1_dot_num;\\nattribute float a_geo1_orbital;\\nattribute float a_geo1_pos_orbita;\\nattribute float a_geo1_incr_anguloRad;\\nattribute float a_geo1_anguloRad;\\nattribute float a_geo1_incr;\\nattribute float a_geo1_dir;\\nattribute float a_geo1_radio;\\n\\nattribute vec3 a_geo2_position;\\nattribute vec3 a_geo3_position;\\n\\nuniform float uTime;\\nuniform float uCamaraDistance;\\nuniform float uScrollSpeed;\\nuniform float uScale;\\nuniform float uResponsiveScale;\\nuniform float uScrollDelta;\\nuniform float uScrollProgress;\\nuniform float uMorphingProgress;\\nuniform float uIntroProgress;\\n\\nuniform float uRotationInner;\\nuniform float uRotationOutter;\\n\\nuniform float uPulseNum_0;\\nuniform float uPulseProgress_0;\\nuniform float uPulseNum_1;\\nuniform float uPulseProgress_1;\\nuniform float uPulseNum_2;\\nuniform float uPulseProgress_2;\\nuniform float uPulseNum_3;\\nuniform float uPulseProgress_3;\\nuniform float uPulseNum_4;\\nuniform float uPulseProgress_4;\\nuniform float uPulseNum_5;\\nuniform float uPulseProgress_5;\\nuniform float uPulseNum_6;\\nuniform float uPulseProgress_6;\\nuniform float uPulseNum_7;\\nuniform float uPulseProgress_7;\\nuniform float uPulseNum_8;\\nuniform float uPulseProgress_8;\\nuniform float uPulseNum_9;\\nuniform float uPulseProgress_9;\\n\\nuniform float uProgress0;\\nuniform float uProgress0b;\\n\\nuniform float uProgress1;\\nuniform float uProgress2;\\nuniform float uProgress3;\\nuniform float uProgress4;\\nuniform float uProgress4b;\\nuniform float uProgress5;\\nuniform float uProgress6;\\nuniform float uProgress6b;\\n\\n// varying vec3 vPosition;\\n//varying vec2 vUv;\\nvarying vec3 v_randomness;\\nvarying float v_colorStrength;\\n\\nvarying float v_activePulse;\\nvarying float v_activePulseProgress;\\nvarying float v_test;\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat cnoise(vec3 P){\\n  vec3 Pi0 = floor(P); // Integer part for indexing\\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 / 7.0;\\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 / 7.0;\\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n  return 2.2 * n_xyz;\\n}\\n\\nvec3 get_pos1(float anguloRad){\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(1.*a_geo1_dir*0.2);\\n    float x = cos(anguloRad)*a_geo1_radio;\\n    float y = sin(anguloRad)*a_geo1_radio;\\n    float z = 0.0;\\n    vec3 newPos = vec3(x, y, z);\\n    return newPos;\\n}\\n\\nvec3 get_posScrollSpeed(vec3 pos){\\n    float factor = mix(1.0, 2.0, uScrollSpeed);\\n    pos = pos*factor;\\n    return pos;\\n}\\n\\nfloat get_escalaNoise(float x, float y, float amplitudMapa, float progress){\\n    float valor = cnoise(vec3(x/amplitudMapa, y/amplitudMapa, progress));\\n    valor = 0.5+(valor/2.);\\n    valor *=2.;\\n    return valor;\\n}\\n\\nfloat get_escalaOndaRadial(float orbital, float progress){\\n    float frecuencia = 0.5; // Valores bajos ondas mas largas, valores altos ondas mas cortas\\n    float seno = (sin((progress+orbital)*frecuencia)+1.)/2.;\\n\\n    float valor = 0.5+(seno*0.5);\\n\\n    return valor;\\n}\\n\\nfloat get_escalaEdge(float orbital){\\n    float value = 1.;\\n    float orbitalMax = 37.;\\n    float fadeLimit = 22.;\\n    float fadeScale = 1.;\\n    float rango = orbitalMax -fadeLimit;\\n    if(orbital >= fadeLimit){\\n        float orbitalRel = orbital -fadeLimit;\\n        float ratio = orbitalRel/rango;\\n        fadeScale = fadeScale-ratio;\\n    }\\n    return fadeScale;\\n}\\n\\nvec3 randomizePosition(vec3 oldPos, vec3 randomness, float time, float amplitude, float amount, float speed){\\n    time = time*speed;\\n    vec3 newPos = oldPos;\\n    newPos.x += sin(time * randomness.x) * (amplitude*amount);\\n    newPos.y += cos(time * randomness.y) * (amplitude*amount);\\n    newPos.z += cos(time * randomness.z) * (amplitude*amount);\\n    return newPos;\\n}\\n\\nfloat quinticOut(float t) {\\n  return (pow(t - 1.0, 5.0));\\n}\\n\\nfloat quadraticOut(float t) {\\n  return -t * (t - 2.0);\\n}\\n\\nfloat quarticOut(float t) {\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\n}\\n\\nvoid main() {\\n\\n    // float time = uTime * 4.;    \\n\\n    //vec3 pos = mix(position, a_geo1_position, uProgress);\\n    // vec3 pos = a_geo2_position;\\n    //vec3 pos = position;\\n    //vec3 pos1 = get_pos1();\\n    //pos1 = pos1*(sin((-uTime+a_geo1_orbital)*0.5)+2.)*0.1;\\n\\n    //float senoFx = sin((-uTime+a_geo1_orbital))*0.5*0.5;\\n    //float escalaFx = mix(0.98, 1.02, senoFx);\\n    //pos1 = pos1*escalaFx;\\n    //pos1 = get_posScrollSpeed(pos1);\\n\\n    //vec3 endPos = mix(a_geo2_position, a_geo3_position, 0.);\\n    //vec3 endPos = a_geo2_position;\\n    //vec3 pos = mix(pos1, a_geo2_position, uProgress1);\\n    //pos = randomizePosition(pos, a_randomness, uTime, 5.0, uProgress1, 5.);\\n    // pos.x += sin(time * a_randomness.x) *0.02;\\n    // pos.y += cos(time * a_randomness.y) *0.02;\\n    // pos.z += cos(time * a_randomness.z) *0.02;\\n    \\n    // pos *= uScale;\\n    // vPosition = pos;\\n\\n    \\n\\n    //----------------------------------------------------------\\n    // PULSOS:\\n    v_activePulseProgress = 0.0;\\n    float resta;\\n    float factor;\\n    resta = abs(a_geo1_dot_num - uPulseNum_0); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_0*factor;\\n    //--\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_1); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_1*factor;\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_2); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_2*factor;\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_3); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_3*factor;\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_4); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_4*factor;\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_5); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_5*factor;\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_6); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_6*factor;\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_7); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_7*factor;\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_8); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_8*factor;\\n    //--\\n    resta = abs(a_geo1_dot_num - uPulseNum_9); // Devuelve valores positivos donde en el caso de coincidir el float será < 0.5 y sino será >0.5\\n    factor = 1.0-(step(0.5, resta)); // Creamos un valor para <0.5 ACTIVO sea 1. y >0.5 DESACTIVO sea 0\\n    v_activePulse += 1.0*factor;\\n    v_activePulseProgress += uPulseProgress_9*factor;\\n    // PULSOS:\\n    //----------------------------------------------------------\\n\\n    //----------------------------------------------------------\\n    // POSITION:\\n    float rotation = mix(uRotationInner, uRotationOutter, ((a_geo1_orbital)*1.)/37.);\\n    float anguloRad_time = (a_geo1_anguloRad+rotation);\\n    // Geometries present:\\n    //float anguloRad = a_geo1_pos_orbita*a_geo1_incr_anguloRad+((a_geo1_incr_anguloRad/2.)*a_geo1_incr)+(uScrollProgress*a_geo1_dir*2.2);\\n    vec3 POSITION_1 = get_pos1(anguloRad_time);\\n    //vec3 POSITION_1 = position;\\n    vec3 POSITION_2 = a_geo2_position;\\n    POSITION_2 = randomizePosition(POSITION_2, a_randomness, uTime, 5.0, uMorphingProgress, 5.);\\n    // Z modifications:\\n    \\n    // Ondas de seno:\\n    float senoFx = sin((-uTime+a_geo1_orbital))*0.5*0.5;\\n    float escalaFx = mix(0.98, 1.02, senoFx);\\n    //POSITION_1 *= escalaFx;\\n    // Morphing:\\n    float clamped_morpingProgress = clamp(0., 0.95, uMorphingProgress);\\n    POSITION_1 = mix(POSITION_1, POSITION_2, clamped_morpingProgress);\\n    // Randomized position while in POSITION_2\\n    POSITION_1 = randomizePosition(POSITION_1, a_randomness*2., uTime, 5.0, uMorphingProgress, 2.5);\\n    // Escala por scroll delta:\\n    //POSITION_1 *= 1.+(uScrollDelta);\\n    // Escalado incial:\\n    //POSITION_1 *= mix(5., 1., quinticOut(uIntroProgress));\\n    //POSITION_1 *= mix(5., 1., quadraticOut(uIntroProgress));\\n    float clamped_uIntroProgress;\\n    // clamped_uIntroProgress = uIntroProgress;\\n    clamped_uIntroProgress = clamp(uIntroProgress, 0., 1.);\\n    //POSITION_1 *= mix(10., 1., quarticOut(clamped_uIntroProgress));\\n    POSITION_1 *= mix(10., 1., uIntroProgress);\\n    // Responsive Scale:\\n    POSITION_1 *= uResponsiveScale;\\n    //\\n    POSITION_1 = mix(POSITION_1, POSITION_2, uMorphingProgress);\\n    //----------------------------------------------------------\\n\\n    //----------------------------------------------------------\\n    // SIZE:\\n    float SIZE_1 = 8.;\\n    // Los puntos son mas pequeños en los orbitales de la periferia\\n    float esclaEdege = get_escalaEdge(a_geo1_orbital); \\n    float rango = 1.-esclaEdege;\\n    SIZE_1 *= (esclaEdege + (rango*uProgress1));\\n    // Los puntos se escalan en base a un mapa de ruido\\n    SIZE_1 *= mix(1., get_escalaNoise(POSITION_1.x, POSITION_1.y, 500., uProgress0), uProgress0b);\\n    // Los puntos se escalan en base a ondas concentricas de seno:\\n    SIZE_1 *= mix(1., get_escalaOndaRadial(a_geo1_orbital, -uTime*10.), uProgress4b);\\n    // Los puntos se escalan por pulson random:\\n    SIZE_1 *= mix(1., 1.5, v_activePulseProgress);\\n    // Los puntos se escalan junto con la geometria con el scrolldelta\\n    SIZE_1 *= 1.+(uScrollDelta);\\n\\n    float SIZE_2 = 5.; \\n    // \\n    float zDepthNorm = (POSITION_2.z+600.)/(600.*2.); // de -600 a 600 de un valor normalizado (sin clamp, es decir que puede ser <0 y >1) de la posicion z\\n    float zDepthAlpha = mix(0.2, 0.9, zDepthNorm);\\n    float zDepthScale = mix(0.8, 2.5, zDepthNorm);\\n    float randomSize = SIZE_2 *0.5+(a_randomness.x*0.9);\\n    randomSize *= zDepthScale;\\n    SIZE_2 = mix(SIZE_2, randomSize, uMorphingProgress);\\n    \\n    \\n    float SIZE = mix(SIZE_1, SIZE_2, uMorphingProgress);\\n    // Los puntos se escalan si se redimensona el lienzo\\n    SIZE *= uResponsiveScale;\\n    \\n    \\n    //----------------------------------------------------------\\n\\n    //----------------------------------------------------------\\n    // VERTEX\\n    vec4 mvPosition = modelViewMatrix * vec4( POSITION_1, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n    gl_PointSize = SIZE*(uCamaraDistance/-mvPosition.z);\\n    //----------------------------------------------------------\\n\\n    \\n\\n    //----------------------------------------------------------\\n    // VARYINGS:\\n    v_randomness = a_randomness;\\n    v_colorStrength = get_escalaNoise(POSITION_1.x, POSITION_1.y, 200., sin(uTime));\\n    v_colorStrength = mix(1., v_colorStrength, uMorphingProgress);\\n\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/shaders/aboutDots_fragment.glsl\n/* harmony default export */ const aboutDots_fragment = ("#define GLSLIFY 1\\n// varying vec3 vPosition;\\n// varying vec2 vUv;\\n\\nvarying vec3 v_randomness;\\nvarying float v_colorStrength;\\n\\nuniform vec3 uColor1;\\nuniform vec3 uColor2;\\nuniform vec3 uColor3;\\n\\nuniform float uProgress1;\\nuniform float uProgress2;\\nuniform float uProgress3;\\nuniform float uIntroProgress;\\n\\nvarying float v_activePulse;\\nvarying float v_activePulseProgress; \\nvarying float v_test;\\n\\nfloat quarticOut(float t) {\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\n}\\n\\nfloat circulizar(float radio){\\n    // radio es un valor entre 0 y 1. 0 es 0 de radio y 1 es el maximo del radio dentro de\\n    radio = 1.0-(0.5*radio);\\n    float result = distance(gl_PointCoord, vec2(0.5, 0.5));\\n    result = 1. -result;\\n    result = pow(result, 1.);\\n    result = step(radio, result);\\n    return result;\\n}\\n\\nvoid main() {\\n\\n    float randomnessCir = v_randomness.x*uProgress1;\\n    randomnessCir = mix(1., randomnessCir, uProgress1);\\n    //float alpha = circulizar(1.0*randomnessCir);\\n    float alpha = circulizar(1.0);\\n\\n    //alpha *= mix(-2., 1., quarticOut(uIntroProgress));\\n    alpha *= mix(0.8, 1., uIntroProgress);\\n\\n    vec3 finalColor = mix(uColor2, uColor1, v_colorStrength);\\n\\n    vec3 colorWhite = vec3(1.0, 1.0, 1.0);\\n    vec3 mixActiveColor = mix(finalColor, uColor3, v_activePulse);\\n\\n    vec3 white = vec3(1., 1., 1.);\\n\\n    finalColor =  mix(finalColor, white, v_activePulseProgress*0.15);\\n\\n    gl_FragColor = vec4(finalColor, alpha);\\n\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/About1Dots.js\nfunction About1Dots_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction About1Dots_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction About1Dots_createClass(Constructor, protoProps, staticProps) { if (protoProps) About1Dots_defineProperties(Constructor.prototype, protoProps); if (staticProps) About1Dots_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\nvar About1Dots = /*#__PURE__*/function () {\n  function About1Dots(obj) {\n    var _this = this;\n\n    About1Dots_classCallCheck(this, About1Dots);\n\n    //console.log("(About1Dots.CONSTRUCTORA)!")\n    //console.log(obj)\n    this.worldGL = obj.worldGL; //--\n\n    this.scene = this.worldGL.scene;\n    this.cameraDistance = this.worldGL.cameraDistance; //--\n\n    this.material = null;\n    this.geometry = null;\n    this.mesh = null;\n    this.numParticles = null;\n    this.allLoaded = false;\n    this.created = false;\n    this.clock = new three_module/* Clock */.SUY();\n    this.startTime = null;\n    this.introTime = 1.2;\n    this.rotationX = 0;\n    this.rotationY = 0;\n    this.rotationWantedX = 0;\n    this.rotationWantedY = 0;\n    this.morphingProgress = 0; //--\n\n    this.eased_rotation = new webgl_EasedOutValue(0, 0.05);\n    this.eased_scrollDelta = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.3, 0.05);\n    this.eased_scrollDelta_fast = new webgl_EasedOutValue(this.worldGL.settings.scroll_normalizedDelta * 0.5, 0.1);\n    this.eased_scrollProgress = new webgl_EasedOutValue(this.worldGL.settings.scroll_progress, 0.05); //--\n\n    this._setup_settings(); //--\n\n\n    this.pulses = new about1_About1Pulses({\n      dotGeom: this\n    }); //--\n\n    this.orbital_geometry = new about1_About1Geometry(this.settings); //--\n\n    this.M_geometry = new webgl_LoadedGeometry({\n      id: "M_geometry",\n      file: "",\n      isDraco: false,\n      scale: 600 //rotationY : -Math.PI*0.25\n\n    }, this.settings);\n    this.M_geometry.on("onMeshLoaded", function (data) {\n      _this._eval_allLoaded();\n    }); //--\n\n    this.resize(); //--\n\n    this.M_geometry.init();\n  } //------------------------------------\n  // PUBLICAS: \n\n\n  About1Dots_createClass(About1Dots, [{\n    key: "create",\n    value: function create() {\n      //console.log("(About1Dots._create)!")\n      //--\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        depthWrite: false,\n        blending: three_module/* AdditiveBlending */.WMw,\n        //blending: THREE.NormalBlending,\n        //blending: THREE.MultiplyBlending,\n        vertexColors: true,\n        vertexShader: aboutDots_vertex,\n        fragmentShader: aboutDots_fragment,\n        transparent: true,\n        uniforms: {\n          uColor1: {\n            value: new three_module/* Color */.Ilk("#170e41")\n          },\n          //801c65\n          uColor2: {\n            value: new three_module/* Color */.Ilk("#801c65")\n          },\n          uColor3: {\n            value: new three_module/* Color */.Ilk("#880364")\n          },\n          uTime: {\n            value: 0\n          },\n          uCamaraDistance: {\n            value: this.cameraDistance\n          },\n          uScrollDelta: {\n            value: 0\n          },\n          uScrollProgress: {\n            value: 1\n          },\n          uResponsiveScale: {\n            value: 1\n          },\n          uRotation1: {\n            value: 0\n          },\n          uRotation2: {\n            value: 0\n          },\n          uRotation3: {\n            value: 0\n          },\n          uRotationInner: {\n            value: 0\n          },\n          uRotationOutter: {\n            value: 0\n          },\n          uMorphingProgress: {\n            value: 0\n          },\n          uIntroProgress: {\n            value: 0\n          },\n          uScrollSpeed: {\n            value: 0\n          },\n          uPulseNum_0: {\n            value: 0\n          },\n          uPulseProgress_0: {\n            value: 0\n          },\n          uPulseNum_1: {\n            value: 0\n          },\n          uPulseProgress_1: {\n            value: 0\n          },\n          uPulseNum_2: {\n            value: 0\n          },\n          uPulseProgress_2: {\n            value: 0\n          },\n          uPulseNum_3: {\n            value: 0\n          },\n          uPulseProgress_3: {\n            value: 0\n          },\n          uPulseNum_4: {\n            value: 0\n          },\n          uPulseProgress_4: {\n            value: 0\n          },\n          uPulseNum_5: {\n            value: 0\n          },\n          uPulseProgress_5: {\n            value: 0\n          },\n          uPulseNum_6: {\n            value: 0\n          },\n          uPulseProgress_6: {\n            value: 0\n          },\n          uPulseNum_7: {\n            value: 0\n          },\n          uPulseProgress_7: {\n            value: 0\n          },\n          uPulseNum_8: {\n            value: 0\n          },\n          uPulseProgress_8: {\n            value: 0\n          },\n          uPulseNum_9: {\n            value: 0\n          },\n          uPulseProgress_9: {\n            value: 0\n          },\n          uProgress0: {\n            value: 0\n          },\n          uProgress0b: {\n            value: 1\n          },\n          uProgress1: {\n            value: 0\n          },\n          uProgress2: {\n            value: 0\n          },\n          uProgress3: {\n            value: 0\n          },\n          uProgress4: {\n            value: 0\n          },\n          uProgress4b: {\n            value: 0\n          },\n          uProgress5: {\n            value: 0\n          },\n          uProgress6: {\n            value: 0\n          },\n          uProgress6b: {\n            value: 0\n          } //uScale: {value: 1},\n          //uSize: {value: 30 * this.renderer.getPixelRatio()}\n\n        }\n      }); //--\n      //console.log(this.orbital_geometry.attributes.a_posiciones)\n      //--\n\n      this.geometry = new three_module/* BufferGeometry */.u9r();\n      this.geometry.setAttribute(\'position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_position\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_geo1_dot_num\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dot_num, 1));\n      this.geometry.setAttribute(\'a_geo1_orbital\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_orbital, 1));\n      this.geometry.setAttribute(\'a_geo1_pos_orbita\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_pos_orbita, 1));\n      this.geometry.setAttribute(\'a_geo1_incr_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_anguloRad\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_anguloRad, 1));\n      this.geometry.setAttribute(\'a_geo1_radio\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_radio, 1));\n      this.geometry.setAttribute(\'a_geo1_dir\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_dir, 1));\n      this.geometry.setAttribute(\'a_geo1_incr\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_incr, 1));\n      this.geometry.setAttribute(\'a_geo1_x\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_x, 1));\n      this.geometry.setAttribute(\'a_geo1_y\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_y, 1));\n      this.geometry.setAttribute(\'a_geo1_z\', new three_module/* BufferAttribute */.TlE(this.orbital_geometry.attributes.a_z, 1));\n      this.geometry.setAttribute(\'a_geo2_position\', new three_module/* BufferAttribute */.TlE(this.M_geometry.attributes.a_posiciones, 3));\n      this.geometry.setAttribute(\'a_randomness\', new three_module/* BufferAttribute */.TlE(this.M_geometry.attributes.a_randomness, 3));\n      this.mesh = new three_module/* Points */.woe(this.geometry, this.material);\n      this.scene.add(this.mesh);\n    }\n  }, {\n    key: "onMouseUpdate",\n    value: function onMouseUpdate(mouseNormX, mouseNormY) {\n      //console.log("(Home4Dots.onMouseUpdate): "+mouseNormX)\n      if (this.morphingProgress > 0) {\n        //console.log("*")\n        this._mouseUpdateX(mouseNormX);\n\n        this._mouseUpdateY(mouseNormY);\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.allLoaded) {\n        //console.log("(About1Dots.render)!")\n        //--\n        if (this.startTime == null) {\n          this.startTime = this.clock.getElapsedTime();\n        }\n\n        var introProgress = webgl_WebGLUtils.clamp((this.clock.getElapsedTime() - this.startTime) / this.introTime, 0, 1);\n        introProgress = easing_functions_default().Quartic.Out(introProgress);\n        this.material.uniforms.uIntroProgress.value = introProgress; //--\n\n        var rotationEasedY = this.rotationY + (this.rotationWantedY - this.rotationY) * 0.05;\n        this.rotationY = rotationEasedY;\n        this.mesh.rotation.y = rotationEasedY; //--\n\n        var rotationEasedX = this.rotationX + (this.rotationWantedX - this.rotationX) * 0.05;\n        this.rotationX = rotationEasedX;\n        this.mesh.rotation.x = rotationEasedX; //--\n\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uCamaraDistance.value = this.worldGL.cameraDistance;\n        this.material.uniforms.uResponsiveScale.value = this.worldGL.responsiveScale;\n        this.material.uniforms.uScrollDelta.value = -this.eased_scrollDelta.get(this.worldGL.settings.scroll_normalizedDelta * 0.5);\n        this.material.uniforms.uScrollProgress.value = this.worldGL.settings.scroll_progress;\n\n        if (this.worldGL.settings.morphingProgress <= 0.5) {\n          this.morphingProgress = 0;\n\n          this._mouseUpdateX(0);\n\n          this._mouseUpdateY(0);\n        } else {\n          this.morphingProgress = (this.worldGL.settings.morphingProgress - 0.5) * 2;\n        } //console.log("this.morphingProgress: "+this.morphingProgress)\n        //--\n\n\n        this.material.uniforms.uMorphingProgress.value = this.morphingProgress;\n        var extraSpeed = 1 + Math.abs(this.eased_scrollDelta_fast.get(this.worldGL.settings.scroll_normalizedDelta * 0.5) * 10);\n        this.settings.rotation1 += this.settings.speedRotation1 * extraSpeed;\n        this.settings.rotation2 += this.settings.speedRotation2 * extraSpeed;\n        this.settings.rotation3 += this.settings.speedRotation3 * extraSpeed;\n        this.material.uniforms.uRotation1.value = this.settings.rotation1;\n        this.material.uniforms.uRotation2.value = -this.settings.rotation2;\n        this.material.uniforms.uRotation3.value = this.settings.rotation3;\n        this.settings.rotationInner += this.settings.speedRotationInner * extraSpeed;\n        this.settings.rotationOutter += this.settings.speedRotationOutter * extraSpeed;\n        this.material.uniforms.uRotationInner.value = this.settings.rotationInner;\n        this.material.uniforms.uRotationOutter.value = this.settings.rotationOutter;\n        this.material.uniforms.uProgress0.value = this.settings.progress0;\n        this.material.uniforms.uProgress0b.value = this.settings.progress0b;\n        this.material.uniforms.uProgress1.value = this.settings.progress1;\n        this.material.uniforms.uProgress2.value = this.settings.progress2;\n        this.material.uniforms.uProgress3.value = this.settings.progress3;\n        this.material.uniforms.uProgress4.value = this.settings.progress4;\n        this.material.uniforms.uProgress4b.value = this.settings.progress4b;\n        this.material.uniforms.uProgress5.value = this.settings.progress5;\n        this.material.uniforms.uProgress6.value = this.settings.progress6;\n        this.material.uniforms.uProgress6b.value = this.settings.progress6b;\n        this.material.uniforms.uScrollSpeed.value = this.settings.scrollSpeedFiltered;\n\n        for (var i = 0; i < this.pulses.maxPulses; i++) {\n          this.material.uniforms["uPulseNum_" + i].value = this.pulses.get_dotPos(i);\n          this.material.uniforms["uPulseProgress_" + i].value = this.pulses.get_progress(i, this.clock.getElapsedTime());\n        } //--\n\n\n        this.settings.rotationInner += this.settings.speedRotationInner * extraSpeed;\n        this.settings.rotationOutter += this.settings.speedRotationOutter * extraSpeed; //--\n        //console.log("uIntroProgress: "+this.material.uniforms.uIntroProgress.value+"   uResponsiveScale: "+this.material.uniforms.uResponsiveScale.value+"   uTime: "+this.material.uniforms.uTime.value+"   uMorphingProgress: "+this.material.uniforms.uMorphingProgress.value+"   uRotationInner/Outter: "+this.material.uniforms.uRotationInner.value+"-"+this.material.uniforms.uRotationOutter.value)\n      }\n    }\n  }, {\n    key: "resize",\n    value: function resize() {//NADA\n    } //------------------------------------\n    // PRIVADAS: \n\n  }, {\n    key: "_mouseUpdateX",\n    value: function _mouseUpdateX(mouseNormX) {\n      var maxAngleRad = Math.PI * 0.25;\n      this.rotationWantedY = maxAngleRad * mouseNormX * this.morphingProgress;\n    }\n  }, {\n    key: "_mouseUpdateY",\n    value: function _mouseUpdateY(mouseNormY) {\n      var maxAngleRad = Math.PI * 0.1;\n      this.rotationWantedX = maxAngleRad * mouseNormY * this.morphingProgress;\n    }\n  }, {\n    key: "_eval_allLoaded",\n    value: function _eval_allLoaded() {\n      if (this.M_geometry.loaded) {\n        this.allLoaded = true;\n        this.worldGL.eval_start(); //this._create()\n      }\n    }\n  }, {\n    key: "_setup_settings3",\n    value: function _setup_settings3() {\n      //console.log("(Home4Dots._setup_settings)!")\n      this.settings = {\n        factor: 6,\n        incr_radio: 25,\n        numOrbits: 26,\n        //arrayOrbits: [12, 19, 26]\n        arrayOrbits: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26] //arrayOrbits: [1, 3]\n\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.array_triangular_dots_x_orbita = this._get_array_triangular_dots_x_orbita(this.settings.array_triangular, this.settings.arrayOrbits);\n      this.settings.array_dotPos = this._get_array_dotPos(this.settings.arrayOrbits, this.settings.array_triangular, this.settings.array_triangular_dots_x_orbita);\n      this.settings.numDots = this.settings.array_dotPos.length;\n    }\n  }, {\n    key: "_setup_settings",\n    value: function _setup_settings() {\n      //console.log("(About1Dots._setup_settings)!")\n      var speedBase = 0.00005; //--\n\n      this.settings = {\n        //--\n        rotationInner: 0,\n        speedRotationInner: 37 * speedBase,\n        rotationOutter: 0,\n        speedRotationOutter: 1 * speedBase,\n        //--\n        factor: 6,\n        incr_radio: 25,\n        numOrbits: 37,\n        pulseArray: [],\n        pulseMax: 1,\n        pulseNum_0: 0,\n        pulseInitTime_0: 0,\n        pulseProgress_0: 0,\n        progress0: 0,\n        progress0b: 1,\n        progress1: 0,\n        progress2: 0,\n        progress3: 0,\n        progress4: 0,\n        progress4b: 1,\n        progress5: 0,\n        progress6: 0,\n        progress6b: 1,\n        scrollSpeed: 0,\n        scrollSpeedFiltered: 0\n      };\n      this.settings.array_triangular = this._get_array_triangular(this.settings.factor, this.settings.numOrbits);\n      this.settings.numDots = this.settings.array_triangular[this.settings.array_triangular.length - 1];\n    }\n  }, {\n    key: "_get_array_triangular",\n    value: function _get_array_triangular(_factor, _numObits) {\n      // Genera una array de progresión triangular (* factor).\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _numObits; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        miArray.push(i * (i + 1) / 2 * _factor);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_array_dotPos",\n    value: function _get_array_dotPos(_arrayOrbits, _array_triangular, _array_triangular_dots_x_orbita) {\n      var miArray = [];\n\n      for (var i = 0; i < _arrayOrbits.length; i++) {\n        var orbitNum = _arrayOrbits[i];\n        var dots_x_orbit = _array_triangular_dots_x_orbita[i];\n        var dotNum_base = _array_triangular[_arrayOrbits[i] - 1]; // console.log("orbitNum: "+orbitNum)\n        // console.log("dots_x_orbit: "+dots_x_orbit)\n        // console.log("dotNum_base: "+dotNum_base)\n\n        for (var j = 0; j < dots_x_orbit; j++) {\n          miArray.push(dotNum_base + j + 1);\n        }\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_get_numDots",\n    value: function _get_numDots(_array_triangular_dots_x_orbita) {\n      var numDots = 0;\n\n      for (var i = 0; i <= _array_triangular_dots_x_orbita.length - 1; i++) {\n        numDots += _array_triangular_dots_x_orbita[i];\n      }\n\n      return numDots;\n    }\n  }, {\n    key: "_get_array_triangular_dots_x_orbita",\n    value: function _get_array_triangular_dots_x_orbita(_array_triangular, _arrayOrbits) {\n      // Genera una array basada en la progresión triangular (* factor).\n      // ... donde se indica el numero de dots por orbital\n      // Una progresión triangular es: 1, 3, 6, 10, 15 (https://significativa.org/diccionarios/numeros-figurados/#:~:text=3.1.1.1.-,Definici%C3%B3n,anterior%20no%20obtenemos%20una%20constante.)\n      var miArray = [];\n\n      for (var i = 0; i <= _arrayOrbits.length - 1; i++) {\n        //array_numTriagulares.push(i*(i+1)/2)\n        var numDots_orbita_actual = _array_triangular[_arrayOrbits[i]];\n        var numDots_orbita_anterior = _array_triangular[_arrayOrbits[i] - 1];\n        var numDots_orbita = numDots_orbita_actual - numDots_orbita_anterior;\n        miArray.push(numDots_orbita);\n      }\n\n      return miArray;\n    }\n  }, {\n    key: "_createcube",\n    value: function _createcube(_scene) {\n      var geometry = new three_module/* BoxGeometry */.DvJ(100, 100, 100);\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        color: 0x00ff00\n      });\n      var cube = new three_module/* Mesh */.Kj0(geometry, material);\n\n      _scene.add(cube);\n    }\n  }]);\n\n  return About1Dots;\n}();\n\n/* harmony default export */ const about1_About1Dots = (About1Dots);\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/shaders/gradientBackground_vertex.glsl\n/* harmony default export */ const gradientBackground_vertex = ("#define GLSLIFY 1\\nuniform vec3 uColor0;\\nuniform vec3 uColor1;\\nuniform vec3 uColor2;\\nuniform vec3 uColor3;\\nuniform float uTime;\\nuniform float uScrollProgress;\\nuniform float uScrollTotalRange;\\nuniform float uAspectRatio;\\nuniform float uResponsiveScale;\\n\\nvarying vec2 vUv;\\nvarying vec3 v_position;\\nvarying float v_noise;\\nvarying float v_colorStrength1;\\nvarying float v_colorStrength2;\\nvarying float v_colorStrength3;\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat cnoise(vec3 P){\\n  vec3 Pi0 = floor(P); // Integer part for indexing\\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 / 7.0;\\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 / 7.0;\\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n  return 2.2 * n_xyz;\\n}\\n\\nfloat get_escalaNoise(float x, float y, float amplitudMapa, float progress){\\n    float valor = cnoise(vec3(x/amplitudMapa, y/amplitudMapa, progress));\\n    valor = -0.5+(valor*2.);\\n    //valor = valor*2.; // x2 Intesifica el contraste\\n    return valor;\\n}\\n\\nvoid main() {\\n    float scrollPos = -uScrollTotalRange*uScrollProgress*0.001;\\n    float newPositionY = (position.y+scrollPos)/uAspectRatio;\\n\\n    vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\\n\\tgl_Position = projectionMatrix * modelViewPosition;\\n\\n    float uTimeSlow0  = uTime; \\n    float uTimeSlow1 = uTime*0.1; // Modificamos la velocidad en la que evolucionan los gradientes\\n    float uTimeSlow2 = uTime*0.1; // Modificamos la velocidad en la que evolucionan los gradientes\\n    float uTimeSlow3 = uTime*0.2; // Modificamos la velocidad en la que evolucionan los gradientes\\n\\n    //v_noise = cnoise(vec3(position.x/0.01, position.y/0.01, uTimeSlow0*1.));\\n\\n    v_colorStrength1 = get_escalaNoise(position.x-1000., newPositionY+0., 1.2/uResponsiveScale, uTimeSlow1+100.)*1.;\\n    v_colorStrength1 = clamp(v_colorStrength1, 0., 1.5 ); // clamp(valor, min, max)\\n\\n    v_colorStrength2 = get_escalaNoise(position.x-2000., newPositionY+200., 1.2/uResponsiveScale, uTimeSlow2+200.)*1.;\\n    v_colorStrength2 = clamp(v_colorStrength2, 0., 1.5 ); // clamp(valor, min, max)\\n\\n    v_colorStrength3 = get_escalaNoise(position.x-3000., newPositionY+400., 2.2/uResponsiveScale, uTimeSlow3+400.)*1.;\\n    v_colorStrength3 = clamp(v_colorStrength3, 0., 1.5 ); // clamp(valor, min, max)\\n\\n    //v_colorStrength3 = get_escalaNoise(position.x, position.y, 1., uTimeSlow+200.)*2.;\\n\\n    vUv = uv;\\n    v_position = position;\\n\\n}");\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/shaders/gradientBackground_fragment.glsl\n/* harmony default export */ const gradientBackground_fragment = ("#define GLSLIFY 1\\n//#pragma glslify: blur1 = require(\'glsl-fast-gaussian-blur/13\')\\n// varying vec3 vPosition;\\n// varying vec2 vUv;\\nuniform float uTime;\\nuniform vec3 uColor0;\\nuniform vec3 uColor1;\\nuniform vec3 uColor2;\\nuniform vec3 uColor3;\\nuniform vec3 uColorTouch;\\nuniform float uFooterProgress;\\n\\nvarying vec2 vUv;\\nvarying vec3 v_position;\\nvarying float v_noise;\\nvarying float v_colorStrength1;\\nvarying float v_colorStrength2;\\nvarying float v_colorStrength3;\\n\\nvarying float vPulseNum_0;\\nvarying float vPulseProgress_0;\\n\\n//#pragma glslify: snoise2 = require(glsl-noise/simplex/2d)\\n\\nfloat random2(vec2 c){\\n    return fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n// float randomNoise(vec2 p) {\\n//   return (random2(p - vec2(sin(time))) * 2.0 - 1.0) * max(length(acceleration), 0.08);\\n// }\\n\\nvoid main() {\\n\\n    float incr = 0.0;\\n    float random = random2(vec2(v_position.x+incr, v_position.y+incr));\\n    vec3 rndColor = vec3(random/1., random/1., random/1.);\\n    float randomStrength = (v_colorStrength1+v_colorStrength2+v_colorStrength3)/3.;\\n\\n    vec3 colorBlanco = vec3(1.0, 1.0, 1.0);\\n    vec3 mixColor = uColor0;\\n    mixColor = mix(mixColor, uColor1, v_colorStrength1);\\n    mixColor = mix(mixColor, uColor2, v_colorStrength2);\\n    mixColor = mix(mixColor, uColor3, v_colorStrength3*0.5);\\n    mixColor = mix(mixColor, rndColor, 0.03+(randomStrength*0.3));\\n    mixColor = mix(mixColor, uColorTouch, uFooterProgress);\\n\\n    //mixColor = mix(mixColor, vec3(v_noise, v_noise, v_noise), 1.);\\n\\n    //mixColor = mix(mixColor, uColor0, centralColor);\\n    //gl_FragColor = vec4(v_noise, 0.0, 0.0, 1.0);\\n    //gl_FragColor = vec4(mixColor, 1.0);\\n    gl_FragColor = vec4(mixColor, 1.0);\\n}\\n\\n");\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/About1Background.js\nfunction About1Background_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction About1Background_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction About1Background_createClass(Constructor, protoProps, staticProps) { if (protoProps) About1Background_defineProperties(Constructor.prototype, protoProps); if (staticProps) About1Background_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar GradientBackground = /*#__PURE__*/function () {\n  function GradientBackground(obj) {\n    About1Background_classCallCheck(this, GradientBackground);\n\n    //console.log("(GradientBackground.CONSTRUCTORA)--------------- ", obj)\n    this.worldGL = obj.worldGL; //--       \n\n    this.settings = {\n      initialized: false,\n      scrollNew: 0,\n      scrollLast: 0,\n      //--\n      uScrollTotalRange: null,\n      uScrollProgress: 0,\n      uScrollDelta: 0,\n      uTime: 0\n    };\n  } //-----------------------------\n  // PUBLICOS;  \n\n\n  About1Background_createClass(GradientBackground, [{\n    key: "create",\n    value: function create() {\n      this.settings.initialized = true; //--\n\n      this.$scrollTrigger = document.querySelector(\'.inner\');\n      this.scrollTotalRange = this.$scrollTrigger.offsetHeight;\n      this.settings.uScrollTotalRange = this.scrollTotalRange; //--\n\n      this.clock = new three_module/* Clock */.SUY();\n      this.renderer = this.worldGL.renderer; //--\n\n      this.camera = new three_module/* OrthographicCamera */.iKG(-1, // left\n      1, // right\n      1, // top\n      -1, // bottom\n      -1, // near,\n      0);\n      this.scene = new three_module/* Scene */.xsS(); //this.scene.background = new THREE.Color( 0xff0000 );\n      //---------------\n      // GEOMETRY:\n\n      var geometry = new three_module/* PlaneBufferGeometry */.BKK(2, 2, 100, 100); //---------------\n      // MATERIAL:\n      // Test Naterial:  Only for dev testings\n      //const material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n      //--\n\n      this.material = new three_module/* ShaderMaterial */.jyz({\n        //depthWrite: false,\n        //blending: THREE.AdditiveBlending,\n        //vertexColors: true,\n        vertexShader: gradientBackground_vertex,\n        fragmentShader: gradientBackground_fragment,\n        //wireframe:true,\n        uniforms: {\n          uColor0: {\n            value: new three_module/* Color */.Ilk("#01155c")\n          },\n          //0f307d\n          uColor1: {\n            value: new three_module/* Color */.Ilk("#176bb3")\n          },\n          uColor2: {\n            value: new three_module/* Color */.Ilk("#7e08ac")\n          },\n          uColor3: {\n            value: new three_module/* Color */.Ilk("#b9112a")\n          },\n          uColorTouch: {\n            value: new three_module/* Color */.Ilk("#000A33")\n          },\n          uTime: {\n            value: 0\n          },\n          uScrollProgress: {\n            value: 0\n          },\n          uFooterProgress: {\n            value: 0\n          },\n          uScrollDelta: {\n            value: 0\n          },\n          uScrollTotalRange: {\n            value: this.settings.uScrollTotalRange\n          },\n          uAspectRatio: {\n            value: this.worldGL.width / this.worldGL.height\n          },\n          uResponsiveScale: {\n            value: this.worldGL.responsiveScale\n          }\n        }\n      }); //---------------\n      // MESH:\n\n      this.plane = new three_module/* Mesh */.Kj0(geometry, this.material);\n      this.scene.add(this.plane);\n    } //--  \n\n  }, {\n    key: "resize",\n    value: function resize() {\n      if (this.settings.initialized) {\n        //console.log("(GradientBackground.resize)!")\n        if (this.$scrollTrigger) {\n          this.settings.uScrollTotalRange = this.$scrollTrigger.offsetHeight;\n        }\n\n        this.renderer.setSize(this.worldGL.width, this.worldGL.height, false);\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.settings.initialized) {\n        this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n        this.material.uniforms.uScrollProgress.value = this.worldGL.settings.scroll_progress;\n        this.material.uniforms.uFooterProgress.value = this.worldGL.settings.scroll_footer_progress;\n        this.material.uniforms.uAspectRatio.value = this.worldGL.width / this.worldGL.height;\n        this.material.uniforms.uScrollTotalRange.value = this.settings.uScrollTotalRange;\n        this.material.uniforms.uResponsiveScale.value = this.worldGL.responsiveScale;\n        this.renderer.render(this.scene, this.camera); //console.log(this.material.uniforms)\n        //console.log("uScrollProgress:"+this.material.uniforms.uScrollProgress.value+"  ---  uScrollTotalRange:"+this.material.uniforms.uScrollTotalRange.value+"  --- uAspectRatio:"+ this.material.uniforms.uAspectRatio.value)\n      }\n    } //-----------------------------\n    // PRIVADOS:\n\n  }]);\n\n  return GradientBackground;\n}();\n\n/* harmony default export */ const About1Background = (GradientBackground);\n;// CONCATENATED MODULE: ./app/src/js/webgl/about1/About1App.js\nfunction About1App_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction About1App_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction About1App_createClass(Constructor, protoProps, staticProps) { if (protoProps) About1App_defineProperties(Constructor.prototype, protoProps); if (staticProps) About1App_defineProperties(Constructor, staticProps); return Constructor; }\n\n// FPS-Meter:\n//(function(){var script=document.createElement(\'script\');script.onload=function(){var stats=new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop)});};script.src=\'//cdn.jsdelivr.net/gh/Kevnz/stats.js/build/stats.min.js\';document.head.appendChild(script);})()\n\n\n\n\n\n\n //import About1Dots from \'../home1/Home1Dots\';\n\n\n\nvar About1App = /*#__PURE__*/function () {\n  function About1App(obj) {\n    var _this = this;\n\n    About1App_classCallCheck(this, About1App);\n\n    //console.log("(About1App.CONSTRUCTORA)!", obj) \n    this.hw_renderer = obj.renderer; // Rederer/pagina de HighWay. No confundir con el render/renderer de Three.js\n\n    this.$container = obj.domElement;\n    this.refResolution = obj.refResolution; //-- \n    //this.$main = document.querySelector(\'.inner\')\n    //this.$footer = document.querySelector(\'.footer\')\n    //--\n\n    this.REF_RESOLUTION = this.refResolution;\n    this.REF_CAMERA_DISTANCE = 500; //--\n\n    this.initialized = false; //--\n\n    this.width;\n    this.height;\n    this.responsiveScale;\n    this.cameraDistance; //--\n\n    document.addEventListener(\'mousemove\', function (self) {\n      _this.onMouseUpdate(self);\n    }, false);\n    document.addEventListener(\'wheel\', function (self) {\n      _this.onMouseUpdate(self);\n    }, false); //--\n\n    this.MAIN_ACTIVE = false;\n    this.FOOTER_ACTIVE = false; //--\n\n    this.mouseNorm = {\n      x: 0,\n      y: 0\n    }; //--\n    //this.refResolution = 1920;\n    //this.refResolution = 450;\n    //this.responsiveScale = this.width/this.refResolution;\n    //--\n    //this.cameraDistance = 500\n    //--\n\n    this.settings = {\n      scroll_lastInnerY: 0,\n      // Ultima posición del elemento de referencia\n      scroll_delta: 0,\n      // Incremento de pixels del scroll\n      scroll_limitedDelta: 0,\n      // Limita los valores a -20 -> +20\n      scroll_normalizedDelta: 0,\n      // Pasa el delta a -1 -> +1\n      scroll_factordDelta: 1,\n      // Valores absolutos de 0 -> 1\n      scroll_direction: 1,\n      // Direccion del delta. 1 si está parado\n      scroll_footer_progress: 0,\n      morphingProgress: 0\n    }; //--\n\n    this._update_dimensions(); //--\n    // Scene\n\n\n    this.scene = new three_module/* Scene */.xsS(); //this.scene.background = new THREE.Color(0x333333)\n    //--\n    // Camera\n    //PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\n\n    this.camera = new three_module/* PerspectiveCamera */.cPb(30, this.width / this.height, 0.1, 2000);\n    this.camera.position.z = this.cameraDistance; //console.log("this.camera.fov: "+this.camera.fov)\n\n    this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI); //console.log("this.camera.fov: "+this.camera.fov)\n    //--\n    // Renderer\n\n    this.renderer = new three_module/* WebGL1Renderer */.b5g({\n      antialias: true,\n      alpha: true\n    });\n    this.renderer.autoClear = false; // Vamos a usar 2 scenas (una para el background y otra para los puntos) que implicarán usar 2 acciones de render. Con autoclear false permitimos que la segunda no borre la primera.\n\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1)); //--\n\n    this.$container.appendChild(this.renderer.domElement); //--\n    //--\n\n    this.background = new About1Background({\n      worldGL: this\n    }); //--\n\n    this.dots = new about1_About1Dots({\n      worldGL: this\n    }); //--\n\n    this._resize(); //this._render();\n    //this._init_scrollListeners()\n\n  } //---------------------------\n  // PUBLICAS:\n\n\n  About1App_createClass(About1App, [{\n    key: "init",\n    value: function init() {\n      //console.log("(About1App.init)!") \n      this.initialized = true;\n      this.eval_start();\n    }\n  }, {\n    key: "eval_start",\n    value: function eval_start() {\n      //console.log("(About1App.eval_start): "+this.initialized+":"+this.dots.allLoaded) \n      if (this.initialized && this.dots.allLoaded) {\n        //console.log("START!")\n        //--\n        this.$main = document.querySelector(\'.inner\');\n        this.$footer = document.querySelector(\'.footer\'); //--\n\n        if (this.background) {\n          this.background.create();\n        }\n\n        if (this.dots) {\n          this.dots.create();\n        }\n\n        this._render();\n\n        this._init_scrollListeners();\n      }\n    }\n  }, {\n    key: "kill",\n    value: function kill() {\n      //console.log("(About1App.kill)!") \n      this.$inner_trigger.kill();\n      this.$footer_trigger.kill();\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_render);\n      node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(this._binded_eval_scroll);\n      this.dots = null;\n    } //---------------------------\n\n  }, {\n    key: "onResize",\n    value: function onResize() {\n      //console.log("(About1App.onResize)!")\n      this._resize();\n    }\n  }, {\n    key: "onMouseUpdate",\n    value: function onMouseUpdate(e) {\n      if (this.FOOTER_ACTIVE) {\n        this.mouseNorm.x = e.pageX / this.width * 2 - 1;\n        this.mouseNorm.y = e.pageY / this.height * 2 - 1;\n\n        if (this.dots) {\n          this.dots.onMouseUpdate(this.mouseNorm.x, this.mouseNorm.y);\n        }\n      }\n    } //---------------------------\n    // PRIVADAS:\n\n  }, {\n    key: "_update_dimensions",\n    value: function _update_dimensions() {\n      // console.log("(Home2App_m._update_dimensions)!", this.renderer)\n      this.width = this.$container.offsetWidth;\n      this.height = this.$container.offsetHeight;\n      this.responsiveScale = this.width / this.REF_RESOLUTION.width;\n      this.cameraDistance = this.REF_CAMERA_DISTANCE * this.responsiveScale; //--\n\n      if (this.renderer) {\n        this.renderer.setSize(this.width, this.height); //--\n\n        this.camera.aspect = this.width / this.height;\n        this.cameraDistance = this.camera.position.z;\n        this.camera.fov = 2 * Math.atan(this.height / 2 / this.cameraDistance) * (180 / Math.PI);\n        this.camera.updateProjectionMatrix();\n      } //--\n\n    }\n  }, {\n    key: "_init_scrollListeners",\n    value: function _init_scrollListeners() {\n      var _this2 = this;\n\n      var binded_render = function binded_render() {\n        _this2._render();\n      };\n\n      this._binded_render = binded_render;\n\n      var binded_eval_scroll = function binded_eval_scroll() {\n        _this2._eval_inertia_scroll(_this2.$inner_trigger.progress);\n\n        _this2._eval_footer_scroll(_this2.$footer_trigger.progress);\n      };\n\n      this._binded_eval_scroll = binded_eval_scroll;\n      var that = this;\n      this.$inner_trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$main,\n        start: \'top-=10 top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            //console.log("MAIN ACTIVE")\n            that.MAIN_ACTIVE = true;\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_render);\n            node_modules_gsap/* default.ticker.add */.ZP.ticker.add(binded_eval_scroll);\n          } else {\n            that.MAIN_ACTIVE = false; //console.log("MAIN NOT ACTIVE")\n            //gsap.ticker.remove(binded_render) // El fondo webgl persiste siempre. No lo desactivamos nunca.\n\n            node_modules_gsap/* default.ticker.remove */.ZP.ticker.remove(binded_eval_scroll); // El fondo webgl persiste siempre. No lo desactivamos nunca.\n          }\n        }\n      });\n      this.$footer_trigger = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$footer,\n        start: \'top bottom\',\n        end: \'bottom+=10 bottom\',\n        scrub: true,\n        // Scrub: Genera eventos en una franja mas que en un punto.\n        // markers: true,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            //console.log("FOOTER ACTIVE")\n            that.FOOTER_ACTIVE = true;\n          } else {\n            //console.log("FOOTER NOT ACTIVE")\n            that.FOOTER_ACTIVE = false;\n          }\n        }\n      });\n    }\n  }, {\n    key: "_eval_inertia_scroll",\n    value: function _eval_inertia_scroll(progress) {\n      var innerData = this.$main.getBoundingClientRect();\n      var newInnerY = innerData.y;\n      this.settings.scroll_progress = progress;\n      this.settings.scroll_delta = newInnerY - this.settings.scroll_lastInnerY;\n      this.settings.scroll_lastInnerY = newInnerY;\n      this.settings.scroll_limitedDelta = webgl_WebGLUtils.clamp(this.settings.scroll_delta, -20, 20); // Limita los valores a -20 -> +20\n\n      this.settings.scroll_normalizedDelta = (this.settings.scroll_limitedDelta / 20).toFixed(3); // Pasa el delta a -1 -> +1\n\n      this.settings.scroll_factordDelta = Math.abs(this.settings.scroll_normalizedDelta) + 0; // Valores absolutos de 0 -> 1\n\n      this.settings.scroll_direction = 1;\n\n      if (this.settings.scroll_normalizedDelta < 0) {\n        this.settings.scroll_direction = -1;\n      }\n    }\n  }, {\n    key: "_eval_footer_scroll",\n    value: function _eval_footer_scroll(progress) {\n      //console.log("(About1App._eval_footer_scroll): "+progress)\n      this.settings.scroll_footer_progress = progress;\n      this.settings.morphingProgress = progress;\n    }\n  }, {\n    key: "_resize",\n    value: function _resize() {\n      //console.log("(About1Dots.resize)!")\n      //--\n      this._update_dimensions(); //--\n\n\n      if (this.background) {\n        this.background.resize();\n      }\n\n      if (this.dots) {\n        this.dots.resize();\n      }\n    }\n  }, {\n    key: "_render",\n    value: function _render() {\n      //console.log("(About1App._render): "+this.settings.scroll_progress+":"+this.settings.scroll_footer_progress)\n      if (this.height != this.$container.offsetHeight || this.width != this.$container.offsetWidth) {\n        this._resize();\n      }\n\n      if (this.background) {\n        this.background.render();\n      }\n\n      if (this.dots) {\n        this.dots.render();\n      }\n\n      this.renderer.render(this.scene, this.camera); //requestAnimationFrame(this.render.bind(this))\n    }\n  }]);\n\n  return About1App;\n}();\n\n/* harmony default export */ const about1_About1App = (About1App);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererAbout.js\nfunction rendererAbout_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rendererAbout_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererAbout_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rendererAbout_typeof(obj); }\n\nfunction rendererAbout_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rendererAbout_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererAbout_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererAbout_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererAbout_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererAbout_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererAbout_setPrototypeOf(subClass, superClass); }\n\nfunction rendererAbout_setPrototypeOf(o, p) { rendererAbout_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererAbout_setPrototypeOf(o, p); }\n\nfunction rendererAbout_createSuper(Derived) { var hasNativeReflectConstruct = rendererAbout_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererAbout_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererAbout_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererAbout_possibleConstructorReturn(this, result); }; }\n\nfunction rendererAbout_possibleConstructorReturn(self, call) { if (call && (rendererAbout_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return rendererAbout_assertThisInitialized(self); }\n\nfunction rendererAbout_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rendererAbout_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererAbout_getPrototypeOf(o) { rendererAbout_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererAbout_getPrototypeOf(o); }\n\n// GSAP Library\n\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z);\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(MorphSVGPlugin); // Webgl\n\n // Import Renderer\n\n // Utilities\n\n\n\n\n\nvar RendererAbout = /*#__PURE__*/function (_Renderer) {\n  rendererAbout_inherits(RendererAbout, _Renderer);\n\n  var _super = rendererAbout_createSuper(RendererAbout);\n\n  function RendererAbout() {\n    rendererAbout_classCallCheck(this, RendererAbout);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererAbout_createClass(RendererAbout, [{\n    key: "selectors",\n    value: function selectors() {\n      // Sections\n      this.$hero = this.$el.querySelector(\'.about__hero\');\n      this.$team = this.$el.querySelector(\'.about__team\');\n      this.$clients = this.$el.querySelector(\'.about__clients\');\n      this.$canvas = this.$el.querySelector(\'#webgl_background_about\');\n    }\n  }, {\n    key: "events",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: "preload",\n    value: function preload() {\n      this.preloadItems = {\n        main: [],\n        secondary: []\n      };\n    }\n  }, {\n    key: "beforeEnter",\n    value: function beforeEnter() {\n      // Webgl\n      if (this.appStore.isDesktop) {\n        this.renderBg = new about1_About1App({\n          renderer: this,\n          domElement: this.$canvas,\n          refResolution: {\n            width: 1920,\n            height: 947\n          }\n        });\n      } else {\n        this.renderBg = new about1_About1App({\n          renderer: this,\n          domElement: this.$canvas,\n          refResolution: {\n            width: 850,\n            height: 850\n          }\n        });\n      }\n    }\n  }, {\n    key: "enter",\n    value: function enter() {\n      var _this = this;\n\n      // Start functions\n      this.init(); // Move canvas\n\n      var _offset2 = this.$inner.offsetHeight - this.$canvas.offsetHeight;\n\n      this._canvasPin = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: \'top top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onUpdate: function onUpdate(self) {\n          if (_this.appStore.isDesktop) node_modules_gsap/* default.set */.ZP.set(_this.$canvas, {\n            y: _offset2 * self.progress + \'px\'\n          });\n        }\n      });\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      var _this2 = this;\n\n      this.initHeroCards();\n      this.renderBg.init();\n\n      if (this.appStore.isDesktop) {\n        node_modules_gsap/* default.delayedCall */.ZP.delayedCall(1.5, function () {\n          _this2.initHeroPin();\n        });\n        this.initParallaxCards();\n      } else {\n        this.initTeamDraggableMobile();\n      }\n    }\n  }, {\n    key: "initParallaxCards",\n    value: function initParallaxCards() {\n      this.$heroCards = this.$hero.querySelectorAll(\'.card\');\n      var parallaxCards = node_modules_gsap/* default.timeline */.ZP.timeline({\n        defaults: {\n          duration: 1,\n          ease: \'none\'\n        },\n        scrollTrigger: {\n          trigger: this.$hero.querySelector(\'.container--large\'),\n          start: \'top bottom\',\n          end: this.$hero.querySelector(\'.container--large\').offsetHeight + window.innerWidth * 0.1 + \' top\',\n          scrub: true,\n          markers: false\n        }\n      }); // Set\n\n      parallaxCards.set([this.$heroCards[0]], {\n        y: \'0vw\'\n      }, 0);\n      parallaxCards.set([this.$heroCards[1]], {\n        y: \'2.5vw\'\n      }, 0);\n      parallaxCards.set([this.$heroCards[2]], {\n        y: \'0vw\'\n      }, 0);\n      parallaxCards.set([this.$heroCards[3]], {\n        y: \'2.5vw\'\n      }, 0); // Animation\n\n      parallaxCards.to([this.$heroCards[0]], {\n        y: \'2.5vw\'\n      }, 0);\n      parallaxCards.to([this.$heroCards[1]], {\n        y: \'0vw\'\n      }, 0);\n      parallaxCards.to([this.$heroCards[2]], {\n        y: \'2.5vw\'\n      }, 0);\n      parallaxCards.to([this.$heroCards[3]], {\n        y: \'0vw\'\n      }, 0);\n    }\n  }, {\n    key: "initHeroCards",\n    value: function initHeroCards() {\n      var _this3 = this;\n\n      // Selectors\n      this.$heroCards = this.$hero.querySelectorAll(\'.card\');\n\n      var _loop = function _loop(i) {\n        if (_this3.appStore.isDesktop) {\n          _this3.domEvents.add(_this3.$heroCards[i], \'mouseenter\', function (a, e, el) {\n            if (el.querySelector(\'.info\')) {\n              node_modules_gsap/* default.killTweensOf */.ZP.killTweensOf(el.querySelector(\'.info\'));\n              node_modules_gsap/* default.set */.ZP.set(el.querySelector(\'.info\'), {\n                display: \'flex\'\n              });\n              node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.info\'), {\n                opacity: 1,\n                duration: 0.6,\n                ease: \'expo.out\'\n              });\n            } else {\n              el.style.pointerEvents = \'none\';\n            }\n          });\n\n          _this3.domEvents.add(_this3.$heroCards[i], \'mouseleave\', function (a, e, el) {\n            if (el.querySelector(\'.info\')) {\n              node_modules_gsap/* default.killTweensOf */.ZP.killTweensOf(el.querySelector(\'.info\'));\n              node_modules_gsap/* default.to */.ZP.to(el.querySelector(\'.info\'), {\n                opacity: 0.0001,\n                duration: 0.6,\n                ease: \'expo.out\',\n                onComplete: function onComplete() {\n                  node_modules_gsap/* default.set */.ZP.set(el.querySelector(\'.info\'), {\n                    display: \'none\'\n                  });\n                }\n              });\n            } else {\n              el.style.pointerEvents = \'none\';\n            }\n          });\n        } else {\n          // Open and close info\n          if (_this3.$heroCards[i].querySelector(\'.info\')) {\n            _this3.domEvents.add(_this3.$heroCards[i].querySelector(\'.icon\'), \'click\', function (e) {\n              node_modules_gsap/* default.set */.ZP.set(_this3.$heroCards[i].querySelector(\'.info\'), {\n                display: \'flex\'\n              });\n              node_modules_gsap/* default.to */.ZP.to(_this3.$heroCards[i].querySelector(\'.info\'), {\n                opacity: 1,\n                duration: 0.8,\n                ease: \'expo.out\'\n              });\n            });\n\n            if (_this3.$heroCards[i].querySelector(\'.closer\')) {\n              _this3.domEvents.add(_this3.$heroCards[i].querySelector(\'.closer\'), \'click\', function (e) {\n                node_modules_gsap/* default.to */.ZP.to(_this3.$heroCards[i].querySelector(\'.info\'), {\n                  opacity: 0.0001,\n                  duration: 0.8,\n                  ease: \'expo.out\',\n                  onComplete: function onComplete() {\n                    node_modules_gsap/* default.set */.ZP.set(_this3.$heroCards[i].querySelector(\'.info\'), {\n                      display: \'none\'\n                    });\n                  }\n                });\n              });\n            }\n          } // Selectors\n\n\n          _this3.$heroSlider = _this3.$hero.querySelector(\'.slider\');\n          _this3._heroDraggable = new superDraggable_default({\n            el: _this3.$hero,\n            snap: false,\n            snapTo: \'center\',\n            dots: false\n          });\n        }\n      };\n\n      for (var i = 0; i < this.$heroCards.length; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: "initHeroPin",\n    value: function initHeroPin() {\n      var _this4 = this;\n\n      this.$heroWords = this.$hero.querySelector(\'.words\');\n      this.$heroWordsInner = this.$hero.querySelector(\'.words__inner\');\n      this.$heroWordsGradient = this.$hero.querySelector(\'.words__gradient\');\n      this.$heroLabel = this.$hero.querySelector(\'.label--1\');\n\n      var _offset = this.$heroWordsInner.offsetHeight - this.$heroWordsGradient.offsetHeight;\n\n      this._heroPin = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$heroWords,\n        start: \'top top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        markers: false,\n        onUpdate: function onUpdate(self) {\n          node_modules_gsap/* default.set */.ZP.set(_this4.$heroLabel, {\n            y: _offset * self.progress + \'px\'\n          });\n          node_modules_gsap/* default.set */.ZP.set(_this4.$heroWordsGradient, {\n            y: _offset * self.progress + \'px\'\n          });\n        },\n        onEnter: function onEnter() {\n          node_modules_gsap/* default.to */.ZP.to(_this4.$heroWordsGradient, {\n            opacity: 1,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        },\n        onEnterBack: function onEnterBack() {\n          node_modules_gsap/* default.to */.ZP.to(_this4.$heroWordsGradient, {\n            opacity: 1,\n            duration: 0.4,\n            ease: \'power2.out\'\n          });\n        }\n      }); // Move canvas\n\n      var _offset2 = this.$inner.offsetHeight - this.$canvas.offsetHeight;\n\n      this._canvasPin = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$inner,\n        start: \'top top\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onUpdate: function onUpdate(self) {\n          node_modules_gsap/* default.set */.ZP.set(_this4.$canvas, {\n            y: _offset2 * self.progress + \'px\'\n          });\n        }\n      }); // Create a linear gradient that works with webGl background\n\n      var canvas = this.$heroWordsGradient;\n      var ctx = canvas.getContext(\'2d\'); // The start gradient point is at x = 20, y = 0 / The end gradient point is at x = 220, y = 0\n\n      var gradient = ctx.createLinearGradient(20, 0, 220, 0); // Set the fill style and draw a rectangle\n\n      ctx.fillStyle = gradient;\n      ctx.fillRect(20, 20, 200, 100);\n    }\n  }, {\n    key: "initTeamDraggableMobile",\n    value: function initTeamDraggableMobile() {\n      this.$teamSlider = this.$team.querySelector(\'.slider\');\n      this.$teamSliderProgress = this.$teamSlider.querySelector(\'.slider__progress\');\n      this._teamDraggable = new superDraggable_default({\n        el: this.$team,\n        snap: false,\n        snapTo: \'center\',\n        dots: false\n      });\n    }\n  }, {\n    key: "raf",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: "resize",\n    value: function resize(width, height) {\n      if (!this.appStore.isDesktop) {\n        if (this._heroDraggable) this._heroDraggable.resize();\n        if (this._teamDraggable) this._teamDraggable.resize();\n      }\n    }\n  }, {\n    key: "leave",\n    value: function leave() {\n      this.renderBg.kill();\n    }\n  }]);\n\n  return RendererAbout;\n}(renderer); // Don\'t forget to export your renderer\n\n\n/* harmony default export */ const rendererAbout = (RendererAbout);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererSingleCase.js\nfunction rendererSingleCase_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rendererSingleCase_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererSingleCase_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rendererSingleCase_typeof(obj); }\n\nfunction rendererSingleCase_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rendererSingleCase_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererSingleCase_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererSingleCase_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererSingleCase_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererSingleCase_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererSingleCase_setPrototypeOf(subClass, superClass); }\n\nfunction rendererSingleCase_setPrototypeOf(o, p) { rendererSingleCase_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererSingleCase_setPrototypeOf(o, p); }\n\nfunction rendererSingleCase_createSuper(Derived) { var hasNativeReflectConstruct = rendererSingleCase_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererSingleCase_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererSingleCase_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererSingleCase_possibleConstructorReturn(this, result); }; }\n\nfunction rendererSingleCase_possibleConstructorReturn(self, call) { if (call && (rendererSingleCase_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return rendererSingleCase_assertThisInitialized(self); }\n\nfunction rendererSingleCase_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rendererSingleCase_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererSingleCase_getPrototypeOf(o) { rendererSingleCase_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererSingleCase_getPrototypeOf(o); }\n\n// GSAP Library\n\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n //WebGl:\n\n // Utilities\n\n\n\n\n\nvar RendererSingleCase = /*#__PURE__*/function (_Renderer) {\n  rendererSingleCase_inherits(RendererSingleCase, _Renderer);\n\n  var _super = rendererSingleCase_createSuper(RendererSingleCase);\n\n  function RendererSingleCase() {\n    rendererSingleCase_classCallCheck(this, RendererSingleCase);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererSingleCase_createClass(RendererSingleCase, [{\n    key: "selectors",\n    value: function selectors() {\n      // Sections\n      this.$hero = this.$el.querySelector(\'.singlecase__hero\');\n      this.$flexible = this.$el.querySelector(\'.singlecase__flexible\');\n      this.$footer = this.$el.querySelector(\'.singlecase__footer\');\n      this.$hubspot = this.$el.querySelector(\'.hubspot\');\n      this.$canvasFooter = this.$el.querySelector(\'#webgl_footer\'); // Flexible\n\n      if (this.$flexible) {\n        this.$flexibleText = this.$flexible.querySelectorAll(\'.flexible__text\');\n        this.$flexibleImage = this.$flexible.querySelectorAll(\'.flexible__image\');\n        this.$flexibleVideo = this.$flexible.querySelectorAll(\'.flexible__video\');\n        this.$flexibleGallery = this.$flexible.querySelectorAll(\'.flexible__gallery\');\n      }\n\n      if (this.$flexibleVideo) {\n        // this.$videoModal = document.getElementById(\'videomodal\');\n        // this.$videoModalCloser = this.$videoModal.querySelector(\'.closer\');\n        for (var i = 0; i < this.$flexibleVideo.length; i++) {\n          this.$flexibleVideoModal = this.$flexibleVideo[i].querySelector(\'.video--modal\');\n          this.$videoModalCloser = this.$flexibleVideoModal.querySelector(\'.video__closer\');\n          this.$flexibleVideoVisible = this.$flexibleVideo[i].querySelector(\'.video--visible\');\n          this.$videoVisiblePlayer = this.$flexibleVideoVisible.querySelector(\'.video__player\');\n          this.$videoVisibleTrigger = this.$flexibleVideoVisible.querySelector(\'.video__trigger\');\n          this.$videoVisiblePoster = this.$flexibleVideoVisible.querySelector(\'.video__poster\');\n        }\n      }\n    }\n  }, {\n    key: "events",\n    value: function events() {\n      var _this = this;\n\n      if (this.$flexibleVideo) {\n        for (var i = 0; i < this.$flexibleVideo.length; i++) {\n          if (this.$flexibleVideoModal.dataset.type === \'default\') {\n            this.domEvents.add(this.$flexibleVideo[i].querySelector(\'.video__trigger\'), \'click\', function () {\n              _this.openVideoDefault(_this.$flexibleVideoModal, _this.$flexibleVideoModal.dataset.type);\n            }, this);\n          }\n\n          if (!this.appStore.isDesktop) this.domEvents.add(this.$videoModalCloser, \'click\', function () {\n            _this.closeVideoDefault();\n          });\n        }\n      }\n    }\n  }, {\n    key: "preload",\n    value: function preload() {\n      var _main = [];\n      if (this.$hero.querySelector(\'.background__bg\')) _main.push(this.$hero.querySelector(\'.background__bg\').style.backgroundImage.substring(5, this.$hero.querySelector(\'.background__bg\').style.backgroundImage.length - 2));\n      this.preloadItems = {\n        main: _main,\n        secondary: []\n      };\n    }\n  }, {\n    key: "beforeEnter",\n    value: function beforeEnter() {\n      if (this.$hubspot) {\n        this.$hubspotContent = this.$hubspot.querySelector(\'.hubspot__content\');\n        var _id = this.$hubspotContent.querySelector(\'.hubspotform\').dataset.id;\n        if (_id === \'\') this.appUi.$requestButton.style.pointerEvents = \'none\';\n      }\n\n      if (this.$flexibleVideo) {\n        this.video = {\n          isAnimating: false,\n          isPlaying: false\n        };\n\n        for (var i = 0; i < this.$flexibleVideo.length; i++) {\n          if (this.$flexibleVideo[i].querySelector(\'.video--modal\').dataset.type === \'youtube\') this.setVideoYoutube();\n        }\n      } // Webgl\n\n\n      if (this.appStore.isDesktop) {\n        this.webgl_footer = new home4_Home4App({\n          renderer: this,\n          domElement: this.$canvasFooter\n        });\n      }\n    }\n  }, {\n    key: "enter",\n    value: function enter() {\n      // Start functions\n      this.init();\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      this.initGalleryDraggable();\n\n      if (this.appStore.isDesktop) {\n        this.initFooterCanvasPin();\n        this.webgl_footer.init(); // this.webgl_footer = new Home4App({\n        //     renderer: this,\n        //     domElement: this.$canvasFooter\n        // });\n      }\n    }\n  }, {\n    key: "setVideoYoutube",\n    value: function setVideoYoutube() {\n      var _this2 = this;\n\n      if (!window.YT.loaded) {\n        setTimeout(function () {\n          _this2.setVideoYoutube();\n        }, 10);\n        return;\n      }\n\n      this.$videoYoutube = this.$el.querySelectorAll(\'.video__player--youtube\');\n\n      if (this.$videoYoutube) {\n        var _loop = function _loop(i) {\n          var _id = _this2.$videoYoutube[i].children[0].id;\n          var obj = new YT.Player(_id, {\n            playerVars: {\n              rel: 0,\n              showinfo: 0,\n              ecver: 2\n            },\n            videoId: _id,\n            events: {\n              onReady: function onReady(event) {\n                // const _ratio = (obj.i.height / obj.i.width) * 100;\n                // this.$videoYoutube[i].querySelector(\'.video__player\').style.setProperty(\'--ratio\', _ratio + \'%\');\n                if (_this2.superScroller) _this2.superScroller.resize();\n              },\n              onStateChange: function onStateChange(event) {\n                if (event.data === 0) _this2.closeVideoYoutube(_this2.$videoYoutube[i], obj);\n              }\n            }\n          });\n          _this2.$videoYoutube[_id] = obj;\n\n          var _loop2 = function _loop2(_i) {\n            _this2.domEvents.add(_this2.$videoVisibleTrigger, \'click\', function (a, e, el) {\n              _this2.openVideoYoutube(_this2.$videoYoutube[_i], obj);\n            }, _this2);\n          };\n\n          for (var _i = 0; _i < _this2.$flexibleVideo.length; _i++) {\n            _loop2(_i);\n          }\n\n          _this2.domEvents.add(_this2.$videoModalCloser, \'click\', function (a, e, el) {\n            _this2.closeVideoYoutube(_this2.$videoYoutube[i], obj);\n          }, _this2);\n        };\n\n        for (var i = 0; i < this.$videoYoutube.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: "openVideoDefault",\n    value: function openVideoDefault(element, type) {\n      var _this3 = this;\n\n      if (this.video.isAnimating) return;\n      this.video.isAnimating = true;\n\n      if (this.appStore.isDesktop) {\n        // Selectors\n        this.$videoVisibleEl = this.$flexibleVideoVisible.querySelector(\'video\'); // Animate in\n\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisiblePlayer, {\n          display: \'block\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisibleTrigger, {\n          opacity: 0.0001,\n          duration: 0.4,\n          ease: \'power2.out\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisiblePoster, {\n          opacity: 0.0001,\n          duration: 0.4,\n          ease: \'power2.out\',\n          onComplete: function onComplete() {\n            node_modules_gsap/* default.set */.ZP.set([_this3.$videoVisibleTrigger, _this3.$videoVisiblePoster], {\n              display: \'none\'\n            });\n          }\n        }); // Play video\n\n        this.$videoVisibleEl.play();\n        this.$videoVisibleEl.muted = false;\n        this.domEvents.add(this.$videoVisibleEl, \'ended\', function (e) {\n          _this3.closeVideoDefault();\n        });\n      } else {\n        // Animate in\n        node_modules_gsap/* default.set */.ZP.set(this.$videoModal, {\n          display: \'block\',\n          zIndex: 9999\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoModal, {\n          y: \'-50%\',\n          duration: 1.2,\n          ease: \'expo.inOut\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoModalCloser, {\n          opacity: 1,\n          duration: 0.4,\n          ease: \'power2.out\',\n          delay: 0.8\n        }); // Disable scroll\n\n        this.appUi.disableScroll(); // Play video\n\n        this.$videoModal.querySelector(\'video\').play();\n        this.$videoModal.querySelector(\'video\').muted = false;\n        this.domEvents.add(this.$videoModal.querySelector(\'video\'), \'ended\', function (e) {\n          _this3.closeVideoDefault(element, type);\n        });\n      }\n    }\n  }, {\n    key: "closeVideoDefault",\n    value: function closeVideoDefault(element, type) {\n      var _this4 = this;\n\n      // Pause video\n      this.$videoVisibleEl.pause();\n      this.$videoVisibleEl.muted = true;\n\n      if (this.appStore.isDesktop) {\n        // Animate out\n        node_modules_gsap/* default.set */.ZP.set([this.$videoVisibleTrigger, this.$videoVisiblePoster], {\n          display: \'block\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisibleTrigger, {\n          opacity: 1,\n          duration: 0.4,\n          ease: \'power2.out\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisiblePoster, {\n          opacity: 1,\n          duration: 0.4,\n          ease: \'power2.out\',\n          onComplete: function onComplete() {\n            node_modules_gsap/* default.to */.ZP.to(_this4.$videoVisiblePlayer, {\n              display: \'none\'\n            });\n          }\n        });\n      } else {\n        // Animation out\n        node_modules_gsap/* default.to */.ZP.to(this.$videoModalCloser, {\n          opacity: 0.0001,\n          duration: 0.4,\n          ease: \'power2.out\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoModal, {\n          y: \'-150%\',\n          duration: 1.2,\n          ease: \'expo.inOut\',\n          onComplete: function onComplete() {\n            // Enable scroll\n            _this4.appUi.enableScroll(); // Set animation\n\n\n            node_modules_gsap/* default.set */.ZP.set(_this4.$videoModal, {\n              display: \'none\',\n              y: \'100%\',\n              zIndex: 0\n            });\n            _this4.video.isAnimating = false;\n          }\n        });\n      }\n    }\n  }, {\n    key: "openVideoYoutube",\n    value: function openVideoYoutube(element, obj) {\n      var _this5 = this;\n\n      if (this.video.isAnimating) return;\n      this.video.isAnimating = true;\n\n      if (this.appStore.isDesktop) {\n        // Animate in\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisiblePlayer, {\n          display: \'block\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisibleTrigger, {\n          opacity: 0.0001,\n          duration: 0.4,\n          ease: \'power2.out\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisiblePoster, {\n          opacity: 0.0001,\n          duration: 0.4,\n          ease: \'power2.out\',\n          onComplete: function onComplete() {\n            node_modules_gsap/* default.set */.ZP.set([_this5.$videoVisibleTrigger, _this5.$videoVisiblePoster], {\n              display: \'none\'\n            });\n          }\n        }); // Play YT video\n\n        obj.playVideo();\n      } else {\n        // Animate in\n        node_modules_gsap/* default.set */.ZP.set(this.$flexibleVideoModal, {\n          display: \'block\',\n          zIndex: 9999\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$flexibleVideoModal, {\n          y: \'-50%\',\n          duration: 1.2,\n          ease: \'expo.inOut\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoModalCloser, {\n          opacity: 1,\n          duration: 0.4,\n          ease: \'power2.out\',\n          delay: 0.8\n        }); // Enable scroll\n\n        this.appUi.disableScroll(); // Play YT video \n\n        node_modules_gsap/* default.delayedCall */.ZP.delayedCall(0.8, function () {\n          obj.playVideo();\n        });\n      }\n    }\n  }, {\n    key: "closeVideoYoutube",\n    value: function closeVideoYoutube(element, obj) {\n      var _this6 = this;\n\n      // Play YT video \n      obj.pauseVideo();\n\n      if (this.appStore.isDesktop) {\n        // Animate out\n        node_modules_gsap/* default.set */.ZP.set([this.$videoVisibleTrigger, this.$videoVisiblePoster], {\n          display: \'block\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisibleTrigger, {\n          opacity: 1,\n          duration: 0.4,\n          ease: \'power2.out\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$videoVisiblePoster, {\n          opacity: 1,\n          duration: 0.4,\n          ease: \'power2.out\',\n          onComplete: function onComplete() {\n            node_modules_gsap/* default.to */.ZP.to(_this6.$videoVisiblePlayer, {\n              display: \'none\'\n            });\n          }\n        });\n      } else {\n        // Animation out\n        node_modules_gsap/* default.to */.ZP.to(this.$videoModalCloser, {\n          opacity: 0.0001,\n          duration: 0.4,\n          ease: \'power2.out\'\n        });\n        node_modules_gsap/* default.to */.ZP.to(this.$flexibleVideoModal, {\n          y: \'-150%\',\n          duration: 1.2,\n          ease: \'expo.inOut\',\n          onComplete: function onComplete() {\n            // Enable scroll\n            _this6.appUi.enableScroll(); // Set animation\n\n\n            node_modules_gsap/* default.set */.ZP.set(_this6.$flexibleVideoModal, {\n              display: \'none\',\n              y: \'100%\',\n              zIndex: 0\n            });\n            _this6.video.isAnimating = false;\n          }\n        });\n      }\n    }\n  }, {\n    key: "initGalleryDraggable",\n    value: function initGalleryDraggable() {\n      var _this7 = this;\n\n      if (this.$flexibleGallery) {\n        var _loop3 = function _loop3(i) {\n          _this7.$gallerySlider = _this7.$flexibleGallery[i].querySelectorAll(\'.slider\');\n          _this7.$gallerySliderInner = _this7.$flexibleGallery[i].querySelectorAll(\'.slider__inner\');\n          _this7.$gallerySliderItems = _this7.$flexibleGallery[i].querySelectorAll(\'.slider__item\');\n\n          for (var j = 0; j < _this7.$gallerySlider.length; j++) {\n            if (_this7.appStore.isDesktop) {\n              _this7.$gallerySliderItems = _this7.$gallerySlider[j].querySelectorAll(\'.slider__item\');\n\n              if (_this7.$gallerySliderItems.length > 2) {\n                _this7._galleryDraggable = new superDraggable_default({\n                  el: _this7.$flexibleGallery[i],\n                  snap: false,\n                  snapTo: \'center\',\n                  dots: false\n                });\n              }\n            } else {\n              _this7._galleryDraggable = new superDraggable_default({\n                el: _this7.$flexibleGallery[i],\n                target: _this7.$gallerySliderInner,\n                snap: false,\n                snapTo: \'center\',\n                dots: false,\n                onRaf: function onRaf(percent, progress, progressOrigin) {\n                  node_modules_gsap/* default.to */.ZP.to(_this7.$flexibleGallery[i].querySelector(\'.slider__progress\').children[0], {\n                    scaleX: progressOrigin + progress\n                  });\n                }\n              });\n            }\n          }\n        };\n\n        for (var i = 0; i < this.$flexibleGallery.length; i++) {\n          _loop3(i);\n        }\n      }\n    }\n  }, {\n    key: "initFooterCanvasPin",\n    value: function initFooterCanvasPin() {\n      var _this8 = this;\n\n      this._footerCanvasPin = ScrollTrigger/* default.create */.Z.create({\n        trigger: this.$footer,\n        start: \'top bottom\',\n        end: \'bottom bottom\',\n        scrub: true,\n        onUpdate: function onUpdate(self) {\n          var posY = -_this8.$canvasFooter.offsetHeight + _this8.$canvasFooter.offsetHeight * 2 * self.progress;\n          node_modules_gsap/* default.set */.ZP.set(_this8.$canvasFooter, {\n            y: posY + \'px\'\n          });\n        }\n      });\n    }\n  }, {\n    key: "raf",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: "resize",\n    value: function resize(width, height) {\n      if (this._galleryDraggable) this._galleryDraggable.resize();\n    }\n  }, {\n    key: "leave",\n    value: function leave() {\n      //console.log("renderAI.leave!--------------------")\n      if (this.appStore.isDesktop) {\n        this.webgl_footer.kill();\n        this.webgl_footer = null;\n      }\n    }\n  }]);\n\n  return RendererSingleCase;\n}(renderer); // Don\'t forget to export your renderer\n\n\n/* harmony default export */ const rendererSingleCase = (RendererSingleCase);\n;// CONCATENATED MODULE: ./app/src/js/renderers/rendererThanks.js\nfunction rendererThanks_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rendererThanks_typeof = function _typeof(obj) { return typeof obj; }; } else { rendererThanks_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rendererThanks_typeof(obj); }\n\nfunction rendererThanks_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rendererThanks_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rendererThanks_createClass(Constructor, protoProps, staticProps) { if (protoProps) rendererThanks_defineProperties(Constructor.prototype, protoProps); if (staticProps) rendererThanks_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rendererThanks_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rendererThanks_setPrototypeOf(subClass, superClass); }\n\nfunction rendererThanks_setPrototypeOf(o, p) { rendererThanks_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rendererThanks_setPrototypeOf(o, p); }\n\nfunction rendererThanks_createSuper(Derived) { var hasNativeReflectConstruct = rendererThanks_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = rendererThanks_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = rendererThanks_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return rendererThanks_possibleConstructorReturn(this, result); }; }\n\nfunction rendererThanks_possibleConstructorReturn(self, call) { if (call && (rendererThanks_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return rendererThanks_assertThisInitialized(self); }\n\nfunction rendererThanks_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rendererThanks_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction rendererThanks_getPrototypeOf(o) { rendererThanks_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rendererThanks_getPrototypeOf(o); }\n\n// GSAP Library\n\n\nnode_modules_gsap/* default.registerPlugin */.ZP.registerPlugin(ScrollTrigger/* default */.Z); // Import Renderer\n\n // Utilities\n\n\n\n\nvar rendererThanks = /*#__PURE__*/function (_Renderer) {\n  rendererThanks_inherits(rendererThanks, _Renderer);\n\n  var _super = rendererThanks_createSuper(rendererThanks);\n\n  function rendererThanks() {\n    rendererThanks_classCallCheck(this, rendererThanks);\n\n    return _super.apply(this, arguments);\n  }\n\n  rendererThanks_createClass(rendererThanks, [{\n    key: "selectors",\n    value: function selectors() {} // eslint-disable-line\n\n  }, {\n    key: "events",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: "preload",\n    value: function preload() {\n      // this.preloadDelay = 1;\n      this.preloadItems = {\n        main: [],\n        secondary: []\n      };\n    }\n  }, {\n    key: "beforeEnter",\n    value: function beforeEnter() {} // eslint-disable-line\n\n  }, {\n    key: "enter",\n    value: function enter() {} // eslint-disable-line\n\n  }, {\n    key: "raf",\n    value: function raf() {} // eslint-disable-line\n\n  }, {\n    key: "resize",\n    value: function resize(width, height) {} // eslint-disable-line\n\n  }]);\n\n  return rendererThanks;\n}(renderer); // Don\'t forget to export your renderer\n\n\n/* harmony default export */ const renderers_rendererThanks = (rendererThanks);\n;// CONCATENATED MODULE: ./app/src/js/transitions/transition.js\nfunction transition_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { transition_typeof = function _typeof(obj) { return typeof obj; }; } else { transition_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return transition_typeof(obj); }\n\nfunction transition_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction transition_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction transition_createClass(Constructor, protoProps, staticProps) { if (protoProps) transition_defineProperties(Constructor.prototype, protoProps); if (staticProps) transition_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction transition_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) transition_setPrototypeOf(subClass, superClass); }\n\nfunction transition_setPrototypeOf(o, p) { transition_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return transition_setPrototypeOf(o, p); }\n\nfunction transition_createSuper(Derived) { var hasNativeReflectConstruct = transition_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = transition_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = transition_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return transition_possibleConstructorReturn(this, result); }; }\n\nfunction transition_possibleConstructorReturn(self, call) { if (call && (transition_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return transition_assertThisInitialized(self); }\n\nfunction transition_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction transition_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction transition_getPrototypeOf(o) { transition_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return transition_getPrototypeOf(o); }\n\n// App\n\n\n // Highway\n\n // Preload\n\n // GSAP Library Library\n\n // Transition\n\nvar Transition = /*#__PURE__*/function (_Highway$Transition) {\n  transition_inherits(Transition, _Highway$Transition);\n\n  var _super = transition_createSuper(Transition);\n\n  function Transition() {\n    transition_classCallCheck(this, Transition);\n\n    return _super.apply(this, arguments);\n  }\n\n  transition_createClass(Transition, [{\n    key: "out",\n    value: function out(_ref) {\n      var from = _ref.from,\n          done = _ref.done;\n      // Store\n      this.appStore = appStore; // App references\n\n      this.appCore = new app_appCore();\n      this.appUi = new app_appUi();\n      if (this.preloadMain) this.preloadMain.cancel();\n      if (this.preloadSecondary) this.preloadSecondary.cancel(); // Out animation\n\n      this.outAnimation(from, done);\n    }\n  }, {\n    key: "outAnimation",\n    value: function outAnimation(from, done) {} // eslint-disable-line\n\n  }, {\n    key: "in",\n    value: function _in(_ref2) {\n      var _this = this;\n\n      var from = _ref2.from,\n          to = _ref2.to,\n          done = _ref2.done;\n      // Store\n      this.appStore = appStore; // App references\n\n      this.appCore = new app_appCore();\n      this.appUi = new app_appUi(); // Preloader\n\n      this.preloadMain = null;\n      this.preloadSecondary = null;\n      this.preloadDelay = 0; // Lazy load\n\n      this.lazyLoad = null; // Remove Old View\n\n      from.remove(); // Reset Scroll\n\n      window.scrollTo(0, 0); // Set animation\n\n      this.setAnimation(from, to);\n      this.preloadItems = this.appCore.highway.To.preloadItems;\n\n      if (this.preloadItems.main.length > 0) {\n        var _preloadOn = new Date().getTime();\n\n        this.preloadMain = preload_it_default()();\n        this.preloadMain.fetch(this.preloadItems.main); // this.preloadMain.onprogress = (event) => { console.log(\'Primary: \' + event.progress + \'%\'); };\n\n        this.preloadMain.oncomplete = function (items) {\n          var _preloadOff = new Date().getTime();\n\n          var _preloadDifference = (_preloadOff - _preloadOn) / 1000;\n\n          var _preloadDelay = Math.max(0, _this.preloadDelay - _preloadDifference);\n\n          node_modules_gsap/* default.delayedCall */.ZP.delayedCall(_preloadDelay, function () {\n            // In animation\n            done();\n\n            _this.inAnimation(from, to, done);\n          });\n        };\n\n        if (this.preloadItems.secondary.length > 0) {\n          this.preloadSecondary = preload_it_default()();\n          this.preloadSecondary.fetch(this.preloadItems.secondary);\n\n          this.preloadSecondary.onprogress = function (event) {\n            console.log(\'Secondary: \' + event.progress + \'%\');\n          };\n        }\n      } else {\n        node_modules_gsap/* default.delayedCall */.ZP.delayedCall(this.preloadDelay, function () {\n          // In animation\n          done();\n\n          _this.inAnimation(from, to, done);\n        });\n      }\n    }\n  }, {\n    key: "setAnimation",\n    value: function setAnimation(from, to) {} // eslint-disable-line\n\n  }, {\n    key: "inAnimation",\n    value: function inAnimation(from, to, done) {} // eslint-disable-line\n\n  }]);\n\n  return Transition;\n}(highway_module/* default.Transition */.Z.Transition);\n\n/* harmony default export */ const transition = (Transition);\n;// CONCATENATED MODULE: ./app/src/js/transitions/transitionFade.js\nfunction transitionFade_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { transitionFade_typeof = function _typeof(obj) { return typeof obj; }; } else { transitionFade_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return transitionFade_typeof(obj); }\n\nfunction transitionFade_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction transitionFade_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction transitionFade_createClass(Constructor, protoProps, staticProps) { if (protoProps) transitionFade_defineProperties(Constructor.prototype, protoProps); if (staticProps) transitionFade_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction transitionFade_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) transitionFade_setPrototypeOf(subClass, superClass); }\n\nfunction transitionFade_setPrototypeOf(o, p) { transitionFade_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return transitionFade_setPrototypeOf(o, p); }\n\nfunction transitionFade_createSuper(Derived) { var hasNativeReflectConstruct = transitionFade_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = transitionFade_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = transitionFade_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return transitionFade_possibleConstructorReturn(this, result); }; }\n\nfunction transitionFade_possibleConstructorReturn(self, call) { if (call && (transitionFade_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return transitionFade_assertThisInitialized(self); }\n\nfunction transitionFade_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction transitionFade_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction transitionFade_getPrototypeOf(o) { transitionFade_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return transitionFade_getPrototypeOf(o); }\n\n// Import Transition\n // GSAP Library Library\n\n // Fade\n\nvar TransitionFade = /*#__PURE__*/function (_Transition) {\n  transitionFade_inherits(TransitionFade, _Transition);\n\n  var _super = transitionFade_createSuper(TransitionFade);\n\n  function TransitionFade() {\n    transitionFade_classCallCheck(this, TransitionFade);\n\n    return _super.apply(this, arguments);\n  }\n\n  transitionFade_createClass(TransitionFade, [{\n    key: "outAnimation",\n    value: function outAnimation(from, done) {\n      this.outDuration = 1.2;\n      node_modules_gsap/* default.fromTo */.ZP.fromTo(from, {\n        opacity: 1\n      }, {\n        opacity: 0.0001,\n        duration: this.outDuration,\n        onComplete: function onComplete() {\n          done();\n        }\n      });\n    }\n  }, {\n    key: "inAnimation",\n    value: function inAnimation(from, to, done) {\n      window.scrollTo(0, 0);\n      document.documentElement.scrollTop = 0;\n      this.inDuration = 0.6;\n      node_modules_gsap/* default.to */.ZP.to(to, {\n        opacity: 1,\n        duration: this.inDuration\n      });\n    }\n  }]);\n\n  return TransitionFade;\n}(transition);\n\n/* harmony default export */ const transitionFade = (TransitionFade);\n;// CONCATENATED MODULE: ./app/src/js/transitions/transitionMask.js\nfunction transitionMask_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { transitionMask_typeof = function _typeof(obj) { return typeof obj; }; } else { transitionMask_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return transitionMask_typeof(obj); }\n\nfunction transitionMask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction transitionMask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction transitionMask_createClass(Constructor, protoProps, staticProps) { if (protoProps) transitionMask_defineProperties(Constructor.prototype, protoProps); if (staticProps) transitionMask_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction transitionMask_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) transitionMask_setPrototypeOf(subClass, superClass); }\n\nfunction transitionMask_setPrototypeOf(o, p) { transitionMask_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return transitionMask_setPrototypeOf(o, p); }\n\nfunction transitionMask_createSuper(Derived) { var hasNativeReflectConstruct = transitionMask_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = transitionMask_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = transitionMask_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return transitionMask_possibleConstructorReturn(this, result); }; }\n\nfunction transitionMask_possibleConstructorReturn(self, call) { if (call && (transitionMask_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return transitionMask_assertThisInitialized(self); }\n\nfunction transitionMask_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction transitionMask_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction transitionMask_getPrototypeOf(o) { transitionMask_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return transitionMask_getPrototypeOf(o); }\n\n// Import Transition\n // GSAP Library Library\n\n // Mask\n\nvar TransitionMask = /*#__PURE__*/function (_Transition) {\n  transitionMask_inherits(TransitionMask, _Transition);\n\n  var _super = transitionMask_createSuper(TransitionMask);\n\n  function TransitionMask() {\n    transitionMask_classCallCheck(this, TransitionMask);\n\n    return _super.apply(this, arguments);\n  }\n\n  transitionMask_createClass(TransitionMask, [{\n    key: "outAnimation",\n    value: function outAnimation(from, done) {\n      this.outDuration = 1;\n      node_modules_gsap/* default.set */.ZP.set(this.appUi.$mask, {\n        display: \'block\'\n      });\n      node_modules_gsap/* default.fromTo */.ZP.fromTo(this.appUi.$mask.children[0], {\n        y: \'100%\'\n      }, {\n        y: \'0%\',\n        duration: this.outDuration,\n        ease: \'power4.in\',\n        onComplete: function onComplete() {\n          console.log(\'-- out Done\');\n          done();\n        }\n      });\n    }\n  }, {\n    key: "inAnimation",\n    value: function inAnimation(from, to, done) {\n      var _this = this;\n\n      this.inDuration = 1;\n      node_modules_gsap/* default.to */.ZP.to(this.appUi.$mask.children[0], {\n        y: \'-100%\',\n        duration: this.inDuration,\n        ease: \'power4.out\',\n        onComplete: function onComplete() {\n          console.log(\'-- in Done\');\n          node_modules_gsap/* default.set */.ZP.set(_this.appUi.$mask, {\n            display: \'none\'\n          });\n        }\n      });\n    }\n  }]);\n\n  return TransitionMask;\n}(transition);\n\n/* harmony default export */ const transitionMask = (TransitionMask);\n;// CONCATENATED MODULE: ./app/src/js/app/appCore.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = appCore_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction appCore_toConsumableArray(arr) { return appCore_arrayWithoutHoles(arr) || appCore_iterableToArray(arr) || appCore_unsupportedIterableToArray(arr) || appCore_nonIterableSpread(); }\n\nfunction appCore_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction appCore_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return appCore_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return appCore_arrayLikeToArray(o, minLen); }\n\nfunction appCore_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction appCore_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return appCore_arrayLikeToArray(arr); }\n\nfunction appCore_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction appCore_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction appCore_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction appCore_createClass(Constructor, protoProps, staticProps) { if (protoProps) appCore_defineProperties(Constructor.prototype, protoProps); if (staticProps) appCore_defineProperties(Constructor, staticProps); return Constructor; }\n\n// App\n\n // Classes\n\n // Highway\n\n // Import Renderers\n\n\n\n\n\n\n\n\n // Import Transitions\n\n\n // GSAP Library\n\n\nvar appCore_singleton = null;\n\nvar appCore = /*#__PURE__*/function () {\n  function appCore(data) {\n    appCore_classCallCheck(this, appCore);\n\n    if (!appCore_singleton) {\n      this.data = data;\n      appCore_singleton = this;\n    } else {\n      return appCore_singleton;\n    } // Store\n\n\n    this.appStore = appStore; // App references\n\n    this.appUi = new app_appUi(); // Events\n\n    this.domEvents = new domEvents_default(); // Highway core\n\n    this.highway = null; // Global vars\n\n    this.appStore.isDesktop = window.innerWidth > 1100;\n  }\n\n  appCore_createClass(appCore, [{\n    key: "init",\n    value: function init() {\n      var _this = this;\n\n      // Call Highway.Core once.\n      this.highway = new highway_module/* default.Core */.Z.Core({\n        renderers: {\n          "default": rendererDefault,\n          home: rendererHome,\n          ai: rendererAI,\n          data: rendererData,\n          about: rendererAbout,\n          singlecase: rendererSingleCase,\n          thanks: renderers_rendererThanks\n        },\n        transitions: {\n          "default": transitionFade,\n          contextual: {\n            mask: transitionMask\n          }\n        }\n      }); // On load:\n      // Query admin bar links and detach them from Highway transitions\n\n      var adminBarLinks = document.querySelectorAll(\'#wpadminbar a\');\n      if (adminBarLinks) this.highway.detach(adminBarLinks); // Unset cookies bar links to prevent reload the page\n\n      var cookiesLinks = document.querySelectorAll(\'#cookie-law-info-bar a\');\n      if (cookiesLinks) this.highway.detach(cookiesLinks);\n      this.highway.on(\'NAVIGATE_IN\', function (_ref) {\n        var to = _ref.to,\n            trigger = _ref.trigger,\n            location = _ref.location;\n\n        _this.navigateIn(to, trigger, location);\n      });\n      this.highway.on(\'NAVIGATE_OUT\', function (_ref2) {\n        var from = _ref2.from,\n            trigger = _ref2.trigger,\n            location = _ref2.location;\n\n        _this.navigateOut(from, trigger, location);\n      });\n      this.highway.on(\'NAVIGATE_END\', function (_ref3) {\n        var to = _ref3.to,\n            from = _ref3.from,\n            trigger = _ref3.trigger,\n            location = _ref3.location;\n\n        _this.navigateEnd(to, from, trigger, location);\n      });\n    }\n  }, {\n    key: "navigateStart",\n    value: function navigateStart() {\n      // Start navigation on 0\n      window.scrollTo(0, 0);\n      document.documentElement.scrollTop = 0;\n      if (window.history.scrollRestoration) window.history.scrollRestoration = \'manual\';\n    }\n  }, {\n    key: "navigateOut",\n    value: function navigateOut(from, trigger, location) {\n      this.appStore.from = from.view.dataset.routerView;\n      this.appUi.closeMenu(); // Hide header\n\n      this.appUi.hideHeader();\n    }\n  }, {\n    key: "navigateIn",\n    value: function navigateIn(to, trigger, location) {\n      this.appStore.to = to.view.dataset.routerView;\n      if (!this.appStore.isDesktop) document.documentElement.scrollTop = 0; // Add background color\n\n      if (this.appStore.to === \'home\' || this.appStore.to === \'singlecase\' || this.appStore.to === \'default\') this.appUi.goLight();else this.appUi.goDark(); // Remove active item\n\n      if (this.appUi.$menu.querySelector(\'.is-active\')) this.appUi.$menu.querySelector(\'.is-active\').classList.remove(\'is-active\'); // Add active item\n\n      if (this.appUi.$menu.querySelector(\'.menu-item--\' + this.appStore.to)) this.appUi.$menu.querySelector(\'.menu-item--\' + this.appStore.to).classList.add(\'is-active\');\n    }\n  }, {\n    key: "navigateEnd",\n    value: function navigateEnd(to, from, trigger, location) {\n      var _this2 = this;\n\n      this.appStore.to = to.view.dataset.routerView;\n      if (!this.appStore.isDesktop) document.documentElement.scrollTop = 0; // Set classes\n\n      document.querySelector(\'body\').setAttribute(\'class\', to.page.body.getAttribute(\'class\'));\n      if (this.appStore.to !== \'home\') document.body.classList.add(\'light\');else document.body.classList.remove(\'light\');\n      if (this.appStore.to === \'default\') document.body.classList.remove(\'light\'); // Show header\n\n      if (this.appStore.to !== \'home\') node_modules_gsap/* default.delayedCall */.ZP.delayedCall(1.2, function () {\n        _this2.appUi.showHeader();\n      }); // Add background color\n\n      if (this.appStore.to === \'home\' || this.appStore.to === \'singlecase\' || this.appStore.to === \'default\') this.appUi.goLight();else this.appUi.goDark(); // Query admin bar links, and new page\'s admin bar links\n\n      var adminBarLinks = document.querySelectorAll(\'#wpadminbar a\');\n      var newAdminBarLinks = to.page.body.querySelectorAll(\'#wpadminbar a\'); // Replace every admin bar link\'s href value with new value\n\n      if (adminBarLinks) {\n        for (var i = 0; i < newAdminBarLinks.length; i++) {\n          adminBarLinks[i].href = newAdminBarLinks[i].href;\n        } // Detach admin bar links from Highway transitions\n\n\n        this.highway.detach(adminBarLinks);\n      } // this.manageScripts(to);\n\n    }\n  }, {\n    key: "manageScripts",\n    value: function manageScripts(to) {\n      // Your main JS file, used to prepend other scripts\n      var main = document.querySelector(\'#main-script\');\n\n      var a = appCore_toConsumableArray(to.page.querySelectorAll(\'script:not([data-no-reload])\'));\n\n      var b = appCore_toConsumableArray(document.querySelectorAll(\'script:not([data-no-reload])\')); // Compare Scripts\n\n\n      for (var i = 0; i < b.length; i++) {\n        var c = b[i];\n\n        for (var j = 0; j < a.length; j++) {\n          var d = a[j];\n\n          if (c.outerHTML === d.outerHTML) {\n            // Create Shadow Script\n            var script = document.createElement(c.tagName); // Loop Over Attributes\n\n            for (var k = 0; k < c.attributes.length; k++) {\n              // Get Attribute\n              var attr = c.attributes[k]; // Set Attribute\n\n              script.setAttribute(attr.nodeName, attr.nodeValue);\n            } // Inline Script\n\n\n            if (c.innerHTML) script.innerHTML = c.innerHTML; // Replace\n\n            c.parentNode.replaceChild(script, c); // Clean Arrays\n\n            b.splice(i, 1);\n            a.splice(j, 1); // Exit Loop\n\n            break;\n          }\n        }\n      } // Remove Useless\n\n\n      var _iterator = _createForOfIteratorHelper(b),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _script = _step.value;\n\n          // Remove\n          _script.parentNode.removeChild(_script);\n        } // Add Scripts\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(a),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _script2 = _step2.value;\n          var loc = _script2.parentNode.tagName;\n          if (loc === \'HEAD\') document.head.appendChild(_script2);\n          if (loc === \'BODY\') document.body.insertBefore(_script2, main);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: "selectors",\n    value: function selectors() {} // eslint-disable-line\n\n  }, {\n    key: "events",\n    value: function events() {} // eslint-disable-line\n\n  }, {\n    key: "resize",\n    value: function resize(width, height) {} // eslint-disable-line\n\n  }]);\n\n  return appCore;\n}();\n\n/* harmony default export */ const app_appCore = (appCore);\n;// CONCATENATED MODULE: ./app/src/js/utils/debounce.js\n//Copyright 2018 Vicente Lucendo - vicen@vlucendo.com\n//simple debounce with callback\n/* harmony default export */ function debounce(callback, delay) {\n  var timeout;\n  return function () {\n    clearTimeout(timeout);\n    timeout = setTimeout(callback, delay);\n  };\n}\n;\n// EXTERNAL MODULE: ./node_modules/bowser/es5.js\nvar es5 = __webpack_require__(1206);\nvar es5_default = /*#__PURE__*/__webpack_require__.n(es5);\n;// CONCATENATED MODULE: ./app/src/js/app/app.js\nfunction app_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction app_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction app_createClass(Constructor, protoProps, staticProps) { if (protoProps) app_defineProperties(Constructor.prototype, protoProps); if (staticProps) app_defineProperties(Constructor, staticProps); return Constructor; }\n\n// css\n // eslint-disable-line\n// App\n\n\n\n // Classes\n\n // GSAP Library\n// import gsap from \'gsap\';\n// Utils\n\n\n\n\nvar Application = /*#__PURE__*/function () {\n  function Application(options) {\n    app_classCallCheck(this, Application);\n\n    // Store\n    this.appStore = appStore; // App references\n\n    this.appCore = new app_appCore();\n    this.appUi = new app_appUi(); // Events\n\n    this.domEvents = new domEvents_default(); // Get current url\n\n    this.appStore.rootUrl = window.location.protocol + \'// \' + window.location.host; // Get client info\n\n    var clientInfo = es5_default().getParser(window.navigator.userAgent).parsedResult;\n    this.setOS(clientInfo);\n    this.setDevice(clientInfo);\n    this.checkElements();\n    this.addClasses();\n    this.sayHello();\n    this.selectors();\n    this.events();\n    this.init();\n  }\n\n  app_createClass(Application, [{\n    key: "setOS",\n    value: function setOS(clientInfo) {\n      var os = clientInfo.os.name.toLowerCase(); // Detect mac and ios, default windows\n\n      switch (os) {\n        case \'macos\':\n          this.appStore.client.os = \'mac\';\n          break;\n\n        case \'ios\':\n          this.appStore.client.os = \'ios\';\n          break;\n\n        default:\n          this.appStore.client.os = \'windows\';\n      }\n    }\n  }, {\n    key: "setDevice",\n    value: function setDevice(clientInfo) {\n      // Get device\n      this.appStore.client.device = clientInfo.platform.type === \'desktop\' ? \'desktop\' : \'mobile\'; // Detect browser (only the major ones, default is chrome)\n\n      switch (clientInfo.browser.name) {\n        case \'Internet Explorer\':\n          this.appStore.client.browser = \'explorer\';\n          break;\n\n        case \'Microsoft Edge\':\n          this.appStore.client.browser = \'edge\';\n          break;\n\n        case \'Firefox\':\n          this.appStore.client.browser = \'firefox\';\n          break;\n\n        case \'Safari\':\n          this.appStore.client.browser = \'safari\';\n          break;\n\n        default:\n          this.appStore.client.browser = \'chrome\';\n      }\n    }\n  }, {\n    key: "checkElements",\n    value: function checkElements() {\n      if (this.appStore.isDesktop) {\n        this.$elementsMobile = document.querySelectorAll(\'[data-mobile]\');\n\n        for (var i = 0; i < this.$elementsMobile.length; i++) {\n          this.$elementsMobile[i].remove();\n        }\n      } else {\n        this.$elementsDesktop = document.querySelectorAll(\'[data-desktop]\');\n\n        for (var _i = 0; _i < this.$elementsDesktop.length; _i++) {\n          this.$elementsDesktop[_i].remove();\n        }\n      }\n    }\n  }, {\n    key: "addClasses",\n    value: function addClasses() {\n      document.documentElement.classList.add(this.appStore.client.device);\n      document.documentElement.classList.add(this.appStore.client.os);\n      document.documentElement.classList.add(this.appStore.client.browser);\n    }\n  }, {\n    key: "sayHello",\n    value: function sayHello() {\n      if (this.appStore.client.browser === \'chrome\' || this.appStore.client.browser === \'firefox\') {\n        var args = [\'\\n%c Developed with ♥ by Dgrees® - https:// dgrees.studio %c\\n\', \'display: block; padding: 5px 10px; background: #000022; line-height: 40px; color: #ffffff;\', \'background: #fff;\'];\n        window.console.log.apply(console, args);\n      } else {\n        window.console.log(\'Developed by Dgrees®\');\n      }\n    }\n  }, {\n    key: "selectors",\n    value: function selectors() {\n      this.appCore.selectors();\n      this.appUi.selectors();\n    }\n  }, {\n    key: "events",\n    value: function events() {\n      var _this = this;\n\n      // Bind debounced resize\n      this.domEvents.add(window, \'resize\', debounce(function () {\n        _this.resize(window.innerWidth, window.innerHeight);\n      }, 150));\n      this.appCore.events();\n      this.appUi.events();\n    }\n  }, {\n    key: "init",\n    value: function init() {\n      this.appCore.init();\n      this.appUi.init(); // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n\n      var vh = window.innerHeight * 0.01;\n      this.appStore.vars.vh = vh * 100;\n      document.documentElement.style.setProperty(\'--vh\', "".concat(vh, "px"));\n      var vho = window.outerHeight * 0.01;\n      this.appStore.vars.vho = vho * 100;\n      document.documentElement.style.setProperty(\'--vho\', "".concat(vho, "px"));\n      var vhr = document.getElementById(\'vhr\').getBoundingClientRect().height * 0.01;\n      this.appStore.vars.vhr = vhr * 100;\n      document.documentElement.style.setProperty(\'--vhr\', "".concat(vhr, "px"));\n      var vhd = vhr - vh;\n      this.appStore.vars.vhd = vhd * 100;\n      document.documentElement.style.setProperty(\'--vhd\', "".concat(vhd, "px"));\n      this.resize(window.innerWidth, window.innerHeight);\n    }\n  }, {\n    key: "resize",\n    value: function resize(width, height) {\n      // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n      var vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty(\'--vh\', "".concat(vh, "px")); // Set size vars\n\n      this.appStore.client.sizes.width = width;\n      this.appStore.client.sizes.height = height;\n      this.appCore.resize(width, height);\n      this.appUi.resize(width, height);\n      if (this.appStore.currentSection !== null) this.appStore.currentSection.beforeResize(width, height);\n    }\n    /* _checkOrientation()\n    {\n        // if it\'s not affected by orientation pass the current one (0: horizontal, 1: vertical)\n        if(this.orientation === orientations.NONE)\n            this.// (this.appStore.client.sizes.width > this.appStore.client.sizes.height ? 0 : 1);\n         if(this.orientation === orientations.VERTICAL)\n        {\n            // if width is bigger than height\n            if(this.appStore.client.sizes.width > this.appStore.client.sizes.height)\n                this.rotateDevice(true);\n            else\n                this.rotateDevice(false);\n        }\n        else if(this.orientation === orientations.HORIZONTAL)\n        {\n            // if height is bigger than width\n            if(this.appStore.client.sizes.height > this.appStore.client.sizes.width)\n                this.rotateDevice(true);\n            else\n                this.rotateDevice(false);\n        }\n    } */\n    // rotateDevice(action){} // eslint-disable-line\n\n  }]);\n\n  return Application;\n}();\n\n/* harmony default export */ const app_app = (Application);\n;// CONCATENATED MODULE: ./app/src/js/loader.js\n// apps\n // on document ready create loader\n\nif (document.readyState !== \'loading\') {\n  var app = new app_app();\n} else {\n  document.addEventListener(\'DOMContentLoaded\', function () {\n    var app = new app_app();\n  }, false); //eslint-disable-line\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6495\n'
            );
        },
    },
        __webpack_module_cache__ = {},
        deferred;
    function __webpack_require__(g) {
        var t = __webpack_module_cache__[g];
        if (void 0 !== t) return t.exports;
        var I = (__webpack_module_cache__[g] = { exports: {} });
        return __webpack_modules__[g].call(I.exports, I, I.exports, __webpack_require__), I.exports;
    }
    (__webpack_require__.m = __webpack_modules__),
        (__webpack_require__.amdO = {}),
        (deferred = []),
        (__webpack_require__.O = (g, t, I, n) => {
            if (!t) {
                var e = 1 / 0;
                for (C = 0; C < deferred.length; C++) {
                    for (var [t, I, n] = deferred[C], l = !0, c = 0; c < t.length; c++) (!1 & n || e >= n) && Object.keys(__webpack_require__.O).every((g) => __webpack_require__.O[g](t[c])) ? t.splice(c--, 1) : ((l = !1), n < e && (e = n));
                    if (l) {
                        deferred.splice(C--, 1);
                        var i = I();
                        void 0 !== i && (g = i);
                    }
                }
                return g;
            }
            n = n || 0;
            for (var C = deferred.length; C > 0 && deferred[C - 1][2] > n; C--) deferred[C] = deferred[C - 1];
            deferred[C] = [t, I, n];
        }),
        (__webpack_require__.n = (g) => {
            var t = g && g.__esModule ? () => g.default : () => g;
            return __webpack_require__.d(t, { a: t }), t;
        }),
        (__webpack_require__.d = (g, t) => {
            for (var I in t) __webpack_require__.o(t, I) && !__webpack_require__.o(g, I) && Object.defineProperty(g, I, { enumerable: !0, get: t[I] });
        }),
        (__webpack_require__.g = (function () {
            if ("object" == typeof globalThis) return globalThis;
            try {
                return this || new Function("return this")();
            } catch (g) {
                if ("object" == typeof window) return window;
            }
        })()),
        (__webpack_require__.o = (g, t) => Object.prototype.hasOwnProperty.call(g, t)),
        (() => {
            var g = { 143: 0 };
            __webpack_require__.O.j = (t) => 0 === g[t];
            var t = (t, I) => {
                var n,
                    e,
                    [l, c, i] = I,
                    C = 0;
                if (l.some((t) => 0 !== g[t])) {
                    for (n in c) __webpack_require__.o(c, n) && (__webpack_require__.m[n] = c[n]);
                    if (i) var o = i(__webpack_require__);
                }
                for (t && t(I); C < l.length; C++) (e = l[C]), __webpack_require__.o(g, e) && g[e] && g[e][0](), (g[l[C]] = 0);
                return __webpack_require__.O(o);
            },
                I = (self.webpackChunkmioticonsulting = self.webpackChunkmioticonsulting || []);
            I.forEach(t.bind(null, 0)), (I.push = t.bind(null, I.push.bind(I)));
        })();
    var __webpack_exports__ = __webpack_require__.O(void 0, [736], () => __webpack_require__(6495));
    __webpack_exports__ = __webpack_require__.O(__webpack_exports__);
})();
