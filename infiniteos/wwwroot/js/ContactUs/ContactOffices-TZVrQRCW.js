import { j as t, r as d } from "./client-DVrblGvH"
import { c as m } from "./clsx-B-dksMZM.js";
import { d as u, T as v } from "./web-FDxr5o42.js";
import { u as g, N as k } from "./NavigationBar-D0Oz531L.js";
import { u as x } from "./hook-Dy1HR1NH.js";
import { u as j } from "./Video-BRQ7BetD.js";
const b = "_contactOfficesWrapper_hu8ka_23", N = "_regionContainer_hu8ka_28", T = "_contactOfficesContent_hu8ka_58", y = "_officesContainer_hu8ka_63", E = "_officeItem_hu8ka_74", W = "_noBorderTop_hu8ka_101", I = "_officeItemEmpty_hu8ka_126", B = "_locationsContainer_hu8ka_129", O = "_infoTitle_hu8ka_132", L = "_text_hu8ka_135", $ = "_copyWrapper_hu8ka_138", w = "_infoContainer_hu8ka_174", S = "_leftInfos_hu8ka_181", A = "_infoWrapper_hu8ka_186", P = "_infoEmail_hu8ka_202", R = "_bottomInfoWrapper_hu8ka_218", F = "_copyText_hu8ka_229", M = "_copiedText_hu8ka_230", Q = "_copied_hu8ka_230", q = "_comma_hu8ka_304", z = "_embla_hu8ka_308", D = "_navigationBar_hu8ka_321", e = { contactOfficesWrapper: b, regionContainer: N, contactOfficesContent: T, officesContainer: y, officeItem: E, noBorderTop: W, officeItemEmpty: I, locationsContainer: B, infoTitle: O, text: L, copyWrapper: $, infoContainer: w, leftInfos: S, infoWrapper: A, infoEmail: P, bottomInfoWrapper: R, copyText: F, copiedText: M, copied: Q, comma: q, embla: z, navigationBar: D }, G = ({ country: o, continentIndex: s, index: r }) => { const { t: a } = x(), { add: i } = j(), _ = f => { const c = f.currentTarget, n = c.getAttribute("data-copy"); c.classList.add(e.copied), setTimeout(() => { c.classList.remove(e.copied) }, 2e3), n && navigator.clipboard && navigator.clipboard.writeText(n).then(() => { c.classList.add(e.copied), setTimeout(() => { c.classList.remove(e.copied) }, 2e3) }).catch(h => { console.error("Erreur lors de la copie :", h) }) }; return t.jsxs("div", { ref: i(`country-${s}`, r), "data-mouse-only": !0, className: m(e.officeItem, { [e.noBorderTop]: r > 1 }), "data-object": "grid", "data-config": "office", "data-border-radius": "0", children: [t.jsx("h3", { children: o.country }), t.jsx("div", { className: e.locationsContainer, children: o.offices.map((f, c) => t.jsxs(d.Fragment, { children: [t.jsx("span", { children: f }), c < o.offices.length - 1 && t.jsx("span", { className: e.comma, children: "," })] }, c)) }), t.jsx("div", { className: e.infoContainer, children: t.jsx("div", { className: e.leftInfos, children: t.jsxs("div", { className: m(e.infoWrapper, e.infoEmail), children: [t.jsx("div", { className: e.infoTitle, children: a("app.contact.email") }), t.jsxs("div", { className: e.bottomInfoWrapper, children: [t.jsx("a", { href: `mailto:${o.email}`, className: e.text, children: o.email }), t.jsxs("button", { className: e.copyWrapper, "data-copy": o.email, onClick: _, children: [t.jsx("span", { className: e.copyText, children: a("app.contact.copy") }), t.jsx("span", { className: e.copiedText, children: a("app.contact.copied") })] })] })] }) }) })] }) }, H = ({ item: o, index: s }) => { const { t: r } = x(), { add: a } = j(), i = u(), [_, f] = d.useState(0), [c, n] = g({ active: !0, breakpoints: { "(min-width: 1024px)": { active: !1 } }, container: ".office-container" }); d.useEffect(() => { if ((i === "mobile" || i === "tablet") && window.innerWidth < 1024 && n) { const l = () => f(n.selectedScrollSnap()); return n.on("select", l), l(), () => { n.off("select", l) } } }, [i, n]); const h = () => { n && n.scrollPrev() }, C = () => { n && n.scrollNext() }; return t.jsxs("div", { ref: c, className: e.embla, children: [t.jsxs("div", { "data-anchor": r(`enums.continents.${o.continent}`), className: e.regionContainer, children: [t.jsx(v, { tag: "h2", children: r(`enums.continents.${o.continent}`) }), t.jsx("div", { className: m(e.officesContainer, "office-container"), children: o.countries.map((l, p) => l.country === "Empty" ? t.jsx("div", { ref: a(`empty-${s}`, p), className: m(e.officeItem, e.officeItemEmpty, { [e.noBorderTop]: p > 1 }), "data-object": "grid", "data-config": "officeEmpty", "data-border-radius": "0" }, p) : t.jsx(G, { country: l, continentIndex: s, index: p }, p)) })] }), o.countries.length > 1 && t.jsx(k, { currentIndex: _, itemsLength: o.countries.length, className: e.navigationBar, onPrev: h, onNext: C })] }) }, Z = ({ continents: o }) => { const s = u(), r = d.useMemo(() => (s !== "mobile" && s !== "tablet" && o.forEach(a => { a.countries.length > 2 && a.countries[2].country !== "Empty" && a.countries.splice(2, 0, { country: "Empty", email: "", offices: [] }) }), o), [o, s]); return t.jsx("div", { className: e.contactOfficesWrapper, children: t.jsx("div", { className: "dk:container-grid", children: t.jsx("div", { className: m(e.contactOfficesContent, "dk:col-start-2 dk:col-end-12"), children: r.map((a, i) => t.jsx(H, { item: a, index: i }, i)) }) }) }) }; export { Z as C };
